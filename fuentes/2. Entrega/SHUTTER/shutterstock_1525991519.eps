%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: a52001ed-3ec4-3157-8ceb-d5de3a5fb774.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: huseyn
%%CreationDate: 10/8/2019
%%BoundingBox: 0 0 3590 2248
%%HiResBoundingBox: 0 0 3590 2247.8426
%%CropBox: 0 0 3590 2247.8426
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">earthquake icons set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>earthquake icons set. Collection of earthquake with meteorite, drought, flood, landslide, eruption, tsunami. Editable and scalable earthquake icons.</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">earthquake icons set. Collection of earthquake with meteorite, drought, flood, landslide, eruption, tsunami. Editable and scalable earthquake icons.</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>earthquake</rdf:li>
               <rdf:li>icon</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>meteorite</rdf:li>
               <rdf:li>drought</rdf:li>
               <rdf:li>flood</rdf:li>
               <rdf:li>landslide</rdf:li>
               <rdf:li>eruption</rdf:li>
               <rdf:li>tsunami</rdf:li>
               <rdf:li>danger</rdf:li>
               <rdf:li>fire</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>disaster</rdf:li>
               <rdf:li>risk</rdf:li>
               <rdf:li>natural</rdf:li>
               <rdf:li>accident</rdf:li>
               <rdf:li>house</rdf:li>
               <rdf:li>nature</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>storm</rdf:li>
               <rdf:li>earth</rdf:li>
               <rdf:li>volcano</rdf:li>
               <rdf:li>black</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>hurricane</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>insurance</rdf:li>
               <rdf:li>water</rdf:li>
               <rdf:li>silhouette</rdf:li>
               <rdf:li>wave</rdf:li>
               <rdf:li>safety</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>sea</rdf:li>
               <rdf:li>warning</rdf:li>
               <rdf:li>rain</rdf:li>
               <rdf:li>ocean</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-10-08T15:21:14.52+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxu8&#xA;1C81rVW0nSpJrW0sZaavqUYCfEFqLaBnDVcllLsB8I2rU5lRgIR4pUSeQ/SXFlMzlwxsAcz+gJRq&#xA;c+saVqMGn6zq0tp5ckeT6trXqRpMZCitHb3MhQLGFpIVf9qig/5V0BGcTKEbn/N/SPsachlCQjOV&#xA;Q/nfoP2pv5P8xtqP1jT5biHUJ7BUrqdpIk0E6OWCsxj+GOX4fjj+kbHKdTh4alRF9DzH7PNu02bi&#xA;uNg11HI/t8mSZiuU7FXYqlHmY6gtgXtr8afD9m5mW1ku56OQoMIjccGG+5R/ltl2Dh4txfxofH8B&#xA;pz8XDsa+Fn4fgsfg1vzlNEU8vabLPZ2nNmudbrDNd/GOMdvQoy1WvF5V8K5knFiH1nc/zenv/Y4w&#xA;y5T9AsD+d1937WRaTr6300lpPZ3Fhfw19W3mjJWgCnkk6coXB5Do1fbMbJh4RYII/HTm5OPNxGiC&#xA;D+OvJNcpbnYqxL8yPPMflbRx9XX6xrl+fR0qzA5M0hIXmVG5VSw27mi98VYVoP5ja75Tk+redL6L&#xA;VrCX0iupWLx3L20koq6XPpEEBT0+Hf8AYqPhVV7BFNFLEk0bB4pFDo4NQVIqCD8sVdFNFNGJIXWS&#xA;NvsuhDKe2xGKrsVdiqE1bVLXS9Onv7ot6MABKoOTsxIVURR1Z2IVR4nFWBSeZPM2s3ulPa6jb6fF&#xA;PqsdodKszHdT8YQZ7kXc5DItIYmHGIdSPjbpir0cuoYKSAzVIWu5A6/rxVvFXYq7FVNrm3SdIGlR&#xA;Z5ATHEWAdgvUqvU0xVI9c80XtqYIdF0e41u5uQjxNERDaCNwT6jXbgxUoOgqT4YqxnWLr8wiqWmq&#xA;rc2Lh/XtNZ8vxC6gDcA3oXVpJzndVbkvJaBtum+Kpro3mmSB4l13WIjLM/1eGxfTprC6lllZfSaO&#xA;GSWaRkHxAkJTvUcTirMcVdirsVdirEPPfnh9EEWl6TD9d8x34pZ2o3WMGv72U7AKKE7nt4AnM3Sa&#xA;XxPVLaA5uFq9V4fpjvM8mIQ6iZNU/RPmmK3j8y3KyJFqCQwmC5ikKKsiSenJ6k0SB+CcFDGinemZ&#xA;ph6eLHfAOm9j9h+zm4QncuHJXGetCj+0fbyZBY6Zb210t3Z2EVvdciYCIgPSM6cY05m2qAkYMrt1&#xA;VzwO2Y05kiibH6vj8Pdu5MIAGwKP6/8AN+J89mWaFJfTWrXNzI7JMQbZJFCMI1ACuy+nEyvJ9tlY&#xA;fCTQZh5QAaDmYiSLKZZU2uxVi3mKTUNR1RLHSrQTXWklLw3E11JawLM6uIkZYkkabb4mWgFNuW5z&#xA;LwiMY3I7S25Wf2OJmMpSqI3jvzoftXxeVtbhtVih8yXaSJGaqsVoI/X6ghfRJWOp3SpqO/iDngTv&#xA;Afby+ajTzA2mfs5/JF+WvMcep2UK3ZS31UNLBcWnNSTLbN6czRUJ5Jy7jx3yGfDwnbePf7+TZgzc&#xA;Y32l3e7mneUN7sVdirAfzU060t47DzRLp73y6T9Zj1D0QDIllcWs0byBWND6cjI1aEqvI+OKvH7G&#xA;+1G3lvNAi04z6nqKR2q2d5NbWciM8kUkdbN0iqzMqU5SDqadcVeieY/Nmrax5R0TTZ7dtPvNcluF&#xA;vYLRTMY7axl9OWL0leJ5A54oypINiaE9Cqyf8ruS6frMSokVpDqs8dtBFC8EcdI4zMI43JKr65kP&#xA;H9k1FT1xVmeKuxVKvNNvpVxoF5Dqt0LGxKBpL0yLEYWRg6SB2+EFHUMK98VeV6VJDZa9BJaapZac&#xA;JxILHUdRijsFkM9FkmtrEuJZnYIFR5DHEo2RTWmKsw0jyzaQfmAtwLmW/vdN09mvr65cvO819IBE&#xA;KALHGix28lEjAX4unTFWXXesaTZ3dtZ3d5DBd3rFLS3kkVZJWAqQik1b6MVReKuxVg/mvy5Br3mh&#xA;7b4Yr+HSvX0y8I+K3ukueUUqkb7MByA6ioxVA+TLjzg+vXbXi/V4rVJludHMhABohgS2iaJYwitz&#xA;AlSUh1I5ANsqrK/KmuX+qaZC+rWq6bq7q0sum8iZI4/UZEcqwVqNw8MVX6Z5P8tabfPqFrYp+kX2&#xA;N9MXnuKU48RNMZJFWnYGmKpxirsVdirsVeP+bvNPlGW7vdRggMs1/p9zY3gZZCUlEsccYn9Jqxh0&#xA;jbiQRyFM3WnwZQBEnlIEfsdJqNRiJMgOcSD9nNLtA1LyXbXOk2BgaGx0zVZbyWW4iljKA2AaMzeo&#xA;0nGQ3FFVFPxcBt425oZSJG95Rrb+t0+H3teGeIGMa2jK9/6vX4/cyRPNvkKRQtxc3VXgP1oTWiD9&#xA;40vO4t5gIv767C8HQbMq7b7nF/L5hyA59/yI35RcoajCeZPLu+YO3OTL/LnnXQNena1015PXhhWW&#xA;eF42jMVW4+m9ejqRuBmFm0s8YuTm4dVDIain2Y7kOxVg1zrUWgyeZ7f1lTXLmVp9HWRC8116tuno&#xA;rGtf3ojm5RBV+yBv45sI4jk4D/AOflvv7tt3Xyy+Hxj+M8vPbb377MaPlm+u4JdOaKW51CGSV/MN&#xA;mk7QC6k+tR3MU7Rq6RstxbiSNTSisQP2dsrxwDxch/Cautqr4Gj/AGuL4BI4eZ/iF1e938RY/sZh&#xA;Z6n5Ws/qc62zwG2E8VvA+nTLcw8yHMUSRRCiqDQ0U8vE7k4UoZJWL51/EKP2ubHJjjRrlf8ACbHk&#xA;NkzsPM7XeqxWL6bd2kdxFJLbXFyqR8/RKBx6XIyr/eCnNRlM8FRuwa7m2Ge5VRF9/wCLTvKHIdir&#xA;zXz958v0/T2hR+XprrSIY/qOp6z6qpFF9btldiEKNz4LcJ8Namu2KsKby/8AmNr3nC+udLhhsn0y&#xA;4tjd291NA8ZuUhtJGJa35v8AFJYQPTmaU3AqwKqa6x+VH5oaxokmk3up6V9Te4nu1tUVuKyzzvct&#xA;xm+r+oF9R+g7bYqyPy1D548r63pujXdpo0flzUbyeGJ9PSZJ+f1Wa5V2DMEFfq9GHE06A4q9HxV2&#xA;KvK/zCube+88WWl6rqC6bo1nFFPJM0gj4mRbh3dWNAshFuscbdVBkK/FQ4qr6IkFr5J1qRbCx1L6&#xA;/FetbXFgrzxXEcVI4YrqWQtI0hd6BTU0B/aBqqxaDzjqvl+xSyt5GkvNTlgik1NUV5pI4w+nWnoi&#xA;UiJPVGnSzM8lQtfsmuyrKPLVt5d1PXtCfTYZGuIRdalq93duLi7ea3/0OJJbgM4dS8zugQ+n8NVF&#xA;MVenYq7FWH6zr+laN56jl1GZoY5dM4IyxySb/WK7+mr0HucVYT5tJi1KXW/LN0H0vWUnhS805g7L&#xA;cXMYW7jQKQFnb0YpkFV5OrrUOykqtXHmDWfLvlmw03y7NJe6n5iN3cWd9KJRY2drH+8kmi+sGWV1&#xA;WP405E1B5U6KVUL+W/na80i6srSC/ufNXlnV74WI1SVZFuLbUJI1kZDHL8Rjb4nryO1ehB5KvccV&#xA;dirsVdiry9fJHnCFpFS5vgbRpm054L+GOP8AfyfGAjQEgFGJHMnjTbNt+axHoN+fpPT4up/K5R1l&#xA;ty9Q6/BZH5P86QrGsDanGsCPDbAarbnhFJXmm9t8VezHdaCnTCdTiPPh3/on9aBpso5cW39Ifqcv&#xA;k/zpGqJE2pRpFG1vAo1SA8LdyS0Yrbmp6Uc/EKCnTH8zi/o9/wBJ5/Nfy2X+l3fUOXyT/wAk+W9f&#xA;0/VLi81OSYxC2S0tY7m5S6dURywAZI4hQDqTUnMbVZoSiBGud7Cv0uTpcE4yJlfKtzf6GaZguc7F&#xA;UHqmmQ6hAiOTHPA/rWlwu7QzKCFkXsacjUHYjY7ZPHkMT97DJjEh9zGtT0rzFcmJ77SrXULy3+G3&#xA;1OyvJbC4Cnr+yWQHuolYHwzKx5IDlIgHoRxD8fBxMmOZ5xEiOoJifx8VfT7rzjZWwgGitcgEn1Lj&#xA;Ukkf5cjFkZxxSN8Vf5v7WUJZYiuG/fL9iJsotfvtdtb/AFCwj0+CyhnjULcCdpGnMfQKiBQoi3r4&#xA;5GRhGBETdkdK5M4icpgyFUD1vnTIcxnJdirCtU0zX47rzBarocGs6Trs6XDFrsW5UfU4LVoypjY8&#xA;g1tyDKe47jFVLy2nm/y/o8GlWfllZIYSxM02pRNLIzsXZ5GWBeTEnc03xVM/0758/wCpWi/7iUf/&#xA;AFSxVSVfNmrazo8uoaRFplppd1JeSSi7W4Z+VpPbCNUWNN63PKpPQYqyzFXYqw7z75CbzBLa6lp8&#xA;y2+sWXH0nkJCOI39SP4gr8Hjcko/Bh8TAqwamKsXtfIP5h6jNNb6tepaWU939enkSSNyZuKASJFF&#xA;DEGdfTDIXYKrfEUY4qyPzH+Vum6lFpv6NuDpk+lxRW9u3F5EMVvX0eXpy28oePm/F0lU/EwNQcVT&#xA;HyX5JtvLMM7fWDd3tzQTXBVkUIrPIERXeV6epK7sXdmZmJLHFWS4q7FWN63b+YLXzBDq+lWEWpI1&#xA;o1pNbvcC2ZD6gkVwWRwwO4PTFWKa3oPnDUNYi1K10A6a8ppq6WmqrCbuNFJiLMkSlZI5KFZB8VKr&#xA;4UVS6+8oefYYbceXtNl082ayJa29zq5u7eMTQvAWj9RPVjZVkJQrJQHtiqaaRoXnG01PTfT8vW9n&#xA;p9rqK3rJHfBgqtYSWUhC8KVLTep8IFaU674q9MxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsA8y+d/MMN9JpdlZejM7f&#xA;uJBJH6/EPxqYnWRfj47bHYjvmxwaWBHET+p1ufVTB4QP1oS+1L8xba8eyhuXv7qFVaeO1SNxHyHJ&#xA;Q7tZolSN+PKuThDARZFDz/6SYTnnBoGz5f8ASLIPKnmLVby5GnakIo7uKMvLFKZYrtt6cxG8EEbp&#xA;2LRkjMbUYYxHFHl9n3n7XJ0+aUjwy5/b9w+xlWYjmOxV2KpfrepPZ2yx28luupXTCKwiuWZUeQkd&#xA;kDOQo3NB93XLMUOI73wjnTVlnwjauI8rSKDWfMGlak2najJ+nZpYhcBbG3McsHI8QrA/uvTLK3Fn&#xA;kDbHY9sg44TjxR9HTc8/038HHGWcJcMvX12HL9FfF2n+c7pS6atbtDdhGkTT0gmS4kVeNTCJPgm4&#xA;KWLLGzNtsMZ6YfwnbvsV8e74phqT/EN+6jfw7/gyDS9a0nVoWl067jukQ8ZBGwLIx/ZkX7SN7MAc&#xA;x8mKUDUhTkY8sZi4m0blbY7FXYqx+x89+WNR1qfQrC+SXVIlcrGQwjcx7OEenF+J+1xPY+BxVJ28&#xA;/ajokVrY6/o17PqsoPOS2fTjHKwahaFDdRyCIFgFLoDSnLeuKp55Z80nXkklj0q8sbdKgT3RteLM&#xA;CAVUQTzvXfuoHviqeYq7FXYqo3l5aWVrLd3kyW9rApeaeVgiIo6lmagAxVhreZdS1PzUx0jWrKHy&#xA;/YQWFxLzVJI7tbyWdZOM/L4CiW/wcf2uuKs4xV2KuxV2KvN/zA/N2DQpL3S9JgF3q0EfESkj00nZ&#xA;eQj49XZQVqB3YAVNQFU0/K3zJrOu6Xfy6tdW91PBcqsTW1GURS28U6/GqxhqGUqfgBBBBqRXFWUW&#xA;+s6Rc3TWlvfW812gLPbxyo0gA2JKAlsVRmKuxV2KuxV5LqupeXtOWRPM2jLe6lq+qyxaiZIHDxW5&#xA;YpC1vLwZpVWNEZQjV8KHNzjhOX93Koxjtv1633OmyThH+8jcpS326dK70wsvy+1y+0VbttXvrG9u&#xA;XF8LGZj8M6D07f1pEKT1WBUR/i+0K+2VS1kIzrhBA2vy6105tsdHOUL4pAnevPpfXlSN0PUL3zD5&#xA;Nmu5lDa/okkgtblwOQuI4VlTlx4irJKEkp8Lb7U2yGWAx5aH0S+6/wAUzxTOTFZ+uH31+LZrp17F&#xA;f6fa30X91dRRzx9/hkUMPwOYE48MiD0c+EuKII6ojIsnYq8v86a9bw67NpvlqO3tdYen6Y8x3BVY&#xA;7KJiAR6sn2SxYDbapoPi6bbTYiYcWSzHpEdfx+NnU6nKBMxx0JdZHp+Pxux+zS51PWzomseYJluN&#xA;RCfUtWsyklnf/VJGMA9RDyDxsTy4uN9tmAZsiREIccYCo8wecb5uNEGc+CUzcuRHKVcvx+DMvKkl&#xA;z5j0bUtB1t2k1HR7gRJeqaTJIjMI5Fkp9tJIm4tTdacq1OYWoAxSE4fTIcnO05OWJhP6onmy3y9q&#xA;A1LRbTUDEIZrqNXuI1/ZlA4yLXvxcEZh5ocMjHuczDPigJd6Y5U2uxVhf5pf4ll0iy0/RZ1tItTv&#xA;IbLUL2p9SKK4YRjhQqd2b4uO9OhHUKvJ7HTkvpodE0e3g0bUdO9ZrbVIZZRelrf1XpeURFZa2q9P&#xA;7vknEU+Eqo/SPzL17Ubi180R6K0w062it/M2pQPMiSRrMXjIVHRBwVubExv1YfDH8RVe36Jrml63&#xA;psOpaXOtxZzD4HWoII2KspoVYHqDviqOxV2KofUhctp10trIYbkwyCCYL6hSTieLBP2qHenfFWJ2&#xA;Nlc2nliWw833T3ljbvFcjUblEk5W9rFBdSG55Kyr/pCyqAy8uIH7XxYq840yx8rXnnK5bWFij0e8&#xA;YyJp15BNCU+sy3pgkeJ0RVWl4vF60DHY1GKvdLC0WzsLa0U1W3iSIHfcIoX9ose3cn54qr4q7FUo&#xA;823us2Xly+uNEtjd6qqAWsKgMeTsF5hWKhvTDF+Nd6UxV4/Aur6J5asG06yg1a58325u9Qe5tpdQ&#xA;kMZo4jaKFhJxj9XlK5jK+oxJ6gYqi7ny7Jo1zdX3ly9uH0HUtPtdQuNPs3eWa4t2uUF0LeQESHhA&#xA;fgdl50crzFBRVE+XfM/kfVba1h8t6WLC80fV4xpVlaIDPcQUWN5pTw5RI8UzFy5/Z3JO2KvY8Vdi&#xA;rsVdiryPzLqsHmW0tYrrzLpunXLTXLWkPpTLJAYiyMJZROY+XAUDNGp3+DNzgxnETUJSG18t/s/T&#xA;73S58gygXOMTvXPb7f0e5F3/AOa2o/oqGKx+oXF7dQs6X8E7usUafDJPJbNEkwKdfTAY7E7gHIQ7&#xA;Pjxb8QA6V9l3XxbJ9oS4duEk9b+2qv4Jn5N8w+QPL2iW2lw69BcSNDJfT3TkgyGv7xjUbNtRUPxU&#xA;HfKtThzZJmRiR0/H623TZsOOAiJA9fx+pG/l/wCYLCeP9B2k8V5b2cCzWF1C/Kto7ssUcyEKY5Y1&#xA;AUr7V26ZXq8JHrIok7+/y8mejzA+gGwBt7vPuLMcwnOdiryTzHr1gdb1q1tLeyhTVJrXTZ/Vnhhk&#xA;eeymkkmkeNo5FrIkvFJH2qF/1c3OHEeCJJPpBlyPIgV/Y6bNmHHIAR9REeY5gm/7Sl+lea4Uk0eO&#xA;2XS/UtJNQg02S5ukVEklYFZJBHCvHgopyAXnXbrlmTTn1Xxb8N0P2/2NWPUD01w7cVWf2f2sn8i+&#xA;YPJOj2Ijk8wW95qesXE9zeXbExh5lNX2anpoP2OVOXUdcxdVhyzP0ERiAAHL0mbFAfWDKRJJ80f5&#xA;N8y6XJqT6RYXMN7YXhudQ06aF/jjjaUNLFNEwDJSWVuB7r8sq1OCXDxSFEUD+z4Nmmzx4uGJsGyP&#xA;nyPxZrmC57sVeZ/mtf8Ale+iigudel0240fUbSG+iglWJlW5MUnqFHR+XpxPzR1HwmvgRiry2z1b&#xA;Qb+5nt9R8xanFpMkz2Rla/il+N1l9MSI1mqNG3pAMwbiOQ364qmMPmryrFDoraZrk2n2Onw2MF/Y&#xA;QXdxbpc3UjM1yfSVSjUoTJJJ8LVC1GKs9/K3WPJVvqerwaZqEfLWNUnh0qxjJKGG0gElYkAqqBS3&#xA;xN8NAqrtQYq9QxV2Kpb5j1uHRNGuNRkQyvGAlvbr9qaeRgkMK/5UkjBRirBrfRPMc3mG38u6hqja&#xA;nYSQ2+reYxKS3pzpIxS3h7JBPKoIj7LG382Ks8v9B0nUGna8txN9ZtmsrgEsA8DmpQgEd+h6jtiq&#xA;A8o6ne3Frc6bqbA6vpEptbxlFBItA8E4HhLEyk/5XIdsVT7FXYq8+/MXz7rHl3VFtLOXToIZNPlu&#xA;TNqEjxlHWQIHjCBjLxB/ugOTdsVeXwea9as309hrPl8NoVpO8JE9xxWK7kEiyARpWTpGBbirfCOS&#xA;7miq+Hzj5h04RSJrmgQvpNnNbRPFNPIYoL+VJVdQsbevT00ColSlAWpU4qq/l/5k1fylHPpltqGi&#xA;3pu76wWVIbl2eJJmSGkUYRIpmeKhLI1VO7knbFX0TirsVdirsVePDyv5rtnliFtdfDJMAItO06eG&#xA;RXdirSNJdRvNxqDGXVSvhm68fGeo/wBNIf73bzdJ4GQdD/pYn/fb+Tv8O+aVFFh1J6Kygzabpcpk&#xA;5V+Ocm8Hqyptwc9Kd6nHxsf9H/TS+z07BfByf0v9LH7fVuXf4d80gAejqThQygy6bpjs3Kv72Vje&#xA;fvJ124ynpTpucfGx/wBH/TS/4nl5L4OT+l/pY/8AFc/NkvkDQ9btNZu72/jmSE2yQRvcW9tbSuwc&#xA;sWb6tNP6jEfadqE+GYurywMQB39CT94Fe5ytHimJky7uoA+4m/ezzNe7F2KvKNT8teZo9Z1B47e5&#xA;aKS8muYjBY2FxHIkr8hHLJNcwySR0O8ZUUbeuwzcQz4zEbjkB9Uh9wO/m6eeDIJHY8yfpifvkNvJ&#xA;Cp5d80oFBg1GUIeR9bTNLf1DQD05f9MHOFd/Tj24bUPwjJHNj74/6aX2enn3nqwGHJ3S/wBLH7fV&#xA;y7h0bHl7zUCh9HUZPTFAJdN0txJX/loH1weqE/3WNuHbHxsf9H/TS+z07efevg5P6X+lj9vq38u5&#xA;OvJXl/X4PMsV5eR3Atbe1miM15bWlvK7SOhXnJbzTtM1FpVgtAPfKNVmgcdCrJHIk/eBTkaXDMZL&#xA;N0AeYA+4m3o2ax2bsVeRebfLPm4+btZu7KO8FpfzQTwTWNlp90aR2kULI0tzc28iq7xUli4FWUDf&#xA;4jiqVf4b86fFSDVgGbnx/RWkcVoTSCMG/wDhtTtyg7+O5xVoeWPOYbkYdXYBvU4NpekFCdgYGH1/&#xA;e1pWkFaDrXbFU28peWfNw83aNd3sd4bSwmnnnmvrLT7U0ktJYVRZba5uJGVHlpFFwCqpO/wjFXru&#xA;KuxVhnmm41cebNNc6He6no+nRNdRNZG2Ie+esSc1mmh2hj5Edfiav7OKoHyxrOvafDd3Oo+VNXm1&#xA;fUrh7m+kiFiYx+xFDGWulbhFEqoKgV3PfFU6/wAZ6n/1KOtfdYf9lmKpYl/rNz5y03U7Ty5qdisq&#xA;NY6vJdfU1ia23kikPp3ErF4Zenw/ZdvbFWdYq7FXnP5j+VvMep6/Z3ulpObdbR7aaS0ispp0JlD8&#xA;ozez2vpPT7EiFiPDFWNN5J88OQSmqJUBGMNloUZUAis0RGofu7pqHlONzXoKCirh5J88FWDJqi8w&#xA;FJgstCiMVAP3lrx1D9xK+/qOv2q9qCirovInneW6tA8N1wF1ayzrNZaPBbxpBMjsYTb3s0kHJV5S&#xA;emjF28MVe14q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq4kAEk0A3JOKsF0vzzrSR2WqazbwfoDWpFXTJ7QP68AnkKW&#xA;wuI2LGQTKUPOMfCTutN8VZ1irsVdirsVSbzZrlzpOks1hA13q936lvpFoF5CW7EMkqK1WQBAsTMx&#xA;5DYbb0xVEaBrUGsaat5ErRsryQXEMg4vHPA5imjIBYfC6EbEjFUxxV2KuxV2KuxViPmzz5DpV3+j&#xA;bR7dbteP1q8vHZLW25o0kaMEBeWaRI2KQpuQKkjaqqK8q61rF3fXlhqbwzvDbWl9DcQ28tmfTvDM&#xA;oilt5nmdHj+r13atGFQDirJMVdirsVYle/mPpDXMlh5eik8x6pGvI2+n0eFetRLdf3EZ26Fq9BTf&#xA;FUlP5pcr714b/SYbMqqT6Lq0r6TqFtLwVjyefmso5FgeMYHSjHfFWdabqD3MamcQRyTBpLZIZxOJ&#xA;IBxpKp4pseY6AgVG++Ko3FXYq1I6Ro0jmiICzHwA3OKsQtfPl5LLHqMui3kXle9js/qGqH6qavdS&#xA;MnqyRrcNMInWSHh+65CrcgMVZPqep2OmWM1/fzCC1gHKSRvuAAG7Mx2AG5OwxVLvL/mqy16a4NhF&#xA;IbCHisd9IOCTSivqpEp+JvS2DNSnLbscVTrFXYq7FXYq8l88+f31rUJfLWhahDp2nQv6Wta/PKsM&#xA;Me5UxiRmTaoI2PKQgqtFDNirXlLz5Fol1H5b1u9t9U0SYvDYeYIJVngclt0dlLqqhXVWStY/eNgV&#xA;VS3So9Ds9BubPVrLSdLVpLixu9Qv7hp7uWWCV1WOzhj/AHpjglULHSUEcdlB6KvS/wAv9QvbvyrY&#xA;jUDKdRt4/RuWuOQmkMZKLMySJFKomC81EiBqHevUqsixV2KtO6ojO5oqgliewG5xV47591mLX9Rt&#xA;prbT3nt4tJnubNdQszNFIZLyyRZ4oTBekn0nI5ejUA9sVR/5d6pd6PeS2smnRRaVqFxaRcrVBb+h&#xA;eTWcb/FbNFa0jkp1WNSG6rvXFXqmKuxV2KuxV4x5yk1vy5qmoaitxNb6gtxNd2t0z3Bju7WSjxwp&#xA;8f1Utb/Ya3kQF1oUYNviqD8nahq3mDVD5j/Rl5doLx77TrKCOM20txMgBluLqf8Adp6EfCFeNXXi&#xA;1Nzir1/QNOvLa3e51P0H1i8PO+mt04oaE+nGpPxMsSHgC25698VTTFXYqxbz35g1LTE0uz0xJnvN&#xA;TuhExto0nnjt4kMszxxSHgTRQlW+FeVfAFVE+RtTuNQ0LleIiaha3E9pf8EEXKa3kMfqNGPsGVFV&#xA;6e+21MVS38wvOPlTRLJ47/UBBqrBfq8NvFDc3ZFagCKVXVQ3Sr0HvXFVP8rrby3PpB1nTDdz31zW&#xA;G8udSlE94Ch5emxDMqIeXNVSgoQaYqzbFXYqw38yvMf1LQ7/AEu2guZ7+5spZGe3oiwQfYaWSVmT&#xA;iN9gtWPYYqwKd9COsXmkLounwW0DXMUU8MdqsyCBXKOhXUGkDrwBBEVa9h2VTP8AMDRPMuvSaEyw&#xA;XmpaH+jQ6R2rCOQ6hIABLMRLFw/dN8DVZQ1eQ4k4qyr8t/I915d0a2GrXH13VljKqftR2qPQtBb1&#xA;3VCVBamxIFAFAAVZlirsVdirsVeGeatXLar5jsIfL2pxBdUjuRdWdqzqsqWywFpAkUkbesrF1+Kp&#xA;DA+2KoLRtVtIBoWn6j5f1GawGsLe3FzqFsUhYw6a9qoHqRRxAQxxLM3JuiM2Ksn1Py9B5ytDHp2i&#xA;NZtf3wuZvMsUMFvEIeLxvLEZDFdzNJGxKloyvJqhiACVWUaDoFjovnOSC2LyyT6e9xd3cxDTTzSX&#xA;RLSSsoUE70G1ANhtirMcVdirCvNnn7UdOun0/SvL19qUqrIJrlrW9W2UgDiqPFa3XqluR6Djtu2K&#xA;sH1q+udW/RUJ0nUIpoNDNpdiTR730kuGuLSTiIooRRf9Gk48RxFMVbtbm+t7M2sen6vbyLqNhcJd&#xA;W+kXhCx29skcjokkLDZlIAYYqz7yN5n1DUDc2GpW+oC4hllNre3mnz2ay2wK8GZmjjiD/ERxFDQd&#xA;MVZdirsVY9qHnrQrPXk8vxmS91luJksrZVZolehUyM7Ii1BrTlWm9MVSbVvzAvhqZ0KzhtbTVJ5h&#xA;bxNLdwXEyAn+8+pQM8pNN1DcVHV2UYqxXRL7zhpFtZf4a+tX2hXNq1/FBNb20pileYm6hlit0tJQ&#xA;yzSH+7d2HZGpir0TS/NVxLf22m6xpU+k312rG1Z3jmt5mjXm6xSI3PkFq1JI0NB0xVkGKuxV4/8A&#xA;nTfw3eowWMEUMmpaTCbiCO9Nk1tI12Cg5Q3fwtx9H7XauKpx+V3mXynbaDe+pq6R3LXnr6l9cENo&#xA;kdzdrskXEiIq5iYrwY13+WKsPmsjYxXXmHyvbO+uXV1fa0bxkiuWj0qKR4lFblvh9dh6o9NWcioH&#xA;QDFWS+SrPVNF/MTVVea2XTtRjtxqqhxEg1iSETultG/xNVWLsKV+Mfy0xV6nirsVYB+YH+9Otf8A&#xA;gPyf8n8VYvd6Zra+Y9TuHs7hbPnesJm+scOBSTifi06NKH/jNT/KOKp1a/mzZ6bDcaa1kJP0Vp8T&#xA;Qy+uF9adIrWsTKU/dLyvUAc1rRttt1Wc+V9dj17QLPVki9D60hLw8g/B1Yo6hwByAdSAaCuKppir&#xA;sVdirsVeXed9JlvrnW7OS0uyZL22vbR0sJr2CUR2SwMp9Piv2if2uoxVi3lHy1ey6Rb2vmWyvrKz&#xA;g1KPUV0i00q5PqGG1W0Imloy8Zo1PNFH7RqxrQKvWh5zshsNN1Wn/bOuv+qeKqGlXUmpebpNRis7&#xA;q3tItPFuZLuCS3rIZi9FEoUt8I7YqyfFXYqlPmXQ4tWsChSJrmH4rdpxK0akkcqpC8TtVRt8XXFX&#xA;mbeXZmkTURaFAp9KS1XTdXAkIDFHeP1+RCc34mtKtvvSiqNg0cXT21vDpwiuJGKyyT6bq0cIqfhP&#xA;JrgcRTqWOKvS9M06206xitLdBHFGD8KliKsatTmWbqfHFUVirsVYR5w/LG11yW6vbO+nsdQuZIp3&#xA;A4PA00IjRHIZWkjbhAg5ROpFK4qxDUfJXm3TdUS/miurpOJRpLO4uJ1JY8mZ/qzWF6r1FQx9cfLF&#xA;VLy95a80pLaQWNlPaSxPIbrUoIpbJ3WZm5tNPesfUfg9Ki1diRXkpGKs00L8tI7HzBb65e3n1q8t&#xA;Hke2IjZpDzieH99c3D3Nw/wSGqq6pyoeOwxVm+KuxV5V+Yul6/J5kuJbG3vTFPBbcZrV7mNW9P1g&#xA;ys1tbXm45jZgv04qkVxo2rpqNtqVtZ389yNPNvcxXlrcSotzyiTmksljNzDQK6nlD3NKcjiqCt/L&#xA;2vW4umg0q9tpblYkJtZL2CILC7SIht00j0CvNq04ePicVTLy1ovmB9YSfVNKnudVu9TgvJNTcXYS&#xA;FFuI5JFjjms7WKJfTj+JuZZuKrQ7AKvbcVdirzf8ydAvdR16B/VvYNPlsHt5nsre5uhI3qhjHItt&#xA;JEwFDX4tjiqUfonU5P3d1rPmCa2ccZof0fqw5odmWv1g9R7Yql/+C15TOb3WC1xCltOx0rU6vDH9&#xA;iNj9Y3Va7DFUVb6L5hsIraHRtT1kvBJCLa0aw1CCDiJFqrNNO0KrxrXktMVey4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3590.000000</stDim:w>
            <stDim:h>2247.842600</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2247.84 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2247.84 li
3590 2247.84 li
3590 0 li
cp
clp
0 .000225781 mo
3590 .000225781 li
3590 2247.84 li
0 2247.84 li
0 .000225781 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
3205.43 1714.98 mo
3210.09 1720.97 3205.43 1729.76 3197.75 1729.14 cv
3198.76 1723.95 3201.37 1718.95 3205.43 1714.98 cv
cp
3215.1 1708.88 mo
3232.83 1702.4 3251.58 1715.63 3251.58 1734.41 cv
3251.58 1749.39 3239.39 1761.58 3224.41 1761.58 cv
3211.54 1761.58 3200.74 1752.58 3197.95 1740.55 cv
3214.44 1741.02 3224.5 1722.44 3215.1 1708.88 cv
cp
3252.73 1760.85 mo
3304.65 1709.44 li
3306.88 1707.22 3306.9 1703.61 3304.69 1701.38 cv
3302.47 1699.14 3298.86 1699.12 3296.62 1701.34 cv
3262.98 1734.65 li
3263 1730.94 3262.51 1727.35 3261.48 1723.77 cv
3281.7 1703.76 li
3283.94 1701.54 3283.96 1697.93 3281.74 1695.69 cv
3279.52 1693.45 3275.91 1693.44 3273.67 1695.65 cv
3256.35 1712.8 li
3254.39 1709.91 3252.04 1707.31 3249.39 1705.04 cv
3311.74 1643.3 li
3313.98 1641.09 3313.99 1637.48 3311.78 1635.24 cv
3309.56 1633 3305.95 1632.98 3303.71 1635.2 cv
3239.42 1698.87 li
3235.08 1697.03 3230.33 1695.97 3225.35 1695.85 cv
3261.3 1660.26 li
3263.53 1658.04 3263.55 1654.43 3261.34 1652.19 cv
3259.12 1649.96 3255.51 1649.94 3253.27 1652.15 cv
3195.04 1709.82 3202.87 1702.2 3199.89 1704.64 cv
3190.28 1712.77 3185.83 1723.54 3185.83 1734.4 cv
3185.83 1767.89 3226.52 1786.81 3252.73 1760.85 cv
cp
.254902 .254902 .254902 rgb
f
3233.06 1729.74 mo
3237.5 1729.74 3241.1 1733.34 3241.1 1737.78 cv
3241.1 1742.22 3237.5 1745.82 3233.06 1745.82 cv
3228.61 1745.82 3225.01 1742.22 3225.01 1737.78 cv
3225.01 1733.34 3228.61 1729.74 3233.06 1729.74 cv
cp
f
3112.51 1728.7 mo
3046.49 1728.7 li
3043.33 1728.7 3040.78 1731.26 3040.78 1734.41 cv
3040.78 1737.56 3043.33 1740.11 3046.49 1740.11 cv
3112.51 1740.11 li
3115.66 1740.11 3118.21 1737.56 3118.21 1734.41 cv
3118.21 1731.26 3115.66 1728.7 3112.51 1728.7 cv
cp
f
3112.51 1753.62 mo
3046.49 1753.62 li
3043.33 1753.62 3040.78 1756.17 3040.78 1759.32 cv
3040.78 1762.47 3043.33 1765.02 3046.49 1765.02 cv
3112.51 1765.02 li
3115.66 1765.02 3118.21 1762.47 3118.21 1759.32 cv
3118.21 1756.17 3115.66 1753.62 3112.51 1753.62 cv
cp
f
3112.51 1778.53 mo
3046.49 1778.53 li
3043.33 1778.53 3040.78 1781.09 3040.78 1784.24 cv
3040.78 1787.39 3043.33 1789.94 3046.49 1789.94 cv
3112.51 1789.94 li
3115.66 1789.94 3118.21 1787.39 3118.21 1784.24 cv
3118.21 1781.09 3115.66 1778.53 3112.51 1778.53 cv
cp
f
3112.51 1803.45 mo
3046.49 1803.45 li
3043.33 1803.45 3040.78 1806 3040.78 1809.15 cv
3040.78 1812.3 3043.33 1814.85 3046.49 1814.85 cv
3112.51 1814.85 li
3115.66 1814.85 3118.21 1812.3 3118.21 1809.15 cv
3118.21 1806 3115.66 1803.45 3112.51 1803.45 cv
cp
f
3112.51 1828.36 mo
3046.49 1828.36 li
3043.33 1828.36 3040.78 1830.92 3040.78 1834.07 cv
3040.78 1837.22 3043.33 1839.77 3046.49 1839.77 cv
3112.51 1839.77 li
3115.66 1839.77 3118.21 1837.22 3118.21 1834.07 cv
3118.21 1830.92 3115.66 1828.36 3112.51 1828.36 cv
cp
f
3112.51 1853.28 mo
3046.49 1853.28 li
3043.33 1853.28 3040.78 1855.83 3040.78 1858.98 cv
3040.78 1862.13 3043.33 1864.68 3046.49 1864.68 cv
3112.51 1864.68 li
3115.66 1864.68 3118.21 1862.13 3118.21 1858.98 cv
3118.21 1855.83 3115.66 1853.28 3112.51 1853.28 cv
cp
f
3112.51 1878.19 mo
3046.49 1878.19 li
3043.33 1878.19 3040.78 1880.75 3040.78 1883.9 cv
3040.78 1887.05 3043.33 1889.6 3046.49 1889.6 cv
3112.51 1889.6 li
3115.66 1889.6 3118.21 1887.05 3118.21 1883.9 cv
3118.21 1880.75 3115.66 1878.19 3112.51 1878.19 cv
cp
f
3344.74 1945.91 mo
3140.61 1945.91 li
3137.46 1945.91 3134.9 1948.46 3134.9 1951.61 cv
3134.9 1954.76 3137.46 1957.31 3140.61 1957.31 cv
3344.74 1957.31 li
3344.74 1986.99 li
3344.74 1988.88 3343.21 1990.41 3341.32 1990.41 cv
2981.68 1990.41 li
2979.79 1990.41 2978.25 1988.88 2978.25 1986.99 cv
2978.25 1957.31 li
3120.08 1957.31 li
3123.23 1957.31 3125.78 1954.76 3125.78 1951.61 cv
3125.78 1948.46 3123.23 1945.91 3120.08 1945.91 cv
2978.25 1945.91 li
2978.25 1936.19 li
2990.5 1936.19 3334.07 1936.19 3341.32 1936.19 cv
3343.21 1936.19 3344.74 1937.72 3344.74 1939.61 cv
3344.74 1945.91 li
3344.74 1945.91 li
cp
2978.25 1776.2 mo
3011.57 1760.91 li
3011.57 1924.78 li
2978.25 1924.78 li
2978.25 1776.2 li
cp
3178.38 1902.71 mo
3181.95 1897.07 li
3183.93 1893.94 3182.45 1889.8 3178.96 1888.61 cv
3184.44 1879.95 li
3186.23 1877.11 3185.2 1873.36 3182.24 1871.83 cv
3189.58 1860.23 li
3196.93 1871.83 li
3193.97 1873.36 3192.93 1877.11 3194.73 1879.95 cv
3200.21 1888.61 li
3196.71 1889.8 3195.24 1893.95 3197.21 1897.07 cv
3200.79 1902.71 li
3178.38 1902.71 li
cp
3241.87 1902.71 mo
3245.44 1897.07 li
3247.41 1893.94 3245.94 1889.8 3242.45 1888.61 cv
3247.93 1879.95 li
3249.72 1877.11 3248.68 1873.36 3245.73 1871.83 cv
3253.07 1860.23 li
3260.41 1871.83 li
3257.45 1873.36 3256.42 1877.11 3258.21 1879.95 cv
3263.69 1888.61 li
3260.19 1889.8 3258.73 1893.95 3260.7 1897.07 cv
3264.27 1902.71 li
3241.87 1902.71 li
cp
3040.02 1659.66 mo
3040.02 1655.76 3043.19 1652.59 3047.09 1652.59 cv
3110.99 1652.59 li
3114.89 1652.59 3118.06 1655.76 3118.06 1659.66 cv
3118.06 1688.74 li
3040.02 1688.74 li
3040.02 1659.66 li
cp
3341.32 1924.78 mo
3258.77 1924.78 li
3258.77 1914.12 li
3270.65 1914.12 li
3273.53 1914.12 3276.17 1912.55 3277.57 1910.03 cv
3280.17 1905.3 3277.22 1901.85 3274.79 1898.01 cv
3278.05 1895.43 3278.74 1890.79 3276.41 1887.38 cv
3271.94 1880.32 li
3274.67 1877.63 3275.06 1873.39 3272.91 1870.26 cv
3262.11 1853.19 li
3257.72 1846.22 3248.43 1846.22 3244.03 1853.18 cv
3233.08 1870.5 li
3231.11 1873.62 3231.56 1877.71 3234.2 1880.32 cv
3229.58 1887.62 li
3227.42 1891.05 3228.21 1895.53 3231.35 1898.01 cv
3228.82 1902.01 li
3225.5 1907.25 3229.28 1914.12 3235.49 1914.12 cv
3247.37 1914.12 li
3247.37 1924.78 li
3195.29 1924.78 li
3195.29 1914.12 li
3207.17 1914.12 li
3213.37 1914.12 3217.16 1907.27 3213.84 1902.01 cv
3211.31 1898.01 li
3214.56 1895.43 3215.26 1890.79 3212.93 1887.38 cv
3208.46 1880.32 li
3211.19 1877.63 3211.58 1873.39 3209.43 1870.26 cv
3198.63 1853.19 li
3194.24 1846.23 3184.95 1846.22 3180.55 1853.19 cv
3169.6 1870.5 li
3167.62 1873.63 3168.08 1877.71 3170.72 1880.32 cv
3166.1 1887.62 li
3163.94 1891.05 3164.73 1895.53 3167.87 1898.01 cv
3165.34 1902.01 li
3162.02 1907.25 3165.8 1914.12 3172.01 1914.12 cv
3183.89 1914.12 li
3183.89 1924.78 li
3146.51 1924.78 li
3146.51 1751.95 li
3146.51 1748.8 3143.96 1746.24 3140.81 1746.24 cv
3137.66 1746.24 3135.11 1748.8 3135.11 1751.95 cv
3135.11 1924.78 li
3022.98 1924.78 li
3022.98 1915.27 3022.98 1715.77 3022.98 1706.5 cv
3022.98 1703 3025.83 1700.15 3029.33 1700.15 cv
3032.77 1700.15 3125.01 1700.15 3128.75 1700.15 cv
3132.25 1700.15 3135.1 1703 3135.1 1706.5 cv
3135.1 1732.43 li
3135.1 1735.58 3137.65 1738.13 3140.8 1738.13 cv
3143.95 1738.13 3146.51 1735.58 3146.51 1732.43 cv
3146.51 1706.5 li
3146.51 1696.95 3138.93 1689.14 3129.47 1688.76 cv
3129.47 1659.66 li
3129.47 1649.47 3121.18 1641.18 3110.99 1641.18 cv
3084.74 1641.18 li
3084.74 1618.22 li
3084.74 1615.07 3082.19 1612.52 3079.04 1612.52 cv
3075.89 1612.52 3073.34 1615.07 3073.34 1618.22 cv
3073.34 1641.18 li
3047.09 1641.18 li
3036.9 1641.18 3028.61 1649.47 3028.61 1659.66 cv
3028.61 1688.76 li
3019.15 1689.14 3011.58 1696.95 3011.58 1706.5 cv
3011.58 1748.36 li
2970.17 1767.36 li
2968.15 1768.29 2966.85 1770.32 2966.85 1772.54 cv
2966.85 1780.39 2966.85 1976.09 2966.85 1986.99 cv
2966.85 1995.17 2973.5 2001.82 2981.67 2001.82 cv
3341.32 2001.82 li
3349.5 2001.82 3356.15 1995.17 3356.15 1986.99 cv
3356.15 1981.78 3356.15 1944.83 3356.15 1939.61 cv
3356.15 1931.43 3349.5 1924.78 3341.32 1924.78 cv
cp
f
3313.09 1698.75 mo
3316.12 1698.75 3316.65 1697.56 3325.41 1688.88 cv
3327.64 1686.67 3327.66 1683.06 3325.45 1680.82 cv
3323.23 1678.58 3319.62 1678.56 3317.38 1680.78 cv
3309.08 1689 li
3305.45 1692.6 3308.05 1698.75 3313.09 1698.75 cv
cp
f
2538.87 1848.72 mo
2584.34 1863.35 li
2587.35 1864.32 2590.55 1862.65 2591.51 1859.67 cv
2592.48 1856.67 2590.83 1853.46 2587.83 1852.49 cv
2542.36 1837.86 li
2539.37 1836.9 2536.15 1838.54 2535.18 1841.54 cv
2534.22 1844.54 2535.87 1847.75 2538.87 1848.72 cv
cp
f
2543.84 1833.27 mo
2589.31 1847.9 li
2592.32 1848.87 2595.53 1847.21 2596.49 1844.22 cv
2597.45 1841.22 2595.81 1838.01 2592.81 1837.04 cv
2547.34 1822.41 li
2544.34 1821.44 2541.12 1823.09 2540.16 1826.09 cv
2539.19 1829.09 2540.84 1832.3 2543.84 1833.27 cv
cp
f
2658.07 1990.41 mo
2298.43 1990.41 li
2296.54 1990.41 2295 1988.87 2295 1986.98 cv
2295 1903.35 li
2396.14 1903.35 li
2388.66 1935.12 li
2388.2 1937.07 2388.8 1939.12 2390.23 1940.52 cv
2415.02 1964.63 li
2409.19 1973.63 li
2407.48 1976.28 2408.24 1979.81 2410.88 1981.52 cv
2413.53 1983.23 2417.06 1982.47 2418.77 1979.83 cv
2427.7 1966.03 2428.72 1965.46 2427.83 1962.27 cv
2427.59 1961.4 2429.22 1966.94 2421.53 1940.83 cv
2431.09 1916.3 li
2436.63 1910.23 2442.6 1907.1 2448.86 1906.99 cv
2456.7 1906.85 2465.57 1911.92 2470.48 1917.16 cv
2471.15 1917.89 2472.04 1918.42 2472.9 1918.7 cv
2603.76 1960.82 2597.8 1959.23 2599.85 1958.86 cv
2602.65 1958.36 2631.54 1940.55 2640.19 1925.6 cv
2644.66 1917.88 2654.6 1911.11 2661.49 1907.1 cv
2661.49 1986.98 li
2661.49 1986.98 li
2661.49 1988.87 2659.96 1990.41 2658.07 1990.41 cv
cp
2295.35 1870.52 mo
2323.52 1872.3 2369.64 1877.98 2393.97 1891.95 cv
2295 1891.95 li
2295 1870.03 2294.81 1871.06 2295.35 1870.52 cv
cp
2350.8 1840.73 mo
2350.8 1865.95 li
2349.58 1865.71 2348.47 1865.5 2347.27 1865.27 cv
2347.27 1840.73 li
2350.8 1840.73 li
cp
2311.78 1829.33 mo
2324.67 1808.93 li
2355.09 1808.93 li
2358.24 1808.93 2360.79 1806.38 2360.79 1803.23 cv
2360.79 1800.08 2358.24 1797.53 2355.09 1797.53 cv
2350.74 1797.53 2317.18 1797.53 2313.47 1797.53 cv
2330.17 1771.11 li
2350.52 1771.11 li
2353.67 1771.11 2356.23 1768.56 2356.23 1765.41 cv
2356.23 1762.26 2353.67 1759.71 2350.52 1759.71 cv
2337.62 1759.71 2334.1 1759.71 2321.19 1759.71 cv
2344.53 1722.81 li
2347.07 1718.79 2350.99 1718.76 2353.55 1722.81 cv
2376.89 1759.71 li
2371.45 1759.71 2368.05 1759.04 2366.05 1762.66 cv
2365.05 1764.48 2365.12 1766.7 2366.23 1768.46 cv
2384.61 1797.53 li
2376.55 1797.53 li
2372.06 1797.53 2369.33 1802.48 2371.73 1806.28 cv
2386.31 1829.33 li
2379.06 1829.33 2318.92 1829.33 2311.78 1829.33 cv
cp
2510.03 1821.95 mo
2585.14 1782.91 li
2623.38 1858.44 li
2595.17 1946.07 li
2566.66 1936.9 li
2572.79 1917.82 li
2573.76 1914.83 2572.11 1911.61 2569.11 1910.65 cv
2566.12 1909.69 2562.9 1911.33 2561.94 1914.33 cv
2555.8 1933.4 li
2521.19 1922.26 li
2536.42 1874.93 li
2537.32 1872.13 2540.32 1870.6 2543.11 1871.5 cv
2569.56 1880.01 2569.36 1879.4 2570.7 1882.02 cv
2571.97 1884.48 2571.25 1885.4 2567.95 1895.63 cv
2566.99 1898.63 2568.64 1901.85 2571.64 1902.81 cv
2574.63 1903.77 2577.85 1902.13 2578.81 1899.13 cv
2581.85 1889.69 2584.67 1884.26 2580.85 1876.81 cv
2578.81 1872.83 2575.35 1869.89 2571.09 1868.52 cv
2546.61 1860.64 li
2537.81 1857.81 2528.4 1862.64 2525.56 1871.44 cv
2510.33 1918.77 li
2481.82 1909.59 li
2510.03 1821.95 li
cp
2660.88 1894.41 mo
2652.43 1898.82 2637.21 1907.98 2630.32 1919.89 cv
2626.54 1926.42 2617.42 1933.94 2609.17 1939.79 cv
2630.75 1872.75 li
2637.52 1882.9 2652.94 1880.63 2656.69 1869.19 cv
2657.9 1865.49 2657.6 1861.54 2655.84 1858.07 cv
2619.85 1786.97 li
2618.43 1784.16 2615 1783.04 2612.19 1784.46 cv
2609.38 1785.88 2608.25 1789.31 2609.68 1792.12 cv
2645.67 1863.22 li
2647.55 1866.94 2641.92 1869.8 2640.03 1866.07 cv
2637.5 1861.08 2594.21 1775.56 2592.71 1772.61 cv
2591.28 1769.78 2587.81 1768.67 2585 1770.13 cv
2484.92 1822.15 2491.44 1819.23 2489.64 1818.65 cv
2487.97 1818.13 2487.05 1816.35 2487.58 1814.69 cv
2488.16 1812.86 2481.67 1816.72 2590.03 1760.39 cv
2591.61 1759.57 2593.52 1760.2 2594.31 1761.76 cv
2601.03 1775.04 li
2602.45 1777.85 2605.88 1778.97 2608.69 1777.55 cv
2611.5 1776.13 2612.63 1772.7 2611.21 1769.89 cv
2604.48 1756.61 li
2600.77 1749.29 2591.87 1746.58 2584.77 1750.27 cv
2483.88 1802.71 li
2476.73 1806.43 2473.95 1815.21 2477.67 1822.36 cv
2481.13 1829.02 2488.92 1831.82 2495.69 1829.28 cv
2471.81 1903.45 li
2465.02 1898.68 2457.03 1895.46 2448.76 1895.59 cv
2433.05 1895.81 2421.83 1908.64 2420.84 1911.2 cv
2408.12 1943.83 2409.12 1939.09 2410.73 1944.54 cv
2400.5 1934.6 li
2409.46 1896.54 2408.94 1898.83 2409 1898.29 cv
2411.24 1894.2 2410.1 1889.36 2406.46 1886.56 cv
2406.46 1886.56 li
2397.2 1879.43 2382.04 1873.25 2362.21 1868.46 cv
2362.21 1840.74 li
2387.89 1840.74 li
2396.17 1840.74 2401.22 1831.58 2396.79 1824.58 cv
2396.79 1824.57 2386.89 1808.91 2386.89 1808.91 cv
2395.04 1808.39 2399.55 1799.09 2394.84 1792.36 cv
2381.18 1770.77 li
2388.26 1768.89 2391.3 1760.51 2387.12 1754.54 cv
2363.19 1716.71 li
2356.15 1705.58 2341.93 1705.58 2334.89 1716.71 cv
2310.71 1754.95 li
2308.66 1758.2 2308.53 1762.3 2310.38 1765.66 cv
2311.79 1768.21 2314.16 1770.03 2316.9 1770.76 cv
2302.98 1792.77 li
2298.72 1799.52 2303.25 1808.39 2311.2 1808.91 cv
2301.29 1824.57 li
2296.86 1831.58 2301.91 1840.74 2310.19 1840.74 cv
2335.87 1840.74 li
2335.87 1863.34 li
2319.56 1860.84 2295.01 1858.59 2292.67 1859.27 cv
2287.33 1860.83 2283.6 1865.8 2283.6 1871.36 cv
2283.6 1872.51 2283.6 1985.83 2283.6 1986.98 cv
2283.6 1995.16 2290.25 2001.81 2298.43 2001.81 cv
2658.07 2001.81 li
2666.25 2001.81 2672.9 1995.16 2672.9 1986.98 cv
2672.9 1906.78 li
2672.9 1899.8 2666.8 1891.33 2660.88 1894.41 cv
cp
f
2370.64 1918.05 mo
2310.32 1918.05 li
2307.17 1918.05 2304.61 1920.61 2304.61 1923.76 cv
2304.61 1926.91 2307.17 1929.46 2310.32 1929.46 cv
2370.64 1929.46 li
2373.79 1929.46 2376.34 1926.91 2376.34 1923.76 cv
2376.34 1920.61 2373.79 1918.05 2370.64 1918.05 cv
cp
f
2370.64 1941.31 mo
2310.32 1941.31 li
2307.17 1941.31 2304.61 1943.86 2304.61 1947.01 cv
2304.61 1950.16 2307.17 1952.71 2310.32 1952.71 cv
2370.64 1952.71 li
2373.79 1952.71 2376.34 1950.16 2376.34 1947.01 cv
2376.34 1943.86 2373.79 1941.31 2370.64 1941.31 cv
cp
f
2370.64 1964.56 mo
2310.32 1964.56 li
2307.17 1964.56 2304.61 1967.12 2304.61 1970.27 cv
2304.61 1973.42 2307.17 1975.97 2310.32 1975.97 cv
2370.64 1975.97 li
2373.79 1975.97 2376.34 1973.42 2376.34 1970.27 cv
2376.34 1967.12 2373.79 1964.56 2370.64 1964.56 cv
cp
f
2440.6 1952.72 mo
2519.68 1952.72 li
2522.83 1952.72 2525.38 1950.16 2525.38 1947.01 cv
2525.38 1943.86 2522.83 1941.31 2519.68 1941.31 cv
2440.6 1941.31 li
2437.45 1941.31 2434.9 1943.86 2434.9 1947.01 cv
2434.89 1950.16 2437.45 1952.72 2440.6 1952.72 cv
cp
f
2646.92 1964.56 mo
2440.6 1964.56 li
2437.45 1964.56 2434.9 1967.12 2434.9 1970.27 cv
2434.9 1973.42 2437.45 1975.97 2440.6 1975.97 cv
2646.92 1975.97 li
2650.07 1975.97 2652.62 1973.42 2652.62 1970.27 cv
2652.62 1967.12 2650.07 1964.56 2646.92 1964.56 cv
cp
f
2366.33 1683.49 mo
2394.96 1683.49 li
2397.93 1683.49 2400.41 1681.2 2400.64 1678.24 cv
2401.68 1665.12 2417.7 1658.87 2427.31 1668.17 cv
2431.21 1671.93 2437.7 1668.62 2436.92 1663.25 cv
2435.43 1652.87 2443.52 1643.68 2453.87 1643.68 cv
2464.28 1643.68 2472.43 1652.98 2470.79 1663.49 cv
2470.04 1668.25 2475.21 1671.74 2479.34 1669.27 cv
2489.98 1662.93 2503.84 1667.95 2507.95 1679.67 cv
2508.75 1681.96 2510.91 1683.49 2513.33 1683.49 cv
2584.64 1683.49 li
2587.79 1683.49 2590.34 1680.94 2590.34 1677.79 cv
2590.34 1674.64 2587.79 1672.08 2584.64 1672.08 cv
2517.08 1672.08 li
2510.61 1659.37 2496.13 1652.54 2482 1656 cv
2479.7 1642.55 2467.96 1632.28 2453.87 1632.28 cv
2440.43 1632.28 2429.14 1641.61 2426.12 1654.13 cv
2411.13 1648.35 2394.55 1656.91 2390.21 1672.08 cv
2366.33 1672.08 li
2363.18 1672.08 2360.62 1674.64 2360.62 1677.79 cv
2360.62 1680.94 2363.18 1683.49 2366.33 1683.49 cv
cp
f
2580.7 1714.89 mo
2555.96 1714.89 li
2552.81 1714.89 2550.26 1717.44 2550.26 1720.59 cv
2550.26 1723.74 2552.81 1726.29 2555.96 1726.29 cv
2585.44 1726.29 li
2588.41 1726.29 2590.89 1724 2591.12 1721.04 cv
2592.15 1708.01 2608.07 1701.79 2617.62 1711.03 cv
2621.51 1714.8 2628.01 1711.49 2627.23 1706.12 cv
2625.74 1695.82 2633.77 1686.67 2644.07 1686.67 cv
2647.22 1686.67 2649.77 1684.12 2649.77 1680.97 cv
2649.77 1677.82 2647.22 1675.27 2644.07 1675.27 cv
2630.7 1675.27 2619.45 1684.55 2616.44 1697.01 cv
2601.32 1691.2 2584.97 1699.98 2580.7 1714.89 cv
cp
f
2507.05 1628.36 mo
2510.01 1625.5 2513.9 1623.92 2518.01 1623.92 cv
2526.18 1623.92 2533.08 1630.29 2533.72 1638.43 cv
2533.96 1641.39 2536.43 1643.68 2539.41 1643.68 cv
2580.33 1643.68 li
2583.48 1643.68 2586.03 1641.13 2586.03 1637.98 cv
2586.03 1634.83 2583.48 1632.28 2580.33 1632.28 cv
2544.14 1632.28 li
2538.54 1612.66 2513.92 1605.85 2499.12 1620.16 cv
2496.85 1622.35 2496.79 1625.96 2498.98 1628.22 cv
2501.17 1630.49 2504.78 1630.55 2507.05 1628.36 cv
cp
f
2600.01 1643.68 mo
2611.07 1643.68 li
2614.22 1643.68 2616.77 1641.13 2616.77 1637.98 cv
2616.77 1634.83 2614.22 1632.28 2611.07 1632.28 cv
2600.01 1632.28 li
2596.86 1632.28 2594.31 1634.83 2594.31 1637.98 cv
2594.31 1641.13 2596.87 1643.68 2600.01 1643.68 cv
cp
f
1908.9 1880.03 mo
1901.4 1877.85 1887.85 1872.73 1883.42 1868.3 cv
1876.9 1861.78 1870.86 1860.45 1860.85 1858.27 cv
1848.87 1855.65 1843.73 1855.46 1836.44 1845.67 cv
1834.56 1843.14 1830.98 1842.62 1828.46 1844.5 cv
1825.93 1846.38 1825.41 1849.96 1827.29 1852.48 cv
1831.83 1858.57 1836.94 1862.85 1842.52 1865.26 cv
1842.82 1873.25 1844.44 1890.02 1852.58 1898.16 cv
1853.69 1899.27 1855.15 1899.83 1856.61 1899.83 cv
1861.65 1899.83 1864.24 1893.7 1860.64 1890.09 cv
1856.73 1886.18 1854.79 1876.55 1854.13 1868.46 cv
1866.65 1871.28 1870.58 1871.58 1875.36 1876.36 cv
1882.98 1883.98 1904.82 1891.21 1907.3 1891.21 cv
1913.87 1891.22 1915.19 1881.87 1908.9 1880.03 cv
cp
f
1749.38 1946.02 mo
1747.32 1933.6 li
1754.21 1934.12 1764.36 1933.98 1773.16 1930.28 cv
1780.13 1927.35 1794.71 1933.11 1803.85 1938.16 cv
1804.62 1946.68 1807.15 1953.91 1809.54 1959.08 cv
1785.06 1959.65 1765.65 1953.09 1749.38 1946.02 cv
cp
1661.46 1928.3 mo
1661.46 1938.85 li
1647.06 1931.66 1622.7 1929.4 1616.05 1928.9 cv
1613.85 1928.39 1612.55 1927.91 1611.81 1927.58 cv
1611.81 1908.24 li
1616.95 1909.6 1622.76 1908.96 1639.06 1912.11 cv
1660.4 1916.24 1662.3 1920.9 1662.31 1920.9 cv
1662.1 1921.81 1660.84 1924.83 1661.46 1928.3 cv
cp
1738.06 1732.98 mo
1761.87 1744.58 1778.33 1762.32 1789.48 1779.22 cv
1750.39 1786.16 1708.83 1749.03 1711.66 1709.63 cv
1711.84 1707.12 1713.35 1705.38 1715.81 1704.85 cv
1752.95 1696.87 1793.83 1729.84 1795.54 1767.9 cv
1783.6 1751.18 1766.67 1734.23 1743.05 1722.72 cv
1740.22 1721.34 1736.81 1722.52 1735.43 1725.35 cv
1734.05 1728.18 1735.23 1731.6 1738.06 1732.98 cv
cp
1988.88 1907.47 mo
1991.22 1901.19 1987.8 1894.35 1983.75 1887.9 cv
1963.76 1856.07 1932.54 1872.58 1914.16 1854.2 cv
1898.25 1838.3 1851.04 1822.91 1816.84 1824.19 cv
1818.19 1815.05 1821.67 1796.49 1829.82 1774.44 cv
1833.96 1775.99 1837.59 1776.07 1842.41 1776.07 cv
1880.44 1776.07 1915.85 1754.39 1938.05 1723.75 cv
1939.9 1721.2 1939.33 1717.64 1936.78 1715.79 cv
1934.23 1713.94 1930.66 1714.5 1928.81 1717.06 cv
1907.66 1746.23 1873.42 1766.57 1837.52 1764.53 cv
1836.27 1764.46 1835.1 1764.21 1834.01 1763.82 cv
1839.17 1751.55 1845.17 1739.97 1851.94 1729.19 cv
1864.05 1725.09 1878.79 1725.8 1879.08 1725.81 cv
1882.24 1726 1884.91 1723.58 1885.09 1720.44 cv
1885.26 1717.29 1882.85 1714.6 1879.71 1714.43 cv
1879.2 1714.4 1871.08 1713.98 1861.36 1715.37 cv
1877.65 1693.36 1897.49 1675.5 1920.37 1662.19 cv
1923.09 1660.6 1924.01 1657.11 1922.43 1654.39 cv
1920.85 1651.67 1917.35 1650.74 1914.63 1652.33 cv
1900.75 1660.41 1888.65 1669.68 1878.09 1679.57 cv
1877.75 1673.53 1876.58 1669.22 1876.49 1668.91 cv
1875.65 1665.88 1872.51 1664.11 1869.48 1664.94 cv
1866.45 1665.78 1864.67 1668.91 1865.5 1671.94 cv
1865.52 1672.05 1868.29 1682.45 1865.64 1692.26 cv
1850.52 1709.03 1837.04 1729.29 1826.3 1752.98 cv
1813.66 1689.25 1873.05 1620.4 1937.77 1624.07 cv
1943.15 1624.38 1947.24 1627.83 1948.45 1633.08 cv
1952.86 1652.26 1950.52 1673.95 1941.85 1694.16 cv
1940.61 1697.05 1941.95 1700.4 1944.84 1701.65 cv
1947.74 1702.89 1951.09 1701.55 1952.33 1698.65 cv
1961.95 1676.24 1964.51 1652.05 1959.56 1630.53 cv
1957.21 1620.29 1948.91 1613.28 1938.42 1612.68 cv
1865.07 1608.48 1799.27 1686.52 1815.72 1758.07 cv
1816.55 1761.66 1818.12 1764.84 1820.24 1767.5 cv
1816.42 1777.47 1813.52 1786.79 1811.31 1795.02 cv
1809.41 1790.95 1807.21 1786.63 1804.65 1782.15 cv
1805.88 1780.02 1806.65 1777.56 1806.84 1774.9 cv
1810.27 1727.17 1760.28 1683.64 1713.42 1693.7 cv
1705.99 1695.29 1700.83 1701.22 1700.28 1708.81 cv
1700.28 1708.81 li
1697.22 1751.41 1737.01 1791.45 1779.99 1791.45 cv
1784.64 1791.45 1791.69 1790.81 1795.68 1789.46 cv
1804.45 1805.24 1805.11 1811.29 1807.07 1813.49 cv
1806.09 1818.63 1805.49 1822.68 1805.14 1825.41 cv
1796.02 1827.08 1788.98 1830.33 1784.18 1835.13 cv
1762.68 1856.63 1752.61 1865.93 1739.06 1861.05 cv
1733.33 1858.98 1718.79 1859.84 1695.83 1863.61 cv
1692.73 1864.11 1690.62 1867.05 1691.13 1870.15 cv
1691.64 1873.26 1694.56 1875.37 1697.68 1874.86 cv
1722.73 1870.76 1733.17 1871.05 1735.19 1871.78 cv
1756.91 1879.6 1772.96 1862.48 1792.24 1843.2 cv
1810.88 1824.56 1886.95 1843.13 1906.09 1862.27 cv
1928.37 1884.54 1957.44 1867.45 1974.09 1893.96 cv
1978.78 1901.43 1978.27 1903.31 1978.2 1903.5 cv
1976.08 1908.99 1936.78 1912.69 1879.72 1940.28 cv
1857.87 1950.85 1838.76 1956.23 1821.89 1958.21 cv
1818.57 1952.37 1811.81 1937.57 1816.79 1920.57 cv
1817.05 1919.68 1817.27 1918.81 1817.46 1917.95 cv
1823.46 1922.62 1832.08 1926.7 1843.93 1926.7 cv
1861.77 1926.7 1866.87 1930.2 1867.46 1930.66 cv
1868.58 1931.97 1870.18 1932.67 1871.82 1932.67 cv
1876.33 1932.67 1879.12 1927.58 1876.54 1923.77 cv
1874.81 1921.22 1868.17 1915.29 1843.93 1915.29 cv
1825.38 1915.29 1817.7 1901.92 1816.61 1899.83 cv
1812.09 1886.03 1801.65 1879.13 1806.52 1868.03 cv
1807.79 1865.15 1806.47 1861.78 1803.59 1860.52 cv
1800.71 1859.26 1797.34 1860.57 1796.08 1863.45 cv
1785.82 1886.83 1812.35 1895.16 1805.84 1917.36 cv
1805.03 1920.14 1804.48 1922.87 1804.12 1925.52 cv
1793.88 1920.61 1779.2 1915.36 1768.73 1919.77 cv
1760.79 1923.11 1750.76 1922.58 1745.4 1921.95 cv
1744.16 1914.44 li
1745.45 1905.8 li
1760.07 1906.01 1768.9 1905.56 1776.22 1887.67 cv
1777.41 1884.75 1776.01 1881.42 1773.1 1880.23 cv
1770.18 1879.04 1766.85 1880.44 1765.66 1883.35 cv
1760.4 1896.21 1757.62 1894.35 1740.55 1894.35 cv
1722.61 1894.35 1703.89 1904.4 1703.1 1904.83 cv
1700.34 1906.33 1699.31 1909.79 1700.81 1912.56 cv
1702.3 1915.31 1705.76 1916.36 1708.54 1914.86 cv
1708.69 1914.78 1720.94 1908.23 1733.85 1906.29 cv
1731.96 1919.81 1732.05 1907.77 1736.87 1940.34 cv
1719.02 1932.02 1711.21 1928.58 1684.43 1926.97 cv
1680.12 1926.71 1674.88 1926.4 1672.78 1925.66 cv
1673.1 1924.32 1675.24 1919.8 1671.72 1914.46 cv
1662.38 1900.28 1617.42 1897.96 1614.42 1897.12 cv
1621.31 1893.26 1639.44 1886.69 1671.62 1879.8 cv
1674.69 1879.14 1676.66 1876.11 1676 1873.03 cv
1675.34 1869.95 1672.31 1867.99 1669.23 1868.65 cv
1651.71 1872.4 1635.72 1876.67 1624.21 1880.67 cv
1614.6 1884.01 1598.9 1889.53 1600.47 1899.24 cv
1600.38 1899.88 1600.34 1929.94 1600.51 1930.8 cv
1601.66 1936.65 1608.3 1938.86 1613.96 1940.12 cv
1614.24 1940.19 1614.52 1940.23 1614.8 1940.25 cv
1624.18 1940.93 1655.36 1944.79 1660.98 1952.24 cv
1661.39 1952.78 1661.35 1952.96 1661.31 1953.15 cv
1660.41 1957.48 1661.03 1961.09 1663.17 1963.87 cv
1667.13 1969.01 1674.29 1969.4 1684.21 1969.92 cv
1708.49 1971.21 1714.7 1973.96 1732.36 1982.18 cv
1750.66 1990.7 1774.51 2001.82 1806.6 2001.82 cv
1847.64 2001.82 1879.08 1984.16 1897.53 1975.96 cv
1900.41 1974.68 1901.7 1971.31 1900.42 1968.43 cv
1899.14 1965.55 1895.77 1964.26 1892.89 1965.54 cv
1888.5 1967.49 1884.07 1969.55 1879.72 1971.65 cv
1809.58 2005.57 1767.73 1986.08 1737.18 1971.84 cv
1718.92 1963.34 1711.24 1959.94 1684.81 1958.53 cv
1680.61 1958.31 1675.06 1958.01 1672.86 1957.2 cv
1672.86 1937.34 li
1675.98 1937.88 1679.62 1938.11 1683.74 1938.36 cv
1711.56 1940.03 1715.94 1943.22 1741.87 1955.18 cv
1787.4 1975.47 1829.76 1977.12 1884.68 1950.55 cv
1932.57 1927.4 1962.85 1922.94 1977.55 1917.03 cv
1977.55 1935.64 li
1972.53 1939.83 1949.41 1943.67 1917.94 1955.33 cv
1914.98 1956.42 1913.48 1959.7 1914.57 1962.66 cv
1915.66 1965.61 1918.95 1967.12 1921.9 1966.02 cv
1963.05 1950.78 1982.7 1951.08 1988.32 1940.12 cv
1988.74 1939.31 1988.95 1938.42 1988.95 1937.52 cv
1988.92 1906.63 1989.02 1908.37 1988.88 1907.47 cv
cp
f
1136.05 1717.1 mo
1097.34 1717.1 li
1094.19 1717.1 1091.64 1719.65 1091.64 1722.8 cv
1091.64 1725.95 1094.19 1728.5 1097.34 1728.5 cv
1136.05 1728.5 li
1139.2 1728.5 1141.75 1725.95 1141.75 1722.8 cv
1141.76 1719.65 1139.2 1717.1 1136.05 1717.1 cv
cp
f
1136.05 1742.4 mo
1097.34 1742.4 li
1094.19 1742.4 1091.64 1744.95 1091.64 1748.1 cv
1091.64 1751.25 1094.19 1753.8 1097.34 1753.8 cv
1136.05 1753.8 li
1139.2 1753.8 1141.75 1751.25 1141.75 1748.1 cv
1141.75 1744.95 1139.2 1742.4 1136.05 1742.4 cv
cp
f
1136.05 1767.69 mo
1097.34 1767.69 li
1094.19 1767.69 1091.64 1770.25 1091.64 1773.4 cv
1091.64 1776.55 1094.19 1779.1 1097.34 1779.1 cv
1136.05 1779.1 li
1139.2 1779.1 1141.75 1776.55 1141.75 1773.4 cv
1141.75 1770.25 1139.2 1767.69 1136.05 1767.69 cv
cp
f
1136.05 1792.99 mo
1097.34 1792.99 li
1094.19 1792.99 1091.64 1795.54 1091.64 1798.69 cv
1091.64 1801.85 1094.19 1804.4 1097.34 1804.4 cv
1136.05 1804.4 li
1139.2 1804.4 1141.75 1801.85 1141.75 1798.69 cv
1141.76 1795.55 1139.2 1792.99 1136.05 1792.99 cv
cp
f
1136.05 1818.29 mo
1097.34 1818.29 li
1094.19 1818.29 1091.64 1820.84 1091.64 1823.99 cv
1091.64 1827.14 1094.19 1829.7 1097.34 1829.7 cv
1136.05 1829.7 li
1139.2 1829.7 1141.75 1827.14 1141.75 1823.99 cv
1141.76 1820.84 1139.2 1818.29 1136.05 1818.29 cv
cp
f
1136.05 1843.59 mo
1097.34 1843.59 li
1094.19 1843.59 1091.64 1846.14 1091.64 1849.29 cv
1091.64 1852.44 1094.19 1855 1097.34 1855 cv
1136.05 1855 li
1139.2 1855 1141.75 1852.44 1141.75 1849.29 cv
1141.76 1846.14 1139.2 1843.59 1136.05 1843.59 cv
cp
f
1258.6 1915.34 mo
1085.52 1915.34 li
1082.37 1915.34 1079.82 1917.89 1079.82 1921.04 cv
1079.82 1922.86 1079.82 1927.41 1079.82 1928.34 cv
1079.82 1931.81 1077 1934.63 1073.53 1934.63 cv
1070.06 1934.63 1067.23 1931.81 1067.23 1928.33 cv
1067.23 1908.08 li
1067.23 1904.93 1064.68 1902.38 1061.53 1902.38 cv
1058.38 1902.38 1055.83 1904.93 1055.83 1908.08 cv
1055.83 1915.34 li
963.252 1915.34 li
960.102 1915.34 957.549 1917.89 957.549 1921.04 cv
957.549 1924.19 960.102 1926.74 963.252 1926.74 cv
1055.83 1926.74 li
1055.83 1928.33 li
1055.83 1938.09 1063.77 1946.03 1073.53 1946.03 cv
1083.29 1946.03 1091.23 1938.09 1091.23 1928.33 cv
1091.23 1926.74 li
1258.6 1926.74 li
1261.75 1926.74 1264.3 1924.19 1264.3 1921.04 cv
1264.3 1917.89 1261.75 1915.34 1258.6 1915.34 cv
cp
f
1233.51 1952.88 mo
1177.6 1952.88 li
1174.45 1952.88 1171.9 1955.43 1171.9 1958.58 cv
1171.9 1961.73 1174.45 1964.28 1177.6 1964.28 cv
1233.51 1964.28 li
1236.66 1964.28 1239.21 1961.73 1239.21 1958.58 cv
1239.21 1955.43 1236.66 1952.88 1233.51 1952.88 cv
cp
f
1150.99 1952.88 mo
988.345 1952.88 li
985.195 1952.88 982.642 1955.43 982.642 1958.58 cv
982.642 1961.73 985.195 1964.28 988.345 1964.28 cv
1150.99 1964.28 li
1154.14 1964.28 1156.69 1961.73 1156.69 1958.58 cv
1156.69 1955.43 1154.14 1952.88 1150.99 1952.88 cv
cp
f
1208.79 1990.41 mo
1080.27 1990.41 li
1077.12 1990.41 1074.57 1992.97 1074.57 1996.12 cv
1074.57 1999.27 1077.12 2001.82 1080.27 2001.82 cv
1208.79 2001.82 li
1211.95 2001.82 1214.5 1999.27 1214.5 1996.12 cv
1214.5 1992.97 1211.94 1990.41 1208.79 1990.41 cv
cp
f
1053.66 1990.41 mo
1013.06 1990.41 li
1009.91 1990.41 1007.35 1992.97 1007.35 1996.12 cv
1007.35 1999.27 1009.91 2001.82 1013.06 2001.82 cv
1053.66 2001.82 li
1056.81 2001.82 1059.36 1999.27 1059.36 1996.12 cv
1059.36 1992.97 1056.81 1990.41 1053.66 1990.41 cv
cp
f
1257.75 1874.26 mo
1257.75 1876.54 1255.9 1878.4 1253.62 1878.4 cv
1211.91 1878.4 li
1211.91 1843.84 li
1211.91 1841.57 1213.75 1839.73 1216.02 1839.73 cv
1253.64 1839.73 li
1255.91 1839.73 1257.75 1841.57 1257.75 1843.84 cv
1257.75 1874.26 li
1257.75 1874.26 li
cp
1200.5 1843.84 mo
1200.5 1878.4 li
1166.93 1878.4 li
1166.93 1742.92 li
1200.5 1768.94 li
1200.5 1843.84 li
1200.5 1843.84 li
cp
1155.52 1731.29 mo
1155.52 1878.4 li
1076.96 1878.4 li
1076.96 1867.51 1076.96 1705.64 1076.96 1699.39 cv
1076.96 1697.13 1078.81 1695.28 1081.07 1695.28 cv
1088.53 1695.28 1142.46 1695.28 1151.41 1695.28 cv
1153.68 1695.28 1155.52 1697.13 1155.52 1699.39 cv
1155.52 1731.29 li
1155.52 1731.29 li
cp
1093.32 1659.93 mo
1093.32 1657.67 1095.17 1655.82 1097.43 1655.82 cv
1135.05 1655.82 li
1137.32 1655.82 1139.16 1657.67 1139.16 1659.93 cv
1139.16 1683.88 li
1093.32 1683.88 li
1093.32 1659.93 li
1093.32 1659.93 li
cp
1008.31 1878.4 mo
967.085 1878.4 li
965.44 1878.4 964.103 1877.06 964.103 1875.41 cv
964.103 1868.88 li
964.103 1866.61 965.946 1864.77 968.212 1864.77 cv
1004.2 1864.77 li
1006.46 1864.77 1008.31 1866.61 1008.31 1868.88 cv
1008.31 1878.4 li
1008.31 1878.4 li
cp
1300.7 1878.4 mo
1268.58 1878.4 li
1269.61 1874.68 1268.96 1874.75 1269.16 1843.84 cv
1269.16 1835.28 1262.2 1828.32 1253.64 1828.32 cv
1214.66 1828.53 1215.61 1827.87 1211.91 1828.89 cv
1211.91 1766.15 li
1211.91 1764.38 1211.09 1762.72 1209.7 1761.64 cv
1166.93 1728.49 li
1166.93 1699.39 li
1166.93 1690.84 1159.97 1683.88 1151.41 1683.88 cv
1150.57 1683.88 li
1150.57 1659.93 li
1150.57 1651.38 1143.61 1644.42 1135.05 1644.42 cv
1121.95 1644.42 li
1121.95 1618.22 li
1121.95 1615.07 1119.39 1612.52 1116.24 1612.52 cv
1113.09 1612.52 1110.54 1615.07 1110.54 1618.22 cv
1110.54 1644.42 li
1097.44 1644.42 li
1088.88 1644.42 1081.92 1651.38 1081.92 1659.93 cv
1081.92 1683.88 li
1081.08 1683.88 li
1072.52 1683.88 1065.56 1690.84 1065.56 1699.39 cv
1065.56 1761.01 li
1061.82 1759.98 1062.4 1760.64 1023.83 1760.44 cv
1015.27 1760.44 1008.31 1767.4 1008.31 1775.96 cv
1008.31 1803.16 li
1008.31 1806.31 1010.87 1808.87 1014.02 1808.87 cv
1017.17 1808.87 1019.72 1806.31 1019.72 1803.16 cv
1019.72 1775.96 li
1019.72 1773.73 1021.6 1771.85 1023.83 1771.85 cv
1061.45 1771.85 li
1063.72 1771.85 1065.56 1773.69 1065.56 1775.96 cv
1065.56 1878.4 li
1019.72 1878.4 li
1019.72 1859.85 1019.72 1847.78 1019.72 1829.78 cv
1019.72 1826.63 1017.16 1824.08 1014.01 1824.08 cv
1010.86 1824.08 1008.31 1826.63 1008.31 1829.78 cv
1008.31 1853.93 li
1004.63 1852.92 1005.45 1853.56 968.216 1853.36 cv
959.66 1853.36 952.699 1860.32 952.699 1868.88 cv
952.776 1874.77 952.504 1875.99 953.014 1878.4 cv
922.804 1878.4 li
919.653 1878.4 917.102 1880.95 917.102 1884.11 cv
917.102 1887.26 919.653 1889.81 922.804 1889.81 cv
933.105 1889.81 1290.4 1889.81 1300.7 1889.81 cv
1303.85 1889.81 1306.4 1887.26 1306.4 1884.11 cv
1306.4 1880.95 1303.85 1878.4 1300.7 1878.4 cv
cp
f
487.914 1840.31 mo
495.102 1839.98 496.305 1829.5 493.205 1827.11 cv
490.106 1824.73 486.522 1826.37 486.031 1829.32 cv
485.54 1832.28 480.665 1832.85 480.955 1837.14 cv
481.246 1841.44 487.914 1840.31 487.914 1840.31 cv
cp
f
474.376 1862.17 mo
477.247 1857.42 474.705 1852.38 470.716 1851.96 cv
466.731 1851.54 465.474 1844.51 459.788 1845.36 cv
454.101 1846.21 456.273 1855.8 456.273 1855.8 cv
457.431 1866.21 471.504 1866.92 474.376 1862.17 cv
cp
f
364.563 1830.07 mo
344.305 1830.07 li
344.305 1792.89 li
364.563 1792.89 li
364.563 1830.07 li
cp
332.9 1830.07 mo
312.643 1830.07 li
312.643 1792.89 li
332.9 1792.89 li
332.9 1830.07 li
cp
367.01 1781.49 mo
360.99 1781.49 316.216 1781.49 310.197 1781.49 cv
305.257 1781.49 301.237 1785.51 301.237 1790.45 cv
301.237 1832.52 li
301.237 1837.46 305.257 1841.48 310.197 1841.48 cv
316.218 1841.48 360.987 1841.48 367.01 1841.48 cv
371.95 1841.48 375.969 1837.46 375.969 1832.52 cv
375.969 1790.45 li
375.968 1785.51 371.948 1781.49 367.01 1781.49 cv
cp
f
611.782 1986.91 mo
611.782 1988.8 610.247 1990.33 608.36 1990.33 cv
342.817 1990.33 li
345.795 1982.3 354.581 1977.7 363.062 1980.27 cv
365.647 1981.06 368.425 1979.92 369.72 1977.55 cv
379.833 1959.05 400.896 1949.55 421.421 1954.14 cv
424.494 1954.83 427.541 1952.9 428.232 1949.83 cv
438.147 1905.7 479.961 1873.06 527.533 1876.9 cv
530.426 1877.13 533.054 1875.14 533.596 1872.28 cv
537.839 1849.86 556.664 1832.67 579.374 1830.49 cv
581.832 1830.26 583.858 1828.47 584.395 1826.06 cv
588.813 1806.23 608.347 1797.88 611.26 1800.06 cv
612.036 1800.64 611.782 1794.55 611.782 1986.91 cv
cp
332.9 1916.27 mo
332.9 1953.44 li
312.643 1953.44 li
312.643 1916.27 li
332.9 1916.27 li
cp
364.563 1916.27 mo
364.563 1953.44 li
344.305 1953.44 li
344.305 1916.27 li
364.563 1916.27 li
cp
330.979 1990.33 mo
268.292 1990.33 li
268.292 1890.31 li
408.914 1890.31 li
408.914 1941.62 li
397.379 1942.05 385.798 1945.93 375.968 1953.3 cv
375.968 1913.82 li
375.968 1908.88 371.949 1904.86 367.009 1904.86 cv
360.989 1904.86 316.215 1904.86 310.196 1904.86 cv
305.255 1904.86 301.236 1908.88 301.236 1913.82 cv
301.236 1955.89 li
301.236 1960.83 305.255 1964.85 310.196 1964.85 cv
338.601 1964.85 li
364.385 1964.85 li
363.372 1966.19 362.601 1967.31 361.902 1968.39 cv
347.134 1966.46 333.878 1976.44 330.979 1990.33 cv
cp
253.023 1878.9 mo
250.474 1878.9 248.399 1876.83 248.399 1874.28 cv
248.399 1871.73 250.474 1869.65 253.023 1869.65 cv
258.964 1869.65 418.046 1869.65 424.183 1869.65 cv
426.732 1869.65 428.806 1871.73 428.806 1874.28 cv
428.806 1876.83 426.732 1878.9 424.183 1878.9 cv
414.616 1878.9 li
406.397 1878.9 257.531 1878.9 253.023 1878.9 cv
cp
268.292 1798.11 mo
338.603 1727.03 li
408.915 1798.11 li
408.915 1858.25 li
268.292 1858.25 li
268.292 1798.11 li
cp
528.549 1793.8 mo
535.05 1791.69 534.245 1791.95 538.418 1790.6 cv
550.736 1828.57 li
547.621 1830.53 544.699 1832.75 541.985 1835.21 cv
528.549 1793.8 li
cp
474.75 1798.53 mo
473.926 1797.76 473.667 1799.97 484.009 1759.5 cv
536.14 1742.58 li
539.136 1741.61 540.776 1738.39 539.804 1735.4 cv
538.833 1732.4 535.611 1730.76 532.619 1731.73 cv
459.272 1755.53 463.631 1754.45 462.786 1753.66 cv
461.96 1752.89 461.461 1756.04 474.612 1704.57 cv
510.884 1692.8 li
513.88 1691.83 515.521 1688.61 514.548 1685.61 cv
513.575 1682.62 510.356 1680.98 507.363 1681.95 cv
453.787 1699.33 457.329 1698.53 456.475 1697.73 cv
455.653 1696.96 454.887 1701.15 472.43 1632.49 cv
474.625 1623.9 482.304 1621.4 489.137 1627.07 cv
489.569 1627.43 540.158 1669.31 540.33 1669.84 cv
540.544 1670.5 540.246 1671.27 539.412 1671.55 cv
529.157 1674.88 li
524.892 1676.26 523.823 1681.82 527.273 1684.69 cv
527.703 1685.05 567.891 1718.29 568.063 1718.82 cv
568.302 1719.56 567.853 1720.31 567.183 1720.52 cv
553.799 1724.86 li
549.534 1726.24 548.465 1731.8 551.916 1734.67 cv
584.288 1761.56 li
585.097 1762.23 584.852 1763.54 583.847 1763.87 cv
468.649 1801.25 475.608 1799.34 474.75 1798.53 cv
cp
603.981 1789.16 mo
591.822 1792.92 579.203 1804.26 574.32 1819.65 cv
569.716 1820.39 565.266 1821.64 561.033 1823.34 cv
549.267 1787.08 li
587.37 1774.72 li
596.902 1771.62 599.293 1759.19 591.577 1752.79 cv
567.169 1732.51 li
572.206 1730.88 569.961 1731.6 570.726 1731.36 cv
577.409 1729.19 581.082 1721.98 578.915 1715.3 cv
577.431 1710.73 577.983 1711.98 542.528 1682.53 cv
550.245 1680.03 553.218 1672.59 551.184 1666.33 cv
549.653 1661.59 551.483 1664.02 496.427 1618.29 cv
483.14 1607.26 465.66 1612.92 461.381 1629.67 cv
445.048 1693.59 li
442.677 1702.85 451.153 1712.17 461.777 1708.73 cv
451.355 1749.53 li
448.873 1759.24 458.104 1767.9 467.638 1764.8 cv
471.172 1763.66 li
463.317 1794.4 li
461.256 1802.47 467.376 1810.3 475.669 1810.3 cv
478.378 1810.3 476.091 1810.82 517.7 1797.32 cv
533.202 1845.1 li
528.861 1851.1 525.541 1857.89 523.523 1865.24 cv
477.563 1863.58 435.539 1892.21 420.317 1936.11 cv
420.317 1890.3 li
424.18 1890.3 li
433.02 1890.3 440.21 1883.11 440.21 1874.27 cv
440.21 1865.43 433.02 1858.24 424.18 1858.24 cv
420.317 1858.24 li
420.317 1808.11 li
436.641 1816 451.136 1795 438.68 1782.4 cv
384.881 1728.02 li
382.667 1725.78 379.056 1725.76 376.817 1727.98 cv
374.577 1730.19 374.558 1733.8 376.772 1736.04 cv
434.632 1794.53 431.921 1790.97 431.906 1793.7 cv
431.885 1797.85 426.856 1799.82 423.995 1796.93 cv
336.492 1708.48 342.002 1713.01 338.603 1713.01 cv
335.203 1713.01 340.708 1708.48 253.208 1796.93 cv
251.414 1798.74 248.48 1798.76 246.667 1796.97 cv
244.851 1795.17 244.833 1792.24 246.632 1790.43 cv
342.378 1693.64 335.845 1699.41 338.603 1699.41 cv
341.238 1699.41 340.071 1698.94 363.352 1722.47 cv
365.567 1724.71 369.177 1724.73 371.417 1722.52 cv
373.655 1720.3 373.675 1716.69 371.461 1714.45 cv
350 1692.76 li
343.736 1686.43 333.479 1686.42 327.206 1692.76 cv
238.523 1782.41 li
235.512 1785.45 233.865 1789.49 233.889 1793.77 cv
233.953 1805.5 246.234 1813.23 256.885 1808.1 cv
256.885 1858.25 li
253.023 1858.25 li
244.183 1858.25 236.993 1865.44 236.993 1874.28 cv
236.993 1883.12 244.185 1890.31 253.023 1890.31 cv
256.885 1890.31 li
256.885 1996.04 li
256.885 1999.19 259.438 2001.74 262.588 2001.74 cv
270.013 2001.74 601.279 2001.74 608.36 2001.74 cv
616.537 2001.74 623.188 1995.09 623.188 1986.91 cv
623.188 1802.55 li
623.188 1790.44 613.28 1786.29 603.981 1789.16 cv
cp
f
3085.48 1090.69 mo
3142.83 1080.27 li
3145.92 1079.71 3147.96 1076.75 3147.4 1073.66 cv
3146.84 1070.57 3143.88 1068.52 3140.79 1069.08 cv
3083.45 1079.5 li
3080.36 1080.06 3078.31 1083.02 3078.87 1086.11 cv
3079.44 1089.22 3082.42 1091.25 3085.48 1090.69 cv
cp
f
3081.94 1071.2 mo
3139.29 1060.78 li
3142.38 1060.22 3144.42 1057.26 3143.86 1054.17 cv
3143.3 1051.08 3140.34 1049.03 3137.25 1049.6 cv
3079.91 1060.01 li
3076.82 1060.57 3074.77 1063.53 3075.33 1066.62 cv
3075.9 1069.74 3078.88 1071.76 3081.94 1071.2 cv
cp
f
3114.63 1148.59 mo
3117.71 1148.03 3119.76 1145.07 3119.2 1141.98 cv
3117.75 1133.98 li
3117.19 1130.89 3114.22 1128.83 3111.14 1129.4 cv
3108.05 1129.96 3106 1132.92 3106.56 1136.01 cv
3108.02 1144.02 li
3108.58 1147.13 3111.57 1149.15 3114.63 1148.59 cv
cp
f
3343.54 1253.87 mo
3343.35 1254.44 3343.24 1255.06 3343.24 1255.7 cv
3343.24 1267.37 3333.74 1276.88 3322.06 1276.88 cv
3310.38 1276.88 3300.88 1267.37 3300.88 1255.7 cv
3300.88 1252.56 3298.33 1250.01 3295.19 1250.01 cv
3292.05 1250.01 3289.51 1252.56 3289.51 1255.7 cv
3289.51 1267.37 3280 1276.88 3268.33 1276.88 cv
3256.65 1276.88 3247.15 1267.37 3247.15 1255.7 cv
3247.15 1252.56 3244.6 1250.01 3241.46 1250.01 cv
3238.32 1250.01 3235.78 1252.56 3235.78 1255.7 cv
3235.78 1267.37 3226.27 1276.88 3214.59 1276.88 cv
3202.92 1276.88 3193.42 1267.37 3193.42 1255.7 cv
3193.42 1252.56 3190.87 1250.01 3187.73 1250.01 cv
3184.59 1250.01 3182.04 1252.56 3182.04 1255.7 cv
3182.04 1267.37 3172.54 1276.88 3160.86 1276.88 cv
3149.19 1276.88 3139.68 1267.37 3139.68 1255.7 cv
3139.68 1252.56 3137.14 1250.01 3134 1250.01 cv
3130.86 1250.01 3128.31 1252.56 3128.31 1255.7 cv
3128.31 1267.37 3118.81 1276.88 3107.13 1276.88 cv
3095.45 1276.88 3085.95 1267.37 3085.95 1255.7 cv
3085.95 1252.56 3083.41 1250.01 3080.27 1250.01 cv
3077.13 1250.01 3074.58 1252.56 3074.58 1255.7 cv
3074.58 1267.37 3065.08 1276.88 3053.4 1276.88 cv
3041.72 1276.88 3032.22 1267.37 3032.22 1255.7 cv
3032.22 1252.56 3029.68 1250.01 3026.54 1250.01 cv
3023.4 1250.01 3020.85 1252.56 3020.85 1255.7 cv
3020.85 1267.37 3011.35 1276.88 2999.67 1276.88 cv
2987.99 1276.88 2978.49 1267.37 2978.49 1255.7 cv
2978.49 1255.09 2978.39 1254.51 2978.22 1253.97 cv
2978.22 1233.99 li
2992.88 1246.87 3015.45 1244.06 3026.53 1227.9 cv
3039.51 1246.83 3067.31 1246.8 3080.26 1227.9 cv
3093.24 1246.83 3121.04 1246.8 3133.99 1227.9 cv
3146.97 1246.83 3174.77 1246.8 3187.73 1227.9 cv
3200.7 1246.83 3228.5 1246.8 3241.46 1227.9 cv
3254.44 1246.83 3282.24 1246.8 3295.19 1227.9 cv
3306.26 1244.05 3328.86 1246.89 3343.54 1233.96 cv
3343.54 1253.87 li
3343.54 1253.87 li
cp
3343.54 1303.06 mo
3343.54 1304.94 3342.01 1306.47 3340.13 1306.47 cv
2981.63 1306.47 li
2979.75 1306.47 2978.22 1304.94 2978.22 1303.06 cv
2978.22 1280.15 li
2992.88 1293.03 3015.46 1290.21 3026.53 1274.05 cv
3039.51 1292.98 3067.31 1292.95 3080.27 1274.05 cv
3093.24 1292.98 3121.04 1292.95 3134 1274.05 cv
3146.97 1292.98 3174.78 1292.95 3187.73 1274.05 cv
3200.71 1292.98 3228.51 1292.95 3241.46 1274.05 cv
3254.44 1292.99 3282.24 1292.95 3295.19 1274.05 cv
3306.26 1290.2 3328.86 1293.05 3343.54 1280.12 cv
3343.54 1303.06 li
3343.54 1303.06 li
cp
2978.22 1187.84 mo
2992.89 1200.72 3015.46 1197.91 3026.54 1181.74 cv
3039.52 1200.68 3067.32 1200.64 3080.27 1181.74 cv
3093.25 1200.68 3121.05 1200.64 3134 1181.74 cv
3146.91 1200.58 3174.72 1200.73 3187.73 1181.74 cv
3200.71 1200.68 3228.49 1200.67 3241.46 1181.74 cv
3254.44 1200.68 3282.24 1200.64 3295.19 1181.74 cv
3306.26 1197.9 3328.86 1200.74 3343.54 1187.81 cv
3343.54 1207.72 li
3343.35 1208.29 3343.24 1208.9 3343.24 1209.55 cv
3343.24 1221.22 3333.74 1230.72 3322.06 1230.72 cv
3310.38 1230.72 3300.88 1221.22 3300.88 1209.55 cv
3300.88 1206.4 3298.33 1203.86 3295.19 1203.86 cv
3292.05 1203.86 3289.51 1206.4 3289.51 1209.55 cv
3289.51 1221.22 3280 1230.72 3268.32 1230.72 cv
3256.65 1230.72 3247.14 1221.22 3247.14 1209.55 cv
3247.14 1206.4 3244.6 1203.86 3241.46 1203.86 cv
3238.32 1203.86 3235.77 1206.4 3235.77 1209.55 cv
3235.77 1221.22 3226.27 1230.72 3214.59 1230.72 cv
3202.92 1230.72 3193.41 1221.22 3193.41 1209.55 cv
3193.41 1206.4 3190.87 1203.86 3187.73 1203.86 cv
3184.59 1203.86 3182.04 1206.4 3182.04 1209.55 cv
3182.04 1221.22 3172.54 1230.72 3160.86 1230.72 cv
3149.18 1230.72 3139.68 1221.22 3139.68 1209.55 cv
3139.68 1206.4 3137.14 1203.86 3134 1203.86 cv
3130.86 1203.86 3128.31 1206.4 3128.31 1209.55 cv
3128.31 1221.22 3118.81 1230.72 3107.13 1230.72 cv
3095.45 1230.72 3085.95 1221.22 3085.95 1209.55 cv
3085.95 1206.4 3083.41 1203.86 3080.27 1203.86 cv
3077.13 1203.86 3074.58 1206.4 3074.58 1209.55 cv
3074.58 1221.22 3065.08 1230.72 3053.4 1230.72 cv
3041.72 1230.72 3032.22 1221.22 3032.22 1209.55 cv
3032.22 1206.4 3029.68 1203.86 3026.54 1203.86 cv
3023.4 1203.86 3020.85 1206.4 3020.85 1209.55 cv
3020.85 1221.22 3011.35 1230.72 2999.67 1230.72 cv
2987.99 1230.72 2978.49 1221.22 2978.49 1209.55 cv
2978.49 1208.94 2978.4 1208.36 2978.22 1207.81 cv
2978.22 1207.81 2978.22 1187.84 2978.22 1187.84 cv
cp
3096.12 1117.45 mo
3095.38 1113.25 3098.17 1109.23 3102.38 1108.47 cv
3133.26 1102.86 li
3137.11 1102.16 3141.32 1104.39 3142.31 1109.23 cv
3157.62 1184.33 li
3147.47 1182.76 3139.68 1173.97 3139.68 1163.39 cv
3139.68 1160.25 3137.13 1157.71 3134 1157.71 cv
3130.86 1157.71 3128.31 1160.25 3128.31 1163.39 cv
3128.31 1174.17 3120.22 1183.09 3109.79 1184.4 cv
3096.12 1117.45 li
cp
3280.11 1078.24 mo
3280.52 1076.54 3282.23 1075.49 3283.92 1075.9 cv
3285.62 1076.3 3286.67 1078.01 3286.26 1079.71 cv
3272.46 1137.26 li
3271.38 1141.8 3275.94 1145.65 3280.23 1143.82 cv
3289.63 1139.79 3289.76 1139.44 3291.33 1140.07 cv
3293.93 1141.11 3294 1144.8 3291.4 1145.92 cv
3270.61 1154.81 li
3268.94 1155.53 3267.71 1157 3267.31 1158.77 cv
3261.63 1183.48 li
3259.45 1182.75 3257.42 1181.68 3255.62 1180.32 cv
3255.74 1179.9 3280.01 1078.67 3280.11 1078.24 cv
cp
3020.22 1088.04 mo
3015.78 1088.85 3012.49 1083.86 3015.07 1080.1 cv
3095.62 962.437 3090.06 968.89 3093.9 968.89 cv
3096.24 968.89 3088.51 963.973 3205.01 1045.59 cv
3207.33 1047.21 3207.89 1050.42 3206.27 1052.74 cv
3204.64 1055.05 3201.44 1055.62 3199.12 1054 cv
3196.17 1051.93 3104.38 987.623 3099.92 984.496 cv
3097.32 982.677 3093.74 983.337 3091.96 985.94 cv
3019.99 1091.08 3022.88 1088.04 3020.22 1088.04 cv
cp
3175.8 1011.25 mo
3169.57 1006.88 3154.29 996.178 3148.06 991.811 cv
3143.77 968.192 li
3167.21 963.935 li
3175.8 1011.25 li
cp
3130.02 950.23 mo
3131.69 947.824 3130.65 948.59 3169.92 941.453 cv
3176.76 940.222 3178.25 950.371 3171.75 951.55 cv
3171.75 951.55 3135.16 958.198 3135.16 958.198 cv
3130.68 959.007 3127.42 953.994 3130.02 950.23 cv
cp
3343.24 1163.39 mo
3343.24 1175.07 3333.74 1184.57 3322.06 1184.57 cv
3310.38 1184.57 3300.88 1175.07 3300.88 1163.39 cv
3300.88 1160.25 3298.33 1157.71 3295.19 1157.71 cv
3292.05 1157.71 3289.51 1160.25 3289.51 1163.39 cv
3289.51 1173.4 3282.52 1181.8 3273.18 1184 cv
3277.74 1164.13 li
3295.87 1156.37 li
3303.26 1153.21 3306.68 1144.68 3303.52 1137.29 cv
3300.57 1130.4 3293.02 1127.04 3286.13 1129.04 cv
3287.17 1124.71 li
3296.15 1124.94 3304.7 1121.32 3310.74 1115.04 cv
3334.98 1118.47 3357.17 1099.06 3356.11 1073.91 cv
3355.98 1070.78 3353.34 1068.32 3350.19 1068.47 cv
3347.05 1068.6 3344.62 1071.25 3344.75 1074.39 cv
3345.54 1093.3 3327.99 1107.55 3309.85 1103.32 cv
3307.66 1102.81 3305.38 1103.63 3304.03 1105.42 cv
3300.6 1109.95 3295.42 1112.74 3289.91 1113.27 cv
3297.32 1082.36 li
3299.18 1074.57 3294.36 1066.71 3286.57 1064.84 cv
3278.78 1062.97 3270.92 1067.79 3269.05 1075.59 cv
3263.5 1098.76 li
3263.11 1098.84 3262.72 1098.97 3262.35 1099.14 cv
3250.64 1104.53 3238.01 1093.31 3242.06 1081.03 cv
3242.76 1078.92 3242.16 1076.59 3240.53 1075.08 cv
3227.34 1062.86 3233.81 1040.78 3251.5 1037.62 cv
3253.95 1037.18 3255.83 1035.2 3256.14 1032.73 cv
3257.77 1019.72 3271.72 1012.37 3283.33 1018.12 cv
3285.39 1019.15 3287.87 1018.82 3289.6 1017.3 cv
3307.52 1001.58 3334.96 1018.32 3329.44 1041.31 cv
3329.21 1042.29 3328.9 1043.3 3328.52 1044.29 cv
3327.55 1046.87 3328.56 1049.76 3330.92 1051.17 cv
3334.05 1053.05 3336.76 1055.48 3338.98 1058.4 cv
3340.88 1060.9 3344.44 1061.39 3346.94 1059.5 cv
3349.45 1057.6 3349.94 1054.03 3348.04 1051.53 cv
3345.86 1048.65 3343.33 1046.12 3340.5 1043.95 cv
3348.11 1012.16 3312.05 987.222 3284.96 1006.49 cv
3268.27 1000.6 3250.09 1010.32 3245.62 1027.36 cv
3222.66 1034.39 3214.54 1062.82 3230.38 1080.92 cv
3227.11 1098.68 3242.54 1114.5 3260.43 1111.52 cv
3247.33 1166.17 li
3247.21 1165.26 3247.14 1164.33 3247.14 1163.39 cv
3247.14 1160.25 3244.6 1157.71 3241.46 1157.71 cv
3238.32 1157.71 3235.77 1160.25 3235.77 1163.39 cv
3235.77 1173.48 3228.68 1181.94 3219.22 1184.05 cv
3204.42 1104.36 li
3203.85 1101.27 3200.87 1099.23 3197.79 1099.81 cv
3194.71 1100.38 3192.67 1103.35 3193.24 1106.44 cv
3207.53 1183.35 li
3199.31 1180.44 3193.41 1172.59 3193.41 1163.39 cv
3193.41 1160.25 3190.87 1157.71 3187.73 1157.71 cv
3184.59 1157.71 3182.04 1160.25 3182.04 1163.39 cv
3182.04 1172.21 3176.62 1179.78 3168.95 1182.96 cv
3153.46 1107.02 li
3151.54 1096.65 3141.61 1089.79 3131.22 1091.67 cv
3100.35 1097.28 li
3089.54 1099.24 3082.97 1109.72 3084.96 1119.65 cv
3097.77 1182.39 li
3090.77 1178.93 3085.95 1171.71 3085.95 1163.39 cv
3085.95 1160.25 3083.4 1157.71 3080.26 1157.71 cv
3077.12 1157.71 3074.58 1160.25 3074.58 1163.39 cv
3074.58 1173.98 3066.77 1182.78 3056.6 1184.33 cv
3056.63 1183.14 3039.01 1085.44 3038.72 1083.84 cv
3098.1 997.105 li
3184.18 1057.41 li
3186.97 1072.75 3185.78 1066.27 3189.81 1087.99 cv
3190.39 1091.08 3193.36 1093.11 3196.44 1092.54 cv
3199.53 1091.97 3201.57 1089 3200.99 1085.91 cv
3197.19 1065.47 3197.76 1068.56 3197.22 1065.56 cv
3203.87 1067.6 3211.37 1065.26 3215.58 1059.26 cv
3220.8 1051.81 3218.98 1041.5 3211.53 1036.28 cv
3189.04 1020.52 li
3178.27 961.235 li
3184.55 958.075 3188.43 951.018 3187.07 943.55 cv
3185.45 934.602 3176.84 928.639 3167.89 930.27 cv
3131.29 936.919 li
3122.32 938.549 3116.38 947.129 3118.01 956.103 cv
3119.35 963.499 3125.38 968.798 3132.46 969.554 cv
3134.82 982.538 li
3103.37 960.508 li
3095.87 955.252 3085.48 957.132 3080.29 964.702 cv
3005.69 1073.67 li
2997.51 1085.63 3007.75 1101.86 3022.25 1099.23 cv
3024.9 1098.75 3027.32 1097.65 3029.39 1096.05 cv
3030.04 1099.67 3044.12 1178.42 3044.9 1182.78 cv
3037.44 1179.5 3032.22 1172.05 3032.22 1163.39 cv
3032.22 1160.25 3029.67 1157.71 3026.53 1157.71 cv
3023.39 1157.71 3020.85 1160.25 3020.85 1163.39 cv
3020.85 1175.07 3011.35 1184.57 2999.67 1184.57 cv
2987.99 1184.57 2978.49 1175.07 2978.49 1163.39 cv
2978.49 1157.08 2969.7 1155.52 2967.49 1161.39 cv
2967.08 1162.17 2966.85 1163.06 2966.85 1164 cv
2966.85 1303.06 li
2966.85 1311.21 2973.48 1317.84 2981.63 1317.84 cv
3340.13 1317.84 li
3348.28 1317.84 3354.91 1311.21 3354.91 1303.06 cv
3354.91 1164 li
3354.91 1162.98 3354.64 1162.02 3354.17 1161.19 cv
3351.78 1155.52 3343.24 1157.21 3343.24 1163.39 cv
cp
f
2448.09 1028.29 mo
2451.24 1028.29 2453.79 1025.74 2453.79 1022.59 cv
2453.79 1013.72 2461 1006.5 2469.88 1006.5 cv
2478.75 1006.5 2485.97 1013.72 2485.97 1022.59 cv
2485.97 1072.07 li
2485.97 1075.22 2488.52 1077.77 2491.67 1077.77 cv
2494.82 1077.77 2497.37 1075.22 2497.37 1072.07 cv
2497.37 1022.59 li
2497.37 1007.43 2485.04 995.101 2469.88 995.101 cv
2454.72 995.101 2442.38 1007.43 2442.38 1022.59 cv
2442.39 1025.74 2444.94 1028.29 2448.09 1028.29 cv
cp
f
2533.63 1031.67 mo
2533.63 1081.15 li
2533.63 1084.3 2536.18 1086.85 2539.33 1086.85 cv
2542.48 1086.85 2545.03 1084.3 2545.03 1081.15 cv
2545.03 1031.67 li
2545.03 1022.8 2552.25 1015.58 2561.12 1015.58 cv
2569.99 1015.58 2577.21 1022.8 2577.21 1031.67 cv
2577.21 1034.82 2579.76 1037.37 2582.91 1037.37 cv
2586.06 1037.37 2588.61 1034.82 2588.61 1031.67 cv
2588.61 1016.51 2576.28 1004.18 2561.12 1004.18 cv
2545.96 1004.18 2533.63 1016.51 2533.63 1031.67 cv
cp
f
2515.45 1086.85 mo
2518.59 1086.85 2521.15 1084.3 2521.15 1081.15 cv
2521.15 956.911 li
2521.15 948.038 2528.36 940.821 2537.24 940.821 cv
2546.11 940.821 2553.32 948.039 2553.32 956.911 cv
2553.32 960.06 2555.88 962.612 2559.03 962.612 cv
2562.17 962.612 2564.73 960.06 2564.73 956.911 cv
2564.73 941.753 2552.39 929.419 2537.23 929.419 cv
2522.08 929.419 2509.74 941.752 2509.74 956.911 cv
2509.74 1081.15 li
2509.74 1084.3 2512.3 1086.85 2515.45 1086.85 cv
cp
f
2448.09 1052.4 mo
2451.24 1052.4 2453.79 1049.85 2453.79 1046.7 cv
2453.79 1044.61 li
2453.79 1041.46 2451.24 1038.9 2448.09 1038.9 cv
2444.94 1038.9 2442.39 1041.46 2442.39 1044.61 cv
2442.39 1046.7 li
2442.39 1049.85 2444.94 1052.4 2448.09 1052.4 cv
cp
f
2582.91 1047.63 mo
2579.76 1047.63 2577.21 1050.18 2577.21 1053.33 cv
2577.21 1055.43 li
2577.21 1058.58 2579.76 1061.13 2582.91 1061.13 cv
2586.06 1061.13 2588.61 1058.58 2588.61 1055.43 cv
2588.61 1053.33 li
2588.61 1050.19 2586.06 1047.63 2582.91 1047.63 cv
cp
f
2350.65 1094.54 mo
2350.65 1096.63 li
2350.65 1099.78 2353.21 1102.34 2356.35 1102.34 cv
2359.5 1102.34 2362.05 1099.78 2362.05 1096.63 cv
2362.05 1094.54 li
2362.05 1091.39 2359.5 1088.84 2356.35 1088.84 cv
2353.21 1088.84 2350.65 1091.39 2350.65 1094.54 cv
cp
f
2424.73 1102.34 mo
2427.88 1102.34 2430.43 1099.78 2430.43 1096.63 cv
2430.43 1094.54 li
2430.43 1091.39 2427.88 1088.84 2424.73 1088.84 cv
2421.58 1088.84 2419.03 1091.39 2419.03 1094.54 cv
2419.03 1096.63 li
2419.03 1099.78 2421.58 1102.34 2424.73 1102.34 cv
cp
f
2355.57 1071.92 mo
2357.98 1073.95 2361.57 1073.64 2363.6 1071.23 cv
2365.62 1068.82 2365.31 1065.22 2362.9 1063.19 cv
2353.69 1055.45 2359.17 1040.33 2371.23 1040.33 cv
2378.37 1040.33 2384.17 1046.14 2384.17 1053.28 cv
2384.17 1083.37 li
2384.17 1086.51 2386.73 1089.07 2389.88 1089.07 cv
2393.02 1089.07 2395.58 1086.51 2395.58 1083.37 cv
2395.58 1053.28 li
2395.58 1039.85 2384.65 1028.93 2371.23 1028.93 cv
2348.51 1028.93 2338.28 1057.39 2355.57 1071.92 cv
cp
f
2298.7 1307.02 mo
2375.5 1159.53 li
2377.62 1155.71 2382.39 1150.14 2386.01 1150.14 cv
2389.69 1150.14 2393.39 1156.18 2395.1 1159.46 cv
2413.58 1194.97 li
2410.69 1200.52 2357.23 1303.2 2355.24 1307.02 cv
2298.7 1307.02 li
2298.7 1307.02 li
cp
2672.25 1310.09 mo
2592.58 1157.08 li
2591.12 1154.28 2587.68 1153.2 2584.89 1154.65 cv
2582.1 1156.11 2581.01 1159.55 2582.46 1162.34 cv
2657.8 1307.02 li
2368.09 1307.02 li
2372.74 1298.1 2462.69 1125.35 2466.43 1118.17 cv
2470 1111.32 2476.86 1100.61 2484.43 1099.08 cv
2490.69 1097.83 2493.01 1103.18 2501.85 1108.72 cv
2503.36 1109.87 2520.39 1123.22 2521.1 1144.62 cv
2521.2 1147.7 2523.73 1150.13 2526.79 1150.13 cv
2530.03 1150.13 2532.6 1147.46 2532.49 1144.25 cv
2532.1 1132.35 2527.87 1122.59 2523.05 1115.25 cv
2543.51 1115.51 2551.44 1102.74 2560.37 1119.9 cv
2573.21 1144.56 li
2574.66 1147.35 2578.1 1148.44 2580.9 1146.98 cv
2583.69 1145.53 2584.78 1142.09 2583.32 1139.29 cv
2570.48 1114.64 li
2560.66 1095.77 2547.62 1099.03 2537.15 1101.64 cv
2526.61 1104.28 2515.71 1107 2501.11 1093.88 cv
2484.33 1078.81 2465.93 1092.71 2456.26 1112.99 cv
2420.01 1182.62 li
2405.21 1154.19 li
2405.21 1154.19 li
2391.95 1128.73 2373.23 1139.11 2365.42 1154.2 cv
2284.25 1310.09 li
2282.28 1313.88 2285.03 1318.42 2289.31 1318.42 cv
2294.32 1318.42 2659.3 1318.42 2667.19 1318.42 cv
2671.46 1318.42 2674.22 1313.88 2672.25 1310.09 cv
cp
f
1900.95 995.605 mo
1900.95 992.455 1898.4 989.903 1895.25 989.903 cv
1860.99 989.903 li
1847.03 989.903 1835.68 1001.26 1835.68 1015.21 cv
1835.68 1039.01 1866.69 1047.24 1866.69 1034.82 cv
1866.69 1031.67 1864.14 1029.11 1860.99 1029.11 cv
1853.32 1029.11 1847.08 1022.88 1847.08 1015.21 cv
1847.08 1007.54 1853.32 1001.31 1860.99 1001.31 cv
1895.25 1001.31 li
1898.4 1001.31 1900.95 998.754 1900.95 995.605 cv
cp
f
1814.56 979.912 mo
1965.7 979.912 li
1968.85 979.912 1971.41 977.359 1971.41 974.209 cv
1971.41 971.059 1968.85 968.507 1965.7 968.507 cv
1814.56 968.507 li
1806.89 968.507 1800.65 962.269 1800.65 954.603 cv
1800.65 946.936 1806.89 940.698 1814.56 940.698 cv
1817.71 940.698 1820.26 938.145 1820.26 934.996 cv
1820.26 931.846 1817.71 929.293 1814.56 929.293 cv
1800.6 929.293 1789.25 940.647 1789.25 954.603 cv
1789.25 968.558 1800.6 979.912 1814.56 979.912 cv
cp
f
1880.79 1029.11 mo
1877.64 1029.11 1875.09 1031.67 1875.09 1034.82 cv
1875.09 1037.97 1877.64 1040.52 1880.79 1040.52 cv
1882.68 1040.52 li
1885.83 1040.52 1888.38 1037.97 1888.38 1034.82 cv
1888.38 1031.67 1885.83 1029.11 1882.68 1029.11 cv
1880.79 1029.11 li
cp
f
1750.77 1106.83 mo
1733.04 1106.83 li
1733.04 1073.53 li
1750.77 1073.53 li
1750.77 1106.83 li
cp
1721.63 1106.83 mo
1703.9 1106.83 li
1703.9 1073.53 li
1721.63 1073.53 li
1721.63 1106.83 li
1721.63 1106.83 li
cp
1753.47 1062.13 mo
1745.89 1062.13 1708.78 1062.13 1701.19 1062.13 cv
1696.4 1062.13 1692.5 1066.03 1692.5 1070.83 cv
1692.5 1109.54 li
1692.5 1114.33 1696.4 1118.24 1701.19 1118.24 cv
1727.33 1118.24 li
1753.47 1118.24 li
1758.27 1118.24 1762.17 1114.33 1762.17 1109.54 cv
1762.17 1070.83 li
1762.17 1066.03 1758.27 1062.13 1753.47 1062.13 cv
cp
f
1841.62 1166.51 mo
1892.84 1166.51 li
1895.99 1166.51 1898.54 1163.96 1898.54 1160.81 cv
1898.54 1157.66 1895.99 1155.1 1892.84 1155.1 cv
1841.62 1155.1 li
1838.47 1155.1 1835.92 1157.66 1835.92 1160.81 cv
1835.92 1163.96 1838.47 1166.51 1841.62 1166.51 cv
cp
f
1841.62 1149.11 mo
1892.84 1149.11 li
1895.99 1149.11 1898.54 1146.56 1898.54 1143.4 cv
1898.54 1140.25 1895.99 1137.7 1892.84 1137.7 cv
1841.62 1137.7 li
1838.47 1137.7 1835.92 1140.25 1835.92 1143.4 cv
1835.92 1146.55 1838.47 1149.11 1841.62 1149.11 cv
cp
f
1978.23 1254.47 mo
1978.05 1255.02 1977.95 1255.6 1977.95 1256.21 cv
1977.95 1267.92 1968.42 1277.45 1956.71 1277.45 cv
1945 1277.45 1935.46 1267.92 1935.46 1256.21 cv
1935.46 1253.06 1932.91 1250.51 1929.76 1250.51 cv
1926.61 1250.51 1924.06 1253.06 1924.06 1256.21 cv
1924.06 1267.92 1914.53 1277.45 1902.81 1277.45 cv
1891.1 1277.45 1881.57 1267.92 1881.57 1256.21 cv
1881.57 1253.06 1879.02 1250.51 1875.87 1250.51 cv
1872.71 1250.51 1870.16 1253.06 1870.16 1256.21 cv
1870.16 1267.92 1860.63 1277.45 1848.92 1277.45 cv
1837.2 1277.45 1827.67 1267.92 1827.67 1256.21 cv
1827.67 1253.06 1825.12 1250.51 1821.97 1250.51 cv
1818.82 1250.51 1816.27 1253.06 1816.27 1256.21 cv
1816.27 1267.92 1806.74 1277.45 1795.02 1277.45 cv
1783.3 1277.45 1773.77 1267.92 1773.77 1256.21 cv
1773.77 1253.06 1771.22 1250.51 1768.07 1250.51 cv
1764.92 1250.51 1762.37 1253.06 1762.37 1256.21 cv
1762.37 1267.92 1752.84 1277.45 1741.13 1277.45 cv
1729.41 1277.45 1719.88 1267.92 1719.88 1256.21 cv
1719.88 1253.06 1717.33 1250.51 1714.18 1250.51 cv
1711.03 1250.51 1708.47 1253.06 1708.47 1256.21 cv
1708.47 1267.92 1698.94 1277.45 1687.23 1277.45 cv
1675.51 1277.45 1665.98 1267.92 1665.98 1256.21 cv
1665.98 1253.06 1663.43 1250.51 1660.28 1250.51 cv
1657.13 1250.51 1654.58 1253.06 1654.58 1256.21 cv
1654.58 1267.92 1645.05 1277.45 1633.33 1277.45 cv
1621.62 1277.45 1612.08 1267.92 1612.08 1256.21 cv
1612.08 1255.57 1611.97 1254.95 1611.78 1254.38 cv
1611.78 1233.67 li
1626.51 1246.65 1649.18 1243.77 1660.27 1227.58 cv
1673.29 1246.58 1701.18 1246.54 1714.17 1227.58 cv
1727.19 1246.58 1755.07 1246.54 1768.06 1227.58 cv
1781.08 1246.58 1808.97 1246.54 1821.96 1227.58 cv
1834.98 1246.58 1862.86 1246.54 1875.86 1227.58 cv
1888.87 1246.58 1916.76 1246.54 1929.75 1227.58 cv
1940.86 1243.8 1963.51 1246.62 1978.21 1233.7 cv
1978.21 1254.47 li
1978.23 1254.47 li
1978.23 1254.47 li
cp
1978.23 1303.72 mo
1978.23 1305.61 1976.69 1307.14 1974.8 1307.14 cv
1615.2 1307.14 li
1613.31 1307.14 1611.78 1305.61 1611.78 1303.72 cv
1611.78 1280.71 li
1626.52 1293.69 1649.19 1290.81 1660.28 1274.62 cv
1673.3 1293.61 1701.18 1293.58 1714.18 1274.62 cv
1727.19 1293.61 1755.08 1293.58 1768.07 1274.62 cv
1781.09 1293.61 1808.97 1293.58 1821.97 1274.62 cv
1834.99 1293.62 1862.87 1293.58 1875.86 1274.62 cv
1888.88 1293.61 1916.77 1293.58 1929.76 1274.62 cv
1940.87 1290.84 1963.52 1293.65 1978.22 1280.74 cv
1978.22 1303.72 li
1978.23 1303.72 li
cp
1721.63 1186.82 mo
1721.63 1217.62 li
1720.51 1215.03 1719.88 1212.17 1719.88 1209.18 cv
1719.88 1206.03 1717.33 1203.47 1714.18 1203.47 cv
1711.03 1203.47 1708.47 1206.03 1708.47 1209.18 cv
1708.47 1214.14 1706.76 1218.7 1703.9 1222.32 cv
1703.9 1186.82 li
1721.63 1186.82 li
1721.63 1186.82 li
cp
1750.77 1186.82 mo
1750.77 1228.1 li
1745.22 1230.94 1738.73 1231.17 1733.04 1228.82 cv
1733.04 1186.82 li
1750.77 1186.82 li
1750.77 1186.82 li
cp
1663.09 1163.17 mo
1787.44 1163.17 1786.03 1163.99 1790.78 1162.26 cv
1790.85 1162.24 li
1791.06 1162.16 1791.38 1162.05 1791.58 1161.96 cv
1791.58 1230.14 li
1781.5 1228.49 1773.77 1219.72 1773.77 1209.18 cv
1773.77 1206.03 1771.22 1203.47 1768.07 1203.47 cv
1764.92 1203.47 1762.37 1206.03 1762.37 1209.18 cv
1762.37 1210.14 1762.3 1211.09 1762.17 1212.03 cv
1762.17 1184.11 li
1762.17 1179.32 1758.27 1175.41 1753.47 1175.41 cv
1745.89 1175.41 1708.78 1175.41 1701.2 1175.41 cv
1696.4 1175.41 1692.5 1179.32 1692.5 1184.11 cv
1692.5 1229.76 li
1679.04 1233.21 1665.98 1222.97 1665.98 1209.18 cv
1665.98 1207.05 1664.82 1205.2 1663.09 1204.22 cv
1663.09 1163.17 li
cp
1887.14 1190.65 mo
1887.14 1223.5 li
1883.68 1219.72 1881.57 1214.69 1881.57 1209.18 cv
1881.57 1206.03 1879.01 1203.47 1875.86 1203.47 cv
1872.71 1203.47 1870.16 1206.03 1870.16 1209.18 cv
1870.16 1220.89 1860.63 1230.42 1848.92 1230.42 cv
1848.38 1230.42 1847.85 1230.39 1847.33 1230.35 cv
1847.33 1190.65 li
1847.33 1187.28 1850.07 1184.54 1853.44 1184.54 cv
1881.02 1184.54 li
1884.39 1184.54 1887.14 1187.28 1887.14 1190.65 cv
cp
1802.98 1152.04 mo
1867.23 1087.09 li
1931.48 1152.04 li
1931.48 1203.74 li
1927.79 1202.57 1924.06 1205.34 1924.06 1209.18 cv
1924.06 1222.56 1911.74 1232.69 1898.54 1229.99 cv
1898.54 1190.65 li
1898.54 1180.99 1890.68 1173.13 1881.02 1173.13 cv
1853.44 1173.13 li
1843.78 1173.13 1835.92 1180.99 1835.92 1190.65 cv
1835.92 1225.97 li
1830.91 1222.08 1827.67 1216 1827.67 1209.18 cv
1827.67 1206.03 1825.12 1203.47 1821.97 1203.47 cv
1818.82 1203.47 1816.26 1206.03 1816.26 1209.18 cv
1816.26 1218.07 1810.76 1225.71 1802.98 1228.87 cv
1802.98 1152.04 li
1802.98 1152.04 li
cp
1663.09 1078.06 mo
1727.33 1013.12 li
1791.58 1078.06 li
1791.58 1120.32 li
1779.28 1132.76 li
1663.09 1132.76 li
1663.09 1078.06 li
cp
1989.35 1209.61 mo
1989.46 1201.4 1977.95 1201.7 1977.95 1209.17 cv
1977.95 1220.89 1968.42 1230.42 1956.71 1230.42 cv
1951.43 1230.42 1946.6 1228.48 1942.88 1225.28 cv
1942.89 1224.83 1942.88 1162.4 1942.88 1161.95 cv
1948.39 1164.29 1955.02 1163.24 1959.53 1158.78 cv
1965.51 1152.86 1965.56 1143.25 1959.65 1137.27 cv
1915.01 1092.14 li
1912.79 1089.9 1909.18 1089.89 1906.94 1092.1 cv
1904.7 1094.31 1904.68 1097.92 1906.9 1100.16 cv
1954.88 1148.66 1952.65 1145.74 1952.64 1147.98 cv
1952.62 1151.36 1948.51 1153.04 1946.14 1150.64 cv
1865.71 1069.34 1870.66 1073.28 1867.23 1073.28 cv
1865.71 1073.28 1864.25 1073.89 1863.18 1074.97 cv
1782.52 1156.51 1787.99 1151.73 1785.69 1151.76 cv
1785.68 1151.76 1785.67 1151.76 1785.67 1151.76 cv
1785.71 1151.76 1789.61 1151.77 1641.17 1151.77 cv
1639.07 1151.77 1637.36 1150.06 1637.36 1147.96 cv
1637.36 1145.87 1639.07 1144.16 1641.17 1144.16 cv
1793.71 1144.16 1783.33 1144.87 1785.71 1142.47 cv
1864.53 1062.8 li
1866.01 1061.3 1868.45 1061.29 1869.93 1062.8 cv
1893.8 1086.92 li
1896.02 1089.16 1899.63 1089.18 1901.86 1086.97 cv
1904.1 1084.75 1904.12 1081.14 1901.91 1078.9 cv
1878.04 1054.78 li
1872.1 1048.77 1862.37 1048.77 1856.42 1054.78 cv
1802.99 1108.79 li
1802.99 1087.78 li
1808.5 1090.12 1815.12 1089.08 1819.64 1084.61 cv
1825.6 1078.71 1825.65 1069.07 1819.75 1063.11 cv
1773.05 1015.9 li
1770.84 1013.66 1767.23 1013.64 1764.99 1015.86 cv
1762.75 1018.07 1762.73 1021.68 1764.95 1023.92 cv
1811.64 1071.13 li
1813.12 1072.62 1813.1 1075.03 1811.61 1076.5 cv
1810.13 1077.98 1807.71 1077.96 1806.24 1076.47 cv
1725.8 995.163 1730.73 999.118 1727.33 999.118 cv
1725.81 999.118 1724.35 999.727 1723.28 1000.81 cv
1642.38 1082.59 1648 1077.6 1645.73 1077.6 cv
1642.37 1077.6 1640.65 1073.53 1643.03 1071.13 cv
1724.63 988.636 li
1726.12 987.129 1728.56 987.136 1730.04 988.634 cv
1751.96 1010.8 li
1754.18 1013.03 1757.79 1013.05 1760.02 1010.84 cv
1762.26 1008.62 1762.28 1005.01 1760.07 1002.78 cv
1738.14 980.614 li
1732.2 974.612 1722.47 974.604 1716.52 980.615 cv
1634.92 1063.11 li
1629.02 1069.07 1629.07 1078.72 1635.03 1084.61 cv
1639.56 1089.09 1646.17 1090.14 1651.68 1087.8 cv
1651.68 1132.76 li
1641.17 1132.76 li
1632.78 1132.76 1625.96 1139.58 1625.96 1147.97 cv
1625.96 1156.35 1632.78 1163.17 1641.17 1163.17 cv
1651.68 1163.17 li
1651.68 1219.06 li
1651.68 1219.3 1651.7 1219.54 1651.73 1219.77 cv
1640.87 1238.56 1612.08 1230.79 1612.08 1209.18 cv
1612.08 1206.03 1609.53 1203.48 1606.38 1203.48 cv
1603.48 1203.48 1600.65 1205.7 1600.69 1209.52 cv
1600.22 1210.87 1600.37 1205.03 1600.37 1303.72 cv
1600.37 1311.9 1607.02 1318.55 1615.2 1318.55 cv
1974.8 1318.55 li
1982.98 1318.55 1989.63 1311.9 1989.63 1303.72 cv
1989.63 1204.98 1989.76 1210.89 1989.35 1209.61 cv
cp
f
1914.76 989.903 mo
1911.61 989.903 1909.06 992.455 1909.06 995.605 cv
1909.06 998.755 1911.61 1001.31 1914.76 1001.31 cv
1936.81 1001.31 li
1939.96 1001.31 1942.51 998.755 1942.51 995.605 cv
1942.51 992.455 1939.96 989.903 1936.81 989.903 cv
1914.76 989.903 li
cp
f
993.479 968.528 mo
996.625 968.776 999.366 966.431 999.614 963.291 cv
1000.23 955.507 1009.74 951.823 1015.42 957.326 cv
1019.32 961.095 1025.8 957.774 1025.03 952.418 cv
1024.13 946.123 1029.04 940.643 1035.22 940.643 cv
1041.49 940.643 1046.39 946.252 1045.4 952.555 cv
1044.65 957.319 1049.81 960.805 1053.95 958.341 cv
1060.48 954.451 1068.99 957.529 1071.51 964.73 cv
1072.56 967.698 1075.81 969.267 1078.78 968.225 cv
1081.75 967.184 1083.32 963.929 1082.28 960.956 cv
1078.51 950.197 1067.51 943.681 1056.25 945.56 cv
1050.92 924.718 1021.48 923.585 1014.63 944.083 cv
992.7 937.839 980.742 967.523 993.479 968.528 cv
cp
.105882 .458824 .729412 rgb
f
1214.12 981.166 mo
1220.72 981.166 1225.89 987.024 1224.93 993.645 cv
1224.16 999.007 1230.64 1002.32 1234.54 998.556 cv
1240.58 992.713 1250.68 996.626 1251.33 1004.89 cv
1251.57 1007.86 1254.04 1010.15 1257.02 1010.15 cv
1278.58 1010.15 li
1281.73 1010.15 1284.28 1007.6 1284.28 1004.45 cv
1284.28 1001.3 1281.73 998.743 1278.58 998.743 cv
1261.6 998.743 li
1257.95 988.242 1246.55 981.926 1235.37 985.231 cv
1232.47 976.264 1224.04 969.761 1214.12 969.761 cv
1210.97 969.761 1208.42 972.314 1208.42 975.463 cv
1208.42 978.612 1210.97 981.166 1214.12 981.166 cv
cp
f
922.804 1028.24 mo
944.366 1028.24 li
947.341 1028.24 949.816 1025.95 950.05 1022.98 cv
950.703 1014.74 960.78 1010.78 966.846 1016.64 cv
970.742 1020.41 977.232 1017.09 976.454 1011.73 cv
975.498 1005.13 980.651 999.254 987.259 999.254 cv
990.408 999.254 992.961 996.702 992.961 993.552 cv
992.961 990.402 990.408 987.849 987.259 987.849 cv
977.339 987.849 968.909 994.354 966.009 1003.32 cv
954.812 1000.01 943.424 1006.35 939.78 1016.83 cv
922.804 1016.83 li
919.655 1016.83 917.102 1019.38 917.102 1022.53 cv
917.102 1025.68 919.655 1028.24 922.804 1028.24 cv
cp
f
987.77 1138.8 mo
1035.54 1138.8 li
1038.69 1138.8 1041.24 1136.25 1041.24 1133.1 cv
1041.24 1129.95 1038.69 1127.39 1035.54 1127.39 cv
987.77 1127.39 li
984.621 1127.39 982.068 1129.95 982.068 1133.1 cv
982.068 1136.25 984.62 1138.8 987.77 1138.8 cv
cp
f
987.77 1122.57 mo
1035.54 1122.57 li
1038.69 1122.57 1041.24 1120.02 1041.24 1116.87 cv
1041.24 1113.72 1038.69 1111.16 1035.54 1111.16 cv
987.77 1111.16 li
984.621 1111.16 982.068 1113.72 982.068 1116.87 cv
982.068 1120.01 984.62 1122.57 987.77 1122.57 cv
cp
f
1295 1256.77 mo
1295 1268.5 1285.27 1278.03 1273.31 1278.03 cv
1261.59 1278.03 1252.05 1268.5 1252.05 1256.77 cv
1252.05 1253.62 1249.5 1251.07 1246.35 1251.07 cv
1243.2 1251.07 1240.65 1253.62 1240.65 1256.77 cv
1240.65 1268.5 1231.11 1278.03 1219.39 1278.03 cv
1207.67 1278.03 1198.13 1268.5 1198.13 1256.77 cv
1198.13 1253.62 1195.58 1251.07 1192.43 1251.07 cv
1189.28 1251.07 1186.73 1253.62 1186.73 1256.77 cv
1186.73 1268.5 1177.19 1278.03 1165.47 1278.03 cv
1153.74 1278.03 1144.2 1268.5 1144.2 1256.77 cv
1144.2 1253.62 1141.65 1251.07 1138.5 1251.07 cv
1135.35 1251.07 1132.8 1253.62 1132.8 1256.77 cv
1132.8 1268.5 1123.26 1278.03 1111.54 1278.03 cv
1099.82 1278.03 1090.28 1268.5 1090.28 1256.77 cv
1090.28 1253.62 1087.73 1251.07 1084.58 1251.07 cv
1081.43 1251.07 1078.88 1253.62 1078.88 1256.77 cv
1078.88 1268.5 1069.34 1278.03 1057.62 1278.03 cv
1045.9 1278.03 1036.36 1268.5 1036.36 1256.77 cv
1036.36 1253.62 1033.8 1251.07 1030.66 1251.07 cv
1027.51 1251.07 1024.95 1253.62 1024.95 1256.77 cv
1024.95 1268.5 1015.42 1278.03 1003.69 1278.03 cv
991.972 1278.03 982.434 1268.5 982.434 1256.77 cv
982.434 1253.62 979.88 1251.07 976.731 1251.07 cv
973.582 1251.07 971.028 1253.62 971.028 1256.77 cv
971.028 1268.5 961.492 1278.03 949.769 1278.03 cv
938.046 1278.03 928.509 1268.5 928.509 1256.77 cv
928.509 1235.08 li
943.323 1247.82 965.75 1244.76 976.732 1228.73 cv
989.755 1247.74 1017.66 1247.7 1030.66 1228.73 cv
1043.68 1247.74 1071.58 1247.7 1084.58 1228.73 cv
1097.6 1247.74 1125.51 1247.7 1138.51 1228.73 cv
1151.53 1247.74 1179.43 1247.7 1192.43 1228.73 cv
1205.45 1247.74 1233.36 1247.7 1246.35 1228.73 cv
1257.6 1245.14 1280.29 1247.59 1295 1234.96 cv
1295 1256.78 li
1295 1256.78 li
1295 1256.77 li
1295 1256.77 li
cp
1295 1303.71 mo
1295 1305.6 1293.46 1307.13 1291.57 1307.13 cv
931.929 1307.13 li
930.042 1307.13 928.507 1305.6 928.507 1303.71 cv
928.507 1281.54 li
943.319 1294.27 965.747 1291.22 976.729 1275.19 cv
989.753 1294.19 1017.66 1294.16 1030.65 1275.19 cv
1043.68 1294.19 1071.58 1294.16 1084.58 1275.19 cv
1097.6 1294.19 1125.51 1294.16 1138.5 1275.19 cv
1151.53 1294.19 1179.43 1294.16 1192.43 1275.19 cv
1205.45 1294.19 1233.35 1294.16 1246.35 1275.19 cv
1257.6 1291.59 1280.29 1294.04 1295 1281.41 cv
1295 1303.71 li
1295 1303.71 li
cp
952.116 1122.16 mo
1011.66 1061.98 li
1071.19 1122.16 li
1071.19 1184.57 li
1041.24 1184.57 li
1041.24 1164.5 li
1041.24 1155.28 1033.74 1147.78 1024.52 1147.78 cv
998.794 1147.78 li
989.571 1147.78 982.068 1155.28 982.068 1164.5 cv
982.068 1184.57 li
952.116 1184.57 li
952.116 1122.16 li
cp
1029.83 1184.57 mo
993.473 1184.57 li
993.473 1164.5 li
993.473 1161.57 995.86 1159.18 998.793 1159.18 cv
1024.51 1159.18 li
1027.45 1159.18 1029.83 1161.57 1029.83 1164.5 cv
1029.83 1184.57 li
1029.83 1184.57 li
cp
1105.22 1041.5 mo
1106.72 1038.94 1107.88 1036.15 1108.62 1033.19 cv
1161.87 1052.12 1177.36 1119.22 1139.29 1159.86 cv
1162.24 1124.12 1156.89 1066.52 1105.22 1041.5 cv
cp
1291.57 1184.57 mo
1269.88 1184.57 1260.72 1153.54 1252.22 1099.96 cv
1250.07 1086.42 1246.77 1073.66 1242.39 1062.04 cv
1241.28 1059.1 1237.99 1057.61 1235.04 1058.72 cv
1232.1 1059.83 1230.61 1063.11 1231.72 1066.06 cv
1235.82 1076.96 1238.93 1088.97 1240.95 1101.74 cv
1248.83 1151.4 1258.63 1195.98 1291.57 1195.98 cv
1293.46 1195.98 1295 1197.51 1295 1199.4 cv
1295 1210.32 li
1295 1222.04 1285.27 1231.58 1273.31 1231.58 cv
1261.59 1231.58 1252.05 1222.04 1252.05 1210.32 cv
1252.05 1207.17 1249.5 1204.61 1246.35 1204.61 cv
1243.2 1204.61 1240.65 1207.17 1240.65 1210.32 cv
1240.65 1222.04 1231.11 1231.58 1219.39 1231.58 cv
1207.67 1231.58 1198.13 1222.04 1198.13 1210.32 cv
1198.13 1207.17 1195.58 1204.61 1192.43 1204.61 cv
1189.28 1204.61 1186.72 1207.17 1186.72 1210.32 cv
1186.72 1222.04 1177.19 1231.58 1165.46 1231.58 cv
1153.74 1231.58 1144.2 1222.04 1144.2 1210.32 cv
1144.2 1207.17 1141.65 1204.61 1138.5 1204.61 cv
1135.35 1204.61 1132.8 1207.17 1132.8 1210.32 cv
1132.8 1222.04 1123.26 1231.58 1111.54 1231.58 cv
1099.82 1231.58 1090.28 1222.04 1090.28 1210.32 cv
1090.28 1207.17 1087.73 1204.61 1084.58 1204.61 cv
1081.43 1204.61 1078.88 1207.17 1078.88 1210.32 cv
1078.88 1222.04 1069.34 1231.58 1057.62 1231.58 cv
1045.89 1231.58 1036.36 1222.04 1036.36 1210.32 cv
1036.36 1207.17 1033.8 1204.61 1030.65 1204.61 cv
1027.5 1204.61 1024.95 1207.17 1024.95 1210.32 cv
1024.95 1222.04 1015.42 1231.58 1003.69 1231.58 cv
991.971 1231.58 982.433 1222.04 982.433 1210.32 cv
982.433 1207.17 979.88 1204.61 976.73 1204.61 cv
973.581 1204.61 971.028 1207.17 971.028 1210.32 cv
971.028 1222.04 961.491 1231.58 949.768 1231.58 cv
938.046 1231.57 928.509 1222.04 928.509 1210.32 cv
928.509 1199.4 li
928.509 1197.51 930.045 1195.98 931.931 1195.98 cv
937.425 1195.98 1076.01 1195.98 1082.42 1195.98 cv
1155.89 1195.98 1197.86 1111.77 1154 1053.15 cv
1142.84 1038.23 1126.98 1026.97 1109.3 1021.4 cv
1109.07 1019.59 1108.68 1017.8 1108.14 1016.06 cv
1107.2 1013.05 1104.01 1011.38 1101 1012.31 cv
1097.99 1013.25 1096.31 1016.45 1097.25 1019.45 cv
1101.33 1032.55 1091.48 1045.78 1077.89 1045.78 cv
1066.7 1045.78 1057.61 1036.68 1057.61 1025.5 cv
1057.61 1025.29 1057.59 1025.09 1057.57 1024.88 cv
1057.56 1024.75 1056.29 1012.05 1065.46 1001.07 cv
1073.25 991.736 1086.31 986.365 1104.27 985.109 cv
1156.08 981.477 1200.87 1005.39 1224.07 1049.05 cv
1225.54 1051.83 1228.99 1052.89 1231.78 1051.41 cv
1234.56 1049.93 1235.62 1046.48 1234.14 1043.7 cv
1220.46 1017.96 1200.69 998.8 1175.35 986.756 cv
1141.11 970.481 1081.04 964.615 1056.7 993.756 cv
1045.27 1007.44 1045.99 1023.15 1046.2 1025.77 cv
1046.42 1051.98 1076.75 1066.62 1097.39 1050.45 cv
1113.08 1057.36 1137.9 1073.89 1140.47 1109.67 cv
1144.08 1160.01 1099.56 1184.3 1087.54 1184.3 cv
1087.06 1184.3 1086.6 1184.37 1086.16 1184.48 cv
1084.98 1184.53 1083.79 1184.56 1082.6 1184.57 cv
1082.6 1133.52 li
1085.16 1135.56 1088.31 1136.67 1091.63 1136.67 cv
1104.48 1136.67 1111.09 1121.06 1101.99 1111.86 cv
1062.49 1071.93 li
1060.28 1069.7 1056.67 1069.68 1054.43 1071.89 cv
1052.19 1074.11 1052.17 1077.72 1054.38 1079.96 cv
1093.88 1119.88 li
1095.85 1121.88 1094.42 1125.26 1091.63 1125.26 cv
1089.7 1125.26 1094.8 1129.8 1015.71 1049.85 cv
1014.64 1048.77 1013.18 1048.16 1011.66 1048.16 cv
1008.14 1048.16 1012.79 1044.61 933.934 1124.32 cv
932.708 1125.56 930.703 1125.57 929.464 1124.35 cv
928.224 1123.12 928.213 1121.12 929.439 1119.88 cv
1009.41 1039.04 li
1010.63 1037.8 1012.65 1037.77 1013.91 1039.04 cv
1041.66 1067.09 li
1043.88 1069.33 1047.49 1069.36 1049.73 1067.14 cv
1051.97 1064.92 1051.99 1061.31 1049.77 1059.07 cv
1022.01 1031.01 li
1016.33 1025.28 1007.02 1025.25 1001.3 1031.02 cv
921.326 1111.86 li
915.677 1117.57 915.727 1126.81 921.438 1132.46 cv
926.722 1137.69 935.024 1138.02 940.712 1133.52 cv
940.712 1184.57 li
931.929 1184.57 li
923.754 1184.57 917.102 1191.22 917.102 1199.4 cv
917.102 1303.71 li
917.102 1311.89 923.754 1318.54 931.929 1318.54 cv
1291.57 1318.54 li
1299.75 1318.54 1306.4 1311.89 1306.4 1303.71 cv
1306.4 1199.4 li
1306.4 1191.1 1299.6 1184.57 1291.57 1184.57 cv
cp
f
1126.83 959.202 mo
1159.8 959.202 li
1162.95 959.202 1165.5 956.649 1165.5 953.499 cv
1165.5 950.349 1162.95 947.797 1159.8 947.797 cv
1126.83 947.797 li
1123.68 947.797 1121.13 950.349 1121.13 953.499 cv
1121.13 956.649 1123.68 959.202 1126.83 959.202 cv
cp
f
1177.98 959.202 mo
1184.13 959.202 li
1187.28 959.202 1189.83 956.649 1189.83 953.499 cv
1189.83 950.349 1187.28 947.797 1184.13 947.797 cv
1177.98 947.797 li
1174.83 947.797 1172.28 950.349 1172.28 953.499 cv
1172.28 956.649 1174.83 959.202 1177.98 959.202 cv
cp
f
611.783 1256.8 mo
611.783 1268.53 602.057 1278.06 590.1 1278.06 cv
578.377 1278.06 568.842 1268.52 568.842 1256.8 cv
568.842 1253.65 566.29 1251.1 563.139 1251.1 cv
559.989 1251.1 557.437 1253.65 557.437 1256.8 cv
557.437 1268.53 547.901 1278.06 536.177 1278.06 cv
524.456 1278.06 514.921 1268.52 514.921 1256.8 cv
514.921 1253.65 512.368 1251.1 509.218 1251.1 cv
506.068 1251.1 503.516 1253.65 503.516 1256.8 cv
503.516 1268.53 493.979 1278.06 482.256 1278.06 cv
470.533 1278.06 460.997 1268.52 460.997 1256.8 cv
460.997 1253.65 458.444 1251.1 455.294 1251.1 cv
452.144 1251.1 449.591 1253.65 449.591 1256.8 cv
449.591 1268.53 440.055 1278.06 428.333 1278.06 cv
416.61 1278.06 407.074 1268.52 407.074 1256.8 cv
407.074 1253.65 404.521 1251.1 401.371 1251.1 cv
398.221 1251.1 395.669 1253.65 395.669 1256.8 cv
395.669 1268.53 386.134 1278.06 374.411 1278.06 cv
362.688 1278.06 353.153 1268.52 353.153 1256.8 cv
353.153 1253.65 350.601 1251.1 347.45 1251.1 cv
344.3 1251.1 341.748 1253.65 341.748 1256.8 cv
341.748 1268.53 332.211 1278.06 320.49 1278.06 cv
308.766 1278.06 299.23 1268.52 299.23 1256.8 cv
299.23 1253.65 296.678 1251.1 293.528 1251.1 cv
290.377 1251.1 287.825 1253.65 287.825 1256.8 cv
287.825 1268.53 278.289 1278.06 266.565 1278.06 cv
254.842 1278.06 245.306 1268.52 245.306 1256.8 cv
245.306 1241.7 li
245.306 1235.11 li
260.12 1247.85 282.546 1244.79 293.528 1228.76 cv
306.551 1247.77 334.453 1247.73 347.451 1228.76 cv
360.475 1247.77 388.376 1247.73 401.373 1228.76 cv
414.396 1247.77 442.299 1247.73 455.296 1228.76 cv
468.321 1247.77 496.224 1247.73 509.221 1228.76 cv
522.245 1247.77 550.146 1247.73 563.143 1228.76 cv
574.386 1245.17 597.08 1247.62 611.787 1234.99 cv
611.787 1256.8 li
611.783 1256.8 li
611.783 1256.8 li
cp
611.782 1303.74 mo
611.783 1305.63 610.249 1307.16 608.361 1307.16 cv
248.727 1307.16 li
246.84 1307.16 245.305 1305.63 245.305 1303.74 cv
245.305 1281.57 li
260.119 1294.3 282.545 1291.24 293.527 1275.22 cv
306.55 1294.22 334.452 1294.19 347.45 1275.22 cv
360.474 1294.22 388.375 1294.18 401.372 1275.22 cv
414.396 1294.22 442.298 1294.19 455.295 1275.22 cv
468.32 1294.22 496.222 1294.19 509.22 1275.22 cv
522.243 1294.22 550.145 1294.18 563.142 1275.22 cv
574.385 1291.63 597.078 1294.07 611.786 1281.44 cv
611.786 1303.74 li
611.782 1303.74 li
cp
248.174 1175.15 mo
307.093 1177.11 398.023 1188.72 445.859 1222.36 cv
434.036 1239.55 407.075 1231.1 407.075 1210.34 cv
407.075 1207.19 404.521 1204.64 401.372 1204.64 cv
398.222 1204.64 395.67 1207.19 395.67 1210.34 cv
395.67 1222.07 386.134 1231.6 374.412 1231.6 cv
362.689 1231.6 353.154 1222.07 353.154 1210.34 cv
353.154 1207.19 350.601 1204.64 347.451 1204.64 cv
344.301 1204.64 341.749 1207.19 341.749 1210.34 cv
341.749 1222.07 332.212 1231.6 320.49 1231.6 cv
308.767 1231.6 299.231 1222.07 299.231 1210.34 cv
299.231 1207.19 296.679 1204.64 293.528 1204.64 cv
290.378 1204.64 287.826 1207.19 287.826 1210.34 cv
287.826 1222.07 278.29 1231.6 266.566 1231.6 cv
254.843 1231.6 245.307 1222.07 245.307 1210.34 cv
245.307 1199.43 li
245.307 1179.21 li
245.306 1179.21 li
245.305 1177.38 246.483 1175.75 248.174 1175.15 cv
cp
300.54 1061.7 mo
292.954 1063.52 288.26 1071.18 290.079 1078.77 cv
297.065 1107.9 li
292.024 1107.31 287.307 1104.71 284.158 1100.55 cv
282.78 1098.74 280.476 1097.94 278.318 1098.45 cv
263.96 1101.79 249.49 1092.85 246.053 1078.52 cv
243.296 1067.02 248.256 1055.22 258.396 1049.16 cv
260.763 1047.74 261.778 1044.84 260.806 1042.26 cv
258.257 1035.48 258.96 1028.13 262.699 1022.03 cv
270.215 1009.78 286.867 1007.42 297.533 1016.79 cv
299.271 1018.31 301.755 1018.64 303.827 1017.61 cv
314.81 1012.17 327.866 1019.19 329.395 1031.35 cv
329.705 1033.82 331.591 1035.81 334.048 1036.25 cv
350.718 1039.23 356.812 1060.03 344.388 1071.55 cv
342.75 1073.06 342.149 1075.4 342.849 1077.52 cv
345.401 1085.29 340.714 1093.49 332.886 1095.37 cv
327.587 1096.63 324.074 1094.45 322.932 1094.15 cv
317.604 1072.17 li
315.783 1064.58 308.127 1059.89 300.54 1061.7 cv
cp
421.85 1041.81 mo
423.437 1039.17 424.648 1036.29 425.415 1033.23 cv
481.944 1053.32 495.315 1126.71 449.549 1167.52 cv
481.767 1129.57 474.746 1067.79 421.85 1041.81 cv
cp
608.947 1184.63 mo
608.754 1184.61 608.56 1184.6 608.363 1184.6 cv
586.673 1184.6 577.507 1153.58 569.008 1099.99 cv
565.703 1079.15 559.693 1060.36 551.147 1044.15 cv
549.678 1041.36 546.23 1040.3 543.443 1041.76 cv
540.657 1043.23 539.589 1046.68 541.058 1049.47 cv
549.02 1064.57 554.633 1082.17 557.743 1101.78 cv
565.618 1151.43 575.417 1196.01 608.362 1196.01 cv
610.249 1196.01 611.784 1197.54 611.784 1199.43 cv
611.784 1210.35 li
611.784 1222.07 602.058 1231.6 590.101 1231.6 cv
578.378 1231.6 568.843 1222.07 568.843 1210.35 cv
568.843 1207.2 566.291 1204.64 563.14 1204.64 cv
559.99 1204.64 557.438 1207.2 557.438 1210.35 cv
557.438 1222.07 547.901 1231.6 536.178 1231.6 cv
524.457 1231.6 514.921 1222.07 514.921 1210.35 cv
514.921 1207.2 512.37 1204.64 509.219 1204.64 cv
506.069 1204.64 503.517 1207.2 503.517 1210.35 cv
503.517 1222.07 493.98 1231.6 482.257 1231.6 cv
470.534 1231.6 460.997 1222.07 460.997 1210.35 cv
460.997 1203.38 449.884 1201.88 449.572 1211.09 cv
441.423 1205.69 431.775 1200.61 420.819 1195.93 cv
480.198 1179.48 510.042 1105.64 470.793 1053.18 cv
459.633 1038.27 443.769 1027.01 426.093 1021.43 cv
425.858 1019.62 425.474 1017.84 424.932 1016.1 cv
423.995 1013.09 420.798 1011.41 417.791 1012.35 cv
414.784 1013.28 413.105 1016.48 414.042 1019.49 cv
414.649 1021.44 414.958 1023.47 414.958 1025.54 cv
414.958 1036.72 405.86 1045.82 394.678 1045.82 cv
383.495 1045.82 374.397 1036.72 374.397 1025.54 cv
374.397 1025.35 374.383 1025.13 374.367 1024.95 cv
374.353 1024.82 373.188 1011.83 382.363 1000.97 cv
390.172 991.72 403.192 986.396 421.058 985.145 cv
442.61 983.639 496.534 985.406 531.681 1034.28 cv
533.519 1036.84 537.083 1037.42 539.641 1035.58 cv
542.197 1033.74 542.78 1030.18 540.941 1027.62 cv
526.542 1007.6 507.648 992.777 484.786 983.57 cv
451.521 970.174 396.419 966.347 373.494 993.792 cv
362.063 1007.48 362.78 1023.18 362.99 1025.8 cv
363.205 1051.86 393.238 1066.54 413.913 1050.69 cv
429.876 1057.83 454.669 1074.64 457.254 1110.69 cv
460.876 1161.22 411.061 1186 397.514 1187.22 cv
379.598 1181.36 360.848 1176.9 342.152 1173.47 cv
332.588 1134 li
331.846 1130.94 328.77 1129.06 325.702 1129.8 cv
322.641 1130.54 320.761 1133.63 321.503 1136.69 cv
329.906 1171.37 li
327.782 1171.02 325.674 1170.7 323.586 1170.38 cv
319.272 1151.6 li
318.865 1149.83 317.633 1148.35 315.958 1147.63 cv
296.105 1139.14 li
292.771 1137.71 294.925 1132.66 298.266 1134.09 cv
306.557 1137.64 li
310.852 1139.48 315.438 1135.62 314.346 1131.06 cv
301.168 1076.11 li
300.815 1074.63 301.726 1073.15 303.197 1072.8 cv
304.671 1072.44 306.158 1073.35 306.514 1074.84 cv
306.55 1074.99 313.657 1104.63 313.692 1104.78 cv
313.692 1104.78 313.594 1104.06 317.233 1119.08 cv
317.976 1122.14 321.051 1124.02 324.12 1123.28 cv
327.18 1122.54 329.061 1119.45 328.318 1116.39 cv
326.017 1106.89 li
343.105 1109.39 357.57 1094.3 354.558 1077.41 cv
369.656 1060.01 361.897 1032.81 339.938 1025.97 cv
335.58 1009.71 318.223 1000.38 302.185 1005.95 cv
276.152 987.59 241.664 1011.46 248.801 1041.91 cv
236.911 1051.04 231.392 1066.29 234.962 1081.18 cv
239.578 1100.44 258.175 1112.85 277.432 1110.2 cv
283.132 1116.08 291.193 1119.57 299.826 1119.42 cv
300.659 1122.89 li
289.467 1120.05 279.76 1131.17 284.046 1141.88 cv
285.453 1145.38 288.141 1148.14 291.617 1149.62 cv
308.805 1156.98 li
311.505 1168.74 li
291.027 1166.12 269.575 1164.42 247.694 1163.72 cv
242.782 1163.58 233.897 1169.33 233.897 1179.21 cv
233.897 1187.41 233.897 1300.09 233.897 1303.74 cv
233.897 1311.91 240.549 1318.57 248.725 1318.57 cv
608.36 1318.57 li
616.536 1318.57 623.188 1311.91 623.188 1303.74 cv
623.188 1199.43 li
623.189 1191.45 616.85 1184.94 608.947 1184.63 cv
cp
f
272.829 974.135 mo
269.679 974.135 267.127 976.688 267.127 979.838 cv
267.127 982.987 269.679 985.54 272.829 985.54 cv
331.632 985.54 li
334.782 985.54 337.334 982.987 337.334 979.838 cv
337.334 976.688 334.782 974.135 331.632 974.135 cv
331.632 974.135 272.829 974.135 272.829 974.135 cv
cp
f
253.06 963.112 mo
518.178 963.112 li
521.328 963.112 523.88 960.559 523.88 957.409 cv
523.88 954.259 521.328 951.707 518.178 951.707 cv
253.06 951.707 li
249.91 951.707 247.357 954.259 247.357 957.409 cv
247.357 960.559 249.91 963.112 253.06 963.112 cv
cp
f
239.604 985.541 mo
253.06 985.541 li
256.21 985.541 258.763 982.988 258.763 979.839 cv
258.763 976.688 256.21 974.136 253.06 974.136 cv
239.604 974.136 li
236.453 974.136 233.901 976.688 233.901 979.839 cv
233.9 982.988 236.454 985.541 239.604 985.541 cv
cp
f
313.112 940.681 mo
464.681 940.681 li
467.831 940.681 470.383 938.129 470.383 934.979 cv
470.383 931.828 467.831 929.276 464.681 929.276 cv
313.112 929.276 li
309.962 929.276 307.409 931.828 307.409 934.979 cv
307.409 938.129 309.962 940.681 313.112 940.681 cv
cp
f
3051.96 448.597 mo
3048.94 447.703 3045.77 449.421 3044.87 452.439 cv
3043.98 455.458 3045.7 458.633 3048.71 459.53 cv
3048.86 459.575 3063.86 464.762 3066.46 491.618 cv
3069.1 518.928 3102.37 540.992 3112.63 562.005 cv
3114.02 564.84 3117.44 566.008 3120.26 564.626 cv
3123.09 563.245 3124.27 559.829 3122.88 557 cv
3111.9 534.52 3079.96 512.75 3077.81 490.517 cv
3074.44 455.668 3052.88 448.87 3051.96 448.597 cv
cp
.254902 .254902 .254902 rgb
f
3292.92 546.987 mo
3250.62 546.953 li
3247.46 546.953 3244.91 549.51 3244.91 552.651 cv
3244.91 555.8 3247.46 558.355 3250.61 558.358 cv
3292.91 558.391 li
3296.06 558.391 3298.61 555.841 3298.61 552.694 cv
3298.62 549.545 3296.07 546.988 3292.92 546.987 cv
cp
f
3244.92 538.278 mo
3244.92 541.426 3247.47 543.982 3250.62 543.985 cv
3292.92 544.02 li
3296.07 544.02 3298.62 541.471 3298.62 538.322 cv
3298.63 535.173 3296.07 532.619 3292.92 532.615 cv
3250.63 532.58 li
3247.47 532.579 3244.92 535.137 3244.92 538.278 cv
cp
f
3323.77 623.902 mo
3298.55 623.882 li
3298.57 605.15 li
3298.57 602.001 3296.02 599.445 3292.87 599.443 cv
3289.72 599.441 3287.16 601.99 3287.16 605.14 cv
3287.15 623.871 li
3285.57 623.87 3257.67 623.847 3256.25 623.846 cv
3256.29 576.927 3255.82 579.258 3257.48 577.603 cv
3258.23 576.854 3259.24 576.417 3260.35 576.417 cv
3285.11 576.437 3284.41 576.04 3286 577.626 cv
3287.53 579.156 3287.18 580.243 3287.18 587.404 cv
3287.17 590.553 3289.73 593.108 3292.87 593.111 cv
3296.04 593.111 3298.58 590.548 3298.58 587.414 cv
3298.59 580.506 li
3298.6 571.959 3291.69 565.037 3283.14 565.03 cv
3283.13 565.03 3260.35 565.013 3260.35 565.013 cv
3251.81 565.013 3244.89 571.914 3244.88 580.463 cv
3244.85 617.882 li
3237.37 609.632 3228.68 602.352 3219.66 596.571 cv
3219.7 543.216 li
3271.81 490.623 li
3323.84 543.301 li
3323.77 623.902 li
cp
3117.73 623.906 mo
3114.95 615.615 3110.95 606.798 3105.92 598.574 cv
3149.11 578.96 3201.01 587.933 3234.9 623.906 cv
3229.43 623.906 3123.37 623.906 3117.73 623.906 cv
cp
2987.43 623.906 mo
2982.37 623.906 2978.25 619.789 2978.25 614.729 cv
2978.25 552.457 li
3033.63 541.767 3086.86 573.671 3105.62 623.907 cv
2987.43 623.906 li
2987.43 623.906 li
cp
3350.44 623.906 mo
3335.18 623.906 li
3335.23 554.376 li
3339.16 556.923 3343.35 556.549 3342.58 556.549 cv
3354.54 556.549 3360.68 542.034 3352.23 533.473 cv
3315.93 496.716 li
3313.71 494.476 3310.1 494.455 3307.86 496.668 cv
3305.62 498.881 3305.6 502.491 3307.81 504.732 cv
3344.11 541.488 li
3344.95 542.33 3344.94 543.692 3344.1 544.521 cv
3343.68 544.935 3343.14 545.142 3342.58 545.142 cv
3342.25 545.142 3341.61 545.059 3341.06 544.504 cv
3275.88 478.506 li
3273.86 476.461 3271.06 476.81 3271.82 476.81 cv
3268.46 476.81 3273.38 472.837 3202.48 544.391 cv
3200.5 546.392 3197.42 543.393 3199.43 541.369 cv
3270.3 469.844 li
3270.71 469.439 3271.26 469.207 3271.83 469.207 cv
3273.08 469.208 3271.45 467.907 3294.78 491.537 cv
3296.99 493.779 3300.6 493.799 3302.84 491.586 cv
3305.08 489.373 3305.11 485.762 3302.89 483.522 cv
3281.47 461.828 li
3276.95 457.26 3271.07 457.801 3271.83 457.801 cv
3268.24 457.801 3264.73 459.264 3262.2 461.815 cv
3191.33 533.341 li
3182.91 541.83 3188.86 556.433 3201.02 556.433 cv
3203.64 556.421 3206.14 555.66 3208.29 554.272 cv
3208.26 590.091 li
3192.66 582.286 3175.96 577.949 3158.54 577.16 cv
3157.59 528.667 3105.27 509.038 3103.33 478.781 cv
3102.48 465.548 3098.94 454.759 3092.53 445.797 cv
3090.69 443.237 3087.13 442.646 3084.57 444.481 cv
3082.01 446.314 3081.42 449.878 3083.25 452.438 cv
3088.46 459.714 3091.22 468.317 3091.94 479.511 cv
3094.29 515.972 3146.01 533.627 3147.13 577.141 cv
3130.73 577.883 3114.3 581.95 3099.44 588.998 cv
3070.67 550.454 3023.23 532.818 2978.25 540.848 cv
2978.25 342.862 li
2980.75 342.754 2984.07 342.863 2987.65 343.654 cv
2997.49 345.827 3004.53 352.071 3008.59 362.214 cv
3025.25 403.856 3032.07 413.898 3059.71 432.407 cv
3063.73 435.095 3067.53 437.635 3071.07 440.348 cv
3073.57 442.264 3077.15 441.789 3079.07 439.289 cv
3080.98 436.788 3080.51 433.209 3078.01 431.293 cv
3071.35 426.192 3063.99 421.745 3056.9 416.644 cv
3037.78 402.874 3030.81 387.056 3019.18 357.977 cv
3012.28 340.716 2999.56 334.605 2990.11 332.516 cv
2980.1 330.306 2971.67 332.13 2971.31 332.208 cv
2968.7 332.787 2966.85 335.101 2966.85 337.774 cv
2966.85 341.044 2966.85 608.181 2966.85 614.728 cv
2966.85 626.078 2976.08 635.31 2987.43 635.31 cv
2996.04 635.31 3345.15 635.31 3350.43 635.31 cv
3353.58 635.31 3356.14 632.758 3356.14 629.608 cv
3356.14 626.459 3353.58 623.906 3350.44 623.906 cv
cp
f
3063.8 368.565 mo
3070.18 364.66 3077.47 364.808 3078.55 366.027 cv
3078.55 366.027 3078.56 366.057 3078.57 366.129 cv
3079.89 377.371 3089.97 380.082 3094.19 382.223 cv
3092.21 386.31 3091.87 389.637 3091.63 392.083 cv
3091.3 395.359 3091.2 396.347 3086 399.271 cv
3078.96 403.23 3068.96 397.44 3065.58 395.217 cv
3058.92 378.555 li
3057.43 374.823 3059.07 371.462 3063.8 368.565 cv
cp
3057.42 403.43 mo
3066.41 410.381 3080.66 415.36 3091.59 409.213 cv
3106.2 400.993 3101.01 394.082 3104.54 387.023 cv
3106.12 383.865 3106.43 380.91 3105.47 378.242 cv
3103.93 374.002 3100.02 372.282 3096.57 370.765 cv
3092.09 368.8 3090.24 367.709 3089.9 364.797 cv
3089.34 360.081 3086.22 356.451 3081.33 354.838 cv
3072.6 351.956 3059.28 355.849 3052.24 363.335 cv
3047.03 368.876 3045.6 375.967 3048.33 382.786 cv
3056.26 402.647 3055.78 402.16 3057.42 403.43 cv
cp
f
3149.67 402.349 mo
3160.7 399.088 li
3161.41 398.879 3162.48 398.561 3163.92 400.434 cv
3166.12 403.298 3166.52 407.608 3166.1 409.428 cv
3159.42 410.105 3156.45 415.223 3154.81 418.184 cv
3148.32 415.102 3148.5 418.271 3146.32 413.383 cv
3144.76 409.881 3147.72 404.887 3149.67 402.349 cv
cp
3150.68 428.905 mo
3152.92 430.299 3155.4 430.961 3157.96 430.291 cv
3164.26 428.654 3164.84 420.822 3167.51 420.758 cv
3179.64 420.46 3180.47 401.924 3172.18 392.533 cv
3168.29 388.132 3162.93 386.534 3157.47 388.148 cv
3144.79 391.896 li
3143.82 392.185 3142.94 392.73 3142.24 393.472 cv
3141.77 393.984 3130.6 406.14 3135.91 418.029 cv
3140.85 429.093 3146.9 426.554 3150.68 428.905 cv
cp
f
3166.08 486.199 mo
3156 486.543 3152.52 494.935 3150.27 498.743 cv
3146.87 496.787 3144 496.228 3141.87 495.812 cv
3139.09 495.268 3138.34 495.121 3136.25 490.442 cv
3133.43 484.124 3139.13 475.959 3141.43 473.048 cv
3156.86 468.487 li
3165.24 466.007 3168.59 482.813 3166.08 486.199 cv
cp
3153.62 457.549 mo
3134.96 463.068 3135.42 462.662 3134 464.174 cv
3133.4 464.824 3119.21 480.264 3125.83 495.092 cv
3132.09 509.113 3139.19 505.271 3144.97 508.866 cv
3147.54 510.46 3150.35 511.249 3153.23 510.499 cv
3161.1 508.456 3161.04 497.731 3166.54 497.596 cv
3187.5 497.08 3178.58 450.174 3153.62 457.549 cv
cp
f
3201.64 446.464 mo
3202.69 441.418 3196.46 439.94 3196.28 436.35 cv
3196.11 432.761 3191.72 430.232 3187.33 432.564 cv
3182.94 434.897 3182.86 447.53 3192.13 449.088 cv
3192.13 449.088 3200.6 451.511 3201.64 446.464 cv
cp
f
3034.89 344.418 mo
3034.89 344.418 3043.36 346.842 3044.4 341.796 cv
3045.45 336.75 3039.22 335.271 3039.05 331.682 cv
3038.87 328.092 3034.48 325.564 3030.09 327.896 cv
3025.7 330.228 3025.62 342.861 3034.89 344.418 cv
cp
f
3166.47 531.371 mo
3166.29 527.781 3161.9 525.253 3157.51 527.584 cv
3153.12 529.917 3153.04 542.55 3162.31 544.108 cv
3162.31 544.108 3170.78 546.532 3171.83 541.486 cv
3172.87 536.437 3166.64 534.959 3166.47 531.371 cv
cp
f
3199.05 481.675 mo
3201.36 482.731 3204.38 480.786 3204.33 477.269 cv
3204.28 473.749 3196.36 469.606 3192.38 474.933 cv
3192.38 474.933 3188.11 479.476 3190.95 481.769 cv
3193.78 484.063 3196.73 480.622 3199.05 481.675 cv
cp
f
3072.7 316.996 mo
3101.33 316.996 li
3104.3 316.996 3106.78 314.708 3107.01 311.743 cv
3108.05 298.629 3124.07 292.374 3133.68 301.673 cv
3137.58 305.444 3144.07 302.117 3143.29 296.758 cv
3141.8 286.374 3149.89 277.187 3160.24 277.187 cv
3170.65 277.187 3178.8 286.49 3177.16 296.993 cv
3176.41 301.758 3181.58 305.244 3185.71 302.776 cv
3196.35 296.44 3210.21 301.457 3214.32 313.178 cv
3215.12 315.465 3217.28 316.995 3219.7 316.995 cv
3291 316.995 li
3294.15 316.995 3296.71 314.443 3296.71 311.293 cv
3296.71 308.142 3294.15 305.59 3291 305.59 cv
3223.45 305.59 li
3216.98 292.879 3202.5 286.045 3188.37 289.503 cv
3186.07 276.054 3174.33 265.782 3160.24 265.782 cv
3146.8 265.782 3135.51 275.115 3132.49 287.638 cv
3117.5 281.86 3100.92 290.411 3096.59 305.59 cv
3072.7 305.59 li
3069.55 305.59 3067 308.142 3067 311.293 cv
3067 314.444 3069.55 316.996 3072.7 316.996 cv
cp
f
3287.07 348.39 mo
3262.33 348.39 li
3259.18 348.39 3256.63 350.943 3256.63 354.093 cv
3256.63 357.243 3259.18 359.796 3262.33 359.796 cv
3291.8 359.796 li
3294.78 359.796 3297.25 357.508 3297.49 354.542 cv
3298.52 341.514 3314.44 335.3 3323.99 344.538 cv
3325.74 346.236 3328.38 346.626 3330.55 345.517 cv
3332.72 344.405 3333.94 342.038 3333.6 339.624 cv
3332.1 329.327 3340.14 320.178 3350.44 320.178 cv
3353.59 320.178 3356.14 317.626 3356.14 314.475 cv
3356.14 311.325 3353.59 308.773 3350.44 308.773 cv
3337.06 308.773 3325.82 318.055 3322.8 330.516 cv
3307.69 324.71 3291.34 333.486 3287.07 348.39 cv
cp
f
3213.42 261.864 mo
3223.04 252.558 3239.05 258.827 3240.09 271.934 cv
3240.33 274.901 3242.8 277.188 3245.78 277.188 cv
3286.7 277.188 li
3289.85 277.188 3292.4 274.635 3292.4 271.485 cv
3292.4 268.335 3289.85 265.783 3286.7 265.783 cv
3250.51 265.783 li
3244.91 246.172 3220.29 239.355 3205.49 253.666 cv
3203.22 255.855 3203.16 259.466 3205.35 261.73 cv
3207.54 263.993 3211.15 264.051 3213.42 261.864 cv
cp
f
3306.38 277.188 mo
3317.44 277.188 li
3320.59 277.188 3323.14 274.635 3323.14 271.485 cv
3323.14 268.335 3320.59 265.783 3317.44 265.783 cv
3306.38 265.783 li
3303.23 265.783 3300.68 268.335 3300.68 271.485 cv
3300.68 274.634 3303.23 277.188 3306.38 277.188 cv
cp
f
2356.3 553.948 mo
2379.36 553.948 2391.08 581.634 2375.36 598.245 cv
2357.61 595.452 2341.93 585.467 2331.75 570.908 cv
2335.57 560.808 2345.33 553.948 2356.3 553.948 cv
cp
2431.29 434.271 mo
2416.84 434.271 2403.14 441.154 2395.43 450.272 cv
2390.57 456.073 2383.26 456.143 2383 456.143 cv
2382.75 456.137 2382.51 456.152 2382.26 456.179 cv
2322.51 458.787 2288.89 525.283 2320.67 574.879 cv
2353.68 626.384 2430.46 620.67 2455.84 565.519 cv
2457.16 562.657 2455.91 559.27 2453.05 557.953 cv
2450.18 556.638 2446.8 557.888 2445.48 560.751 cv
2435.22 583.04 2413.26 597.768 2388.93 598.979 cv
2403.4 573.852 2385.12 542.541 2356.3 542.541 cv
2343.6 542.541 2332.02 548.952 2325.15 559.045 cv
2307.26 517.176 2336.48 469.332 2383.14 467.559 cv
2390.88 467.284 2398.86 463.943 2404.15 457.622 cv
2426.53 433.003 2468.1 448.894 2468.1 482.484 cv
2468.1 492.307 2464.22 501.101 2458.24 507.521 cv
2457.25 508.576 2451.71 516.504 2451.27 527.769 cv
2451.24 528.616 2452.05 535.142 2450.61 543.978 cv
2450.1 547.088 2452.2 550.019 2455.31 550.527 cv
2458.43 551.038 2461.35 548.925 2461.86 545.818 cv
2464.53 529.5 2460.14 525.28 2466.91 514.946 cv
2495.25 483.909 2472.8 434.271 2431.29 434.271 cv
cp
f
2388.29 503.933 mo
2388.29 508.778 2384.35 512.719 2379.5 512.719 cv
2374.66 512.719 2370.71 508.778 2370.71 503.933 cv
2370.71 499.087 2374.66 495.144 2379.5 495.144 cv
2384.35 495.145 2388.29 499.088 2388.29 503.933 cv
cp
2359.31 503.933 mo
2359.31 515.069 2368.37 524.128 2379.5 524.128 cv
2390.64 524.128 2399.7 515.069 2399.7 503.933 cv
2399.7 492.796 2390.64 483.736 2379.5 483.736 cv
2368.37 483.736 2359.31 492.797 2359.31 503.933 cv
cp
f
2418.86 524.393 mo
2423.3 524.393 2426.9 527.995 2426.9 532.437 cv
2426.9 536.88 2423.3 540.482 2418.86 540.482 cv
2414.42 540.482 2410.81 536.88 2410.81 532.437 cv
2410.81 527.995 2414.42 524.393 2418.86 524.393 cv
cp
f
2518.3 422.731 mo
2515.27 421.881 2512.12 423.651 2511.27 426.683 cv
2474.68 557.256 li
2468.37 579.755 2453.83 599.619 2430.73 612.428 cv
2398.91 630.073 2359.66 627.205 2330.74 605.12 cv
2328.47 603.386 2330.44 604.931 2328.62 603.448 cv
2278.49 562.442 2285.81 483.474 2341.93 452.342 cv
2542.95 340.839 2531.18 347.172 2533.64 346.409 cv
2533.42 347.882 2534.42 344.111 2516.22 409.046 cv
2515.37 412.079 2517.14 415.226 2520.17 416.077 cv
2523.2 416.926 2526.35 415.158 2527.2 412.125 cv
2544.08 351.893 li
2548.25 337.987 2539.56 329.926 2524.97 337.767 cv
2336.4 442.365 li
2272.52 477.803 2265.54 566.596 2321.41 612.285 cv
2321.82 612.621 2322.11 612.88 2322.58 613.254 cv
2354.91 638.737 2399.77 642.642 2436.26 622.404 cv
2462.2 608.02 2478.59 585.565 2485.66 560.334 cv
2522.26 429.762 li
2523.11 426.73 2521.34 423.581 2518.3 422.731 cv
cp
f
2625.87 566.018 mo
2616.16 600.67 2573.82 617.342 2542.02 593.523 cv
2512.99 571.912 2514.7 524.097 2548.85 505.152 cv
2660.25 443.366 li
2625.87 566.018 li
cp
2657.43 431.882 mo
2657.32 431.944 2543.43 495.112 2543.32 495.176 cv
2502.26 517.949 2499.23 575.718 2535.43 602.843 cv
2571.78 630.594 2624.67 612.578 2636.85 569.096 cv
2636.87 569.024 2672.2 442.972 2672.22 442.9 cv
2675.23 431.971 2667.4 426.53 2657.43 431.882 cv
cp
f
2382.18 325.557 mo
2389.14 325.557 2394.8 331.218 2394.8 338.175 cv
2394.8 345.133 2389.14 350.793 2382.18 350.793 cv
2375.23 350.793 2369.57 345.133 2369.57 338.175 cv
2369.57 331.218 2375.23 325.557 2382.18 325.557 cv
cp
2382.18 362.2 mo
2395.43 362.2 2406.21 351.422 2406.21 338.174 cv
2406.21 324.926 2395.43 314.15 2382.18 314.15 cv
2368.94 314.15 2358.16 324.927 2358.16 338.174 cv
2358.16 351.422 2368.94 362.2 2382.18 362.2 cv
cp
f
2362.59 305.295 mo
2443.32 260.518 li
2418.4 349.407 li
2411.11 375.399 2379.09 386.537 2357 368.826 cv
2335.94 351.599 2338.99 318.382 2362.59 305.295 cv
cp
2381.26 388.832 mo
2402.94 388.832 2423.14 374.779 2429.39 352.486 cv
2429.42 352.378 2455.94 257.729 2455.97 257.621 cv
2458.49 248.437 2451.61 243.022 2442.74 247.791 cv
2357.05 295.319 li
2345.15 301.921 2336.69 313.581 2334.15 322.556 cv
2333.31 325.555 li
2324.43 357.257 2348.2 388.832 2381.26 388.832 cv
cp
f
2581.92 548.242 mo
2586.37 548.242 2589.97 551.843 2589.97 556.286 cv
2589.97 560.728 2586.37 564.33 2581.92 564.33 cv
2577.48 564.33 2573.88 560.728 2573.88 556.286 cv
2573.88 551.843 2577.48 548.242 2581.92 548.242 cv
cp
f
2554.3 533.49 mo
2558.97 539.495 2554.28 548.261 2546.62 547.642 cv
2547.68 542.312 2550.3 537.393 2554.3 533.49 cv
cp
2563.97 527.384 mo
2581.69 520.9 2600.45 534.14 2600.45 552.914 cv
2600.45 567.897 2588.26 580.088 2573.28 580.088 cv
2560.41 580.088 2549.61 571.092 2546.81 559.061 cv
2563.35 559.516 2573.34 540.915 2563.97 527.384 cv
cp
2573.28 591.495 mo
2594.55 591.495 2611.86 574.188 2611.86 552.914 cv
2611.86 521.63 2576.36 503.357 2550.92 521.478 cv
2520.26 543.316 2536.17 591.495 2573.28 591.495 cv
cp
f
1719.33 372.225 mo
1715.29 340.179 li
1732.14 338.055 li
1736.18 370.101 li
1719.33 372.225 li
cp
1691.17 375.774 mo
1687.13 343.728 li
1703.98 341.604 li
1708.02 373.65 li
1691.17 375.774 li
cp
1743.11 333.878 mo
1742.82 331.593 1741.66 329.556 1739.85 328.143 cv
1737.97 326.68 1735.69 326.117 1733.47 326.391 cv
1731.61 326.627 1688.33 332.082 1682.94 332.762 cv
1678.22 333.357 1674.87 337.666 1675.47 342.406 cv
1680.2 379.954 li
1680.75 384.313 1684.47 387.51 1688.75 387.51 cv
1689.57 387.51 1686.17 387.904 1740.36 381.072 cv
1745.13 380.472 1748.43 376.122 1747.84 371.426 cv
1743.11 333.878 li
cp
f
1753.23 476.75 mo
1749.21 444.853 li
1766.06 442.73 li
1770.08 474.626 li
1753.23 476.75 li
cp
1725.07 480.3 mo
1721.05 448.403 li
1737.89 446.279 li
1741.91 478.177 li
1725.07 480.3 li
cp
1776.87 437.673 mo
1775.89 433.42 1771.81 430.505 1767.39 431.066 cv
1761.95 431.752 1723.06 436.653 1716.86 437.434 cv
1712.14 438.03 1708.79 442.349 1709.38 447.07 cv
1714.1 484.489 li
1714.65 488.842 1718.37 492.033 1722.65 492.033 cv
1723.54 492.033 1749.82 488.677 1774.26 485.594 cv
1778.99 485 1782.34 480.692 1781.74 475.962 cv
1776.72 436.12 1777.02 438.342 1776.87 437.673 cv
cp
f
1978.24 510.884 mo
1924.41 506.114 li
1921.26 505.839 1918.51 508.155 1918.23 511.291 cv
1917.95 514.428 1920.27 517.197 1923.41 517.475 cv
1978.24 522.334 li
1978.24 620.492 li
1978.24 622.379 1976.71 623.913 1974.82 623.913 cv
1615.18 623.913 li
1613.29 623.913 1611.76 622.379 1611.76 620.491 cv
1611.76 540.59 li
1662.42 534.274 li
1668.19 543.894 li
1660.35 558.82 li
1659.29 560.841 1659.54 563.299 1660.98 565.069 cv
1687.99 598.293 li
1689.65 600.38 1694.04 605.92 1699.59 603.742 cv
1702.06 602.774 1704.88 600.155 1704.33 593.15 cv
1702.73 574.406 li
1729.69 551.491 li
1731.36 550.069 1732.07 547.811 1731.51 545.688 cv
1726.58 527.025 li
1850.79 511.04 li
1903.72 515.73 li
1906.87 515.995 1909.63 513.69 1909.91 510.553 cv
1910.18 507.416 1907.87 504.647 1904.73 504.369 cv
1851.18 499.625 li
1850.26 499.544 1858.22 498.585 1723.64 515.904 cv
1721.98 509.632 li
1850.45 493.479 li
1855.41 493.942 1972.57 504.863 1978.24 505.392 cv
1978.24 510.884 li
1978.24 510.884 li
cp
1611.76 523.491 mo
1652.85 518.323 li
1656.01 523.579 li
1611.76 529.095 li
1611.76 523.491 li
1611.76 523.491 li
cp
1714.09 499.128 mo
1710.68 499.557 1708.41 502.904 1709.29 506.245 cv
1712.4 517.997 li
1693.98 520.318 1691.54 521.536 1690.51 517.369 cv
1679.87 432.905 li
1803.77 417.287 li
1812.53 486.752 li
1714.09 499.128 li
cp
1664.27 423.373 mo
1662.32 423.623 1660.55 422.236 1660.3 420.29 cv
1660.05 418.344 1661.43 416.564 1663.38 416.317 cv
1815.62 397.128 li
1816.54 397.011 1817.48 397.249 1818.25 397.845 cv
1820.74 399.776 1819.65 403.788 1816.51 404.184 cv
1816.45 404.193 1808 405.257 1808 405.257 cv
1806.66 405.425 1666.97 423.035 1664.27 423.373 cv
cp
1648.22 353.015 mo
1702.26 282.364 li
1772.13 337.397 li
1778.8 390.274 li
1772.96 391.009 1660.73 405.156 1654.89 405.892 cv
1648.22 353.015 li
cp
1894.76 459.882 mo
1888.87 485.605 li
1887.36 485.465 1888.1 485.533 1885.32 485.274 cv
1891.32 459.093 li
1894.76 459.882 li
cp
1859.27 440.044 mo
1876.4 423.044 li
1914.94 431.878 1912.43 431.365 1913.35 431.365 cv
1920.06 431.365 1921.22 421.614 1914.62 420.101 cv
1906.01 418.129 1873.18 410.602 1868.03 409.422 cv
1890.21 387.41 li
1916.93 393.536 1915.1 393.177 1916.01 393.177 cv
1922.73 393.177 1923.88 383.427 1917.28 381.913 cv
1887.42 375.067 li
1887.41 375.066 1887.41 375.065 1887.4 375.065 cv
1884 374.285 li
1915 343.528 li
1916.61 341.924 1918.46 341.211 1920.07 341.582 cv
1921.67 341.95 1923.03 343.392 1923.79 345.54 cv
1938.29 386.726 li
1933.01 385.515 1929.83 384.097 1927.07 387.183 cv
1925.69 388.733 1925.25 390.914 1925.95 392.875 cv
1937.37 425.312 li
1929.51 423.511 li
1925.14 422.508 1921.36 426.733 1922.85 430.965 cv
1931.91 456.692 li
1923.12 454.678 1861.25 440.498 1859.27 440.044 cv
cp
1984.48 494.518 mo
1900.32 486.674 li
1905.88 462.43 li
1930.91 468.165 li
1940.07 470.261 1946.14 460.292 1943.2 454.4 cv
1937.04 436.921 li
1945.11 438.233 1951.58 430.172 1948.49 422.568 cv
1940.01 398.468 li
1944.61 398.32 1948.81 395.111 1949.92 390.292 cv
1950.4 388.168 1950.23 385.992 1949.41 383.981 cv
1934.54 341.756 li
1932.46 335.841 1928.11 331.728 1922.62 330.467 cv
1917.12 329.209 1911.41 331.017 1906.96 335.434 cv
1874.84 367.309 li
1872.12 370.014 1871.08 373.986 1872.13 377.678 cv
1872.94 380.478 1874.84 382.779 1877.35 384.102 cv
1858.87 402.444 li
1856.14 405.151 1855.1 409.126 1856.16 412.809 cv
1857.15 416.278 1859.84 418.985 1863.26 420.01 cv
1850.11 433.067 li
1844.23 438.901 1847.1 448.958 1855.18 450.81 cv
1880.2 456.546 li
1873.86 484.206 li
1850.89 482.064 li
1850.01 481.981 1851.63 481.836 1823.85 485.328 cv
1815.09 415.859 li
1817.94 415.5 li
1831.12 413.837 1835.74 396.981 1825.24 388.836 cv
1822.08 386.386 1818.16 385.313 1814.2 385.811 cv
1790.11 388.846 li
1784.66 345.567 li
1790.21 347.059 1796.45 345.267 1800.31 340.335 cv
1805.39 333.837 1804.25 324.4 1797.77 319.298 cv
1762.04 291.157 li
1759.57 289.208 1755.98 289.633 1754.03 292.109 cv
1752.09 294.583 1752.51 298.169 1754.99 300.117 cv
1790.72 328.258 li
1792.27 329.482 1792.54 331.748 1791.32 333.311 cv
1790.11 334.856 1787.89 335.123 1786.35 333.908 cv
1698.72 264.894 1703.89 268.04 1700.5 268.464 cv
1698.99 268.654 1697.61 269.445 1696.69 270.656 cv
1628.45 359.886 1633.32 354.253 1631.24 354.526 cv
1628.12 354.942 1626.01 351.314 1627.95 348.774 cv
1696.75 258.821 li
1697.93 257.273 1700.17 256.946 1701.75 258.19 cv
1739.55 287.961 li
1742.02 289.911 1745.61 289.484 1747.56 287.009 cv
1749.51 284.535 1749.08 280.949 1746.61 279.001 cv
1708.81 249.228 li
1705.68 246.769 1701.63 245.644 1697.69 246.138 cv
1693.75 246.634 1690.1 248.731 1687.69 251.89 cv
1618.89 341.844 li
1610.82 352.4 1619.55 367.564 1632.73 365.835 cv
1634.65 365.582 1636.47 364.963 1638.12 364.036 cv
1644.75 416.627 1643.85 414.758 1646.45 416.768 cv
1647.2 417.354 1648.08 417.735 1649.01 417.888 cv
1647.73 427.715 1656.07 435.901 1665.7 434.69 cv
1668.55 434.331 li
1668.6 434.756 1679.23 519.219 1679.33 519.636 cv
1681.09 527.463 1687.32 532.501 1697.39 531.383 cv
1715.34 529.121 li
1719.57 545.128 li
1693.11 567.617 li
1691.7 568.811 1690.96 570.612 1691.12 572.448 cv
1692.23 585.423 li
1672.2 560.792 li
1679.78 546.361 li
1680.7 544.598 1680.64 542.482 1679.62 540.776 cv
1660.72 509.266 li
1659.56 507.336 1657.37 506.258 1655.12 506.541 cv
1605.34 512.799 li
1602.49 513.161 1600.35 515.586 1600.35 518.461 cv
1600.35 523.395 1600.35 616.13 1600.35 620.494 cv
1600.35 628.67 1607 635.321 1615.18 635.321 cv
1974.82 635.321 li
1983 635.321 1989.65 628.669 1989.65 620.494 cv
1989.65 611.695 1989.65 506.277 1989.65 500.196 cv
1989.65 497.252 1987.41 494.791 1984.48 494.518 cv
cp
f
1280.73 516.784 mo
1274.32 519.189 1230.69 539.727 1184.06 540.435 cv
1180.91 540.484 1178.4 543.075 1178.45 546.225 cv
1178.5 549.437 1181.18 551.917 1184.24 551.841 cv
1219.27 551.308 1254.19 540.595 1286.26 526.823 cv
1288.72 525.869 1291.1 525.668 1292.07 526.33 cv
1294.37 527.896 1293.74 529.409 1293.74 616.169 cv
1293.74 620.441 1290.26 623.917 1285.99 623.917 cv
1101.47 623.917 li
1061.61 623.917 1029.06 613.616 1004.7 593.299 cv
1002.28 591.281 998.684 591.606 996.666 594.026 cv
994.648 596.445 994.973 600.042 997.393 602.059 cv
1023.85 624.131 1058.87 635.322 1101.47 635.322 cv
1285.99 635.322 li
1296.54 635.322 1305.14 626.735 1305.15 616.173 cv
1305.15 532.808 li
1305.15 515.718 1292.92 511.198 1280.73 516.784 cv
cp
.105882 .458824 .729412 rgb
f
940.456 503.016 mo
941.77 500.237 940.643 496.914 937.908 495.508 cv
923.611 488.157 926.188 466.878 941.946 463.301 cv
943.509 462.946 944.85 461.951 945.641 460.559 cv
947.941 456.514 944.199 454.858 944.199 443.889 cv
944.199 415.495 973.698 396.36 999.666 408.23 cv
1003.04 409.77 1006.96 407.732 1007.64 404.096 cv
1012.95 375.842 1047.27 364.329 1068.58 383.514 cv
1070.95 385.647 1074.67 385.435 1076.76 382.946 cv
1092.5 364.236 1123.46 377.154 1120.63 401.847 cv
1120.29 404.868 1122.37 407.628 1125.37 408.122 cv
1135.94 409.862 1143.61 418.911 1143.61 429.636 cv
1143.61 445.956 1126.2 456.566 1111.7 448.969 cv
1108.98 447.544 1105.62 448.53 1104.1 451.2 cv
1091.69 473.02 1060.09 472.866 1047.95 450.794 cv
1046.06 447.347 1042.83 447.956 1039.99 447.653 cv
1033.54 446.976 1035.28 454.05 1027.03 456.364 cv
1025.34 456.838 1023.96 458.063 1023.29 459.686 cv
1021.41 464.257 1025.87 465.315 1025.87 473.189 cv
1025.87 486.131 1012.05 494.551 1000.54 488.482 cv
995.26 485.698 989.536 492.138 993.395 497.051 cv
1009.48 517.528 994.8 547.665 968.771 547.665 cv
945.918 547.663 930.657 523.765 940.456 503.016 cv
cp
976.983 558.277 mo
1002.64 553.193 1017.83 526.428 1008.97 501.877 cv
1012.47 501.83 1015.82 501.149 1018.91 499.951 cv
1026.89 532.587 1048.25 562.295 1080.6 578.984 cv
1101.14 589.58 1125.77 594.953 1153.8 594.953 cv
1156.95 594.953 1159.5 592.4 1159.5 589.249 cv
1159.5 586.098 1156.95 583.546 1153.8 583.546 cv
1106.65 583.546 1071.3 567.964 1048.72 537.234 cv
1035.19 518.806 1030.48 500.107 1029.12 493.202 cv
1036.57 485.555 1039.05 474.661 1036 464.772 cv
1037.78 463.685 1039.42 462.369 1040.85 460.862 cv
1046.45 468.588 1054.66 474.61 1064.73 477.35 cv
1063.89 488.452 1064.19 514.165 1081.19 535.254 cv
1083.16 537.705 1086.75 538.091 1089.21 536.115 cv
1091.66 534.138 1092.04 530.548 1090.07 528.095 cv
1076 510.647 1075.48 488.659 1076.08 478.889 cv
1084.81 478.889 1093.17 476.274 1100.18 471.635 cv
1084.34 500.494 1104.04 543.658 1163.65 550.821 cv
1166.77 551.198 1169.62 548.967 1169.99 545.84 cv
1170.37 542.713 1168.14 539.873 1165.01 539.498 cv
1104.14 532.183 1091.35 483.974 1123.49 462.814 cv
1141.03 461.929 1155.02 447.386 1155.02 429.638 cv
1155.02 415.038 1145.68 402.476 1132.2 398.081 cv
1131.44 367.337 1095.01 351.445 1071.95 371.613 cv
1045.71 352.886 1008.5 364.738 998.134 395.473 cv
961.7 384.34 926.097 416.376 933.824 454.059 cv
914.138 462.994 911.259 489.766 928.254 502.839 cv
919.507 528.955 937.596 556.32 964.75 558.871 cv
967.115 564.619 972.698 576.106 983.52 588.503 cv
984.647 589.794 986.229 590.454 987.818 590.454 cv
992.678 590.454 995.341 584.699 992.112 581 cv
984.381 572.147 979.629 563.788 976.983 558.277 cv
cp
f
1131.15 313.193 mo
1096.71 313.193 li
1093.56 313.193 1091.01 315.744 1091.01 318.896 cv
1091.01 322.046 1093.56 324.599 1096.71 324.599 cv
1134.93 324.599 li
1137.35 324.599 1139.51 323.068 1140.31 320.783 cv
1145.1 307.119 1161.25 301.293 1173.62 308.666 cv
1177.76 311.135 1182.93 307.651 1182.18 302.882 cv
1180.26 290.684 1189.72 279.706 1201.98 279.706 cv
1214.14 279.706 1223.56 290.528 1221.81 302.607 cv
1221.03 307.978 1227.52 311.286 1231.42 307.523 cv
1242.71 296.601 1261.51 303.957 1262.73 319.343 cv
1262.96 322.309 1265.44 324.597 1268.42 324.597 cv
1300.7 324.597 li
1303.85 324.597 1306.4 322.045 1306.4 318.894 cv
1306.4 315.743 1303.85 313.191 1300.7 313.191 cv
1273.2 313.191 li
1268.63 295.963 1249.67 286.13 1232.74 293.214 cv
1229.73 278.999 1217.08 268.299 1201.98 268.299 cv
1186.17 268.299 1173.05 280.019 1170.85 295.225 cv
1154.91 290.935 1138.33 298.63 1131.15 313.193 cv
cp
f
1073.95 279.707 mo
1105.52 279.707 li
1108.5 279.707 1110.97 277.42 1111.21 274.453 cv
1112.43 259.062 1131.23 251.71 1142.52 262.632 cv
1144.78 264.822 1148.4 264.761 1150.58 262.498 cv
1152.77 260.234 1152.71 256.623 1150.45 254.433 cv
1133.92 238.443 1106.54 246.461 1100.73 268.299 cv
1073.95 268.299 li
1070.8 268.299 1068.25 270.852 1068.25 274.003 cv
1068.25 277.154 1070.8 279.707 1073.95 279.707 cv
cp
f
1187.05 455.152 mo
1184.63 455.152 1182.66 453.182 1182.66 450.762 cv
1182.66 448.342 1184.63 446.373 1187.05 446.373 cv
1189.47 446.373 1191.44 448.342 1191.44 450.762 cv
1191.44 453.182 1189.47 455.152 1187.05 455.152 cv
cp
1202.85 450.761 mo
1202.85 442.051 1195.76 434.966 1187.05 434.966 cv
1178.34 434.966 1171.26 442.052 1171.26 450.761 cv
1171.26 459.471 1178.34 466.557 1187.05 466.557 cv
1195.76 466.557 1202.85 459.471 1202.85 450.761 cv
cp
f
978.867 353.86 mo
981.287 353.86 983.256 355.829 983.256 358.248 cv
983.256 360.668 981.287 362.638 978.867 362.638 cv
976.447 362.638 974.478 360.669 974.478 358.248 cv
974.479 355.827 976.446 353.86 978.867 353.86 cv
cp
978.867 374.045 mo
987.577 374.045 994.662 366.959 994.662 358.248 cv
994.662 349.537 987.576 342.453 978.867 342.453 cv
970.158 342.453 963.071 349.539 963.071 358.248 cv
963.071 366.958 970.158 374.045 978.867 374.045 cv
cp
f
1144.88 478.363 mo
1148.4 478.363 1151.26 481.218 1151.26 484.738 cv
1151.26 488.26 1148.4 491.114 1144.88 491.114 cv
1141.36 491.114 1138.51 488.26 1138.51 484.738 cv
1138.51 481.218 1141.36 478.363 1144.88 478.363 cv
cp
f
1187.05 495.883 mo
1190.58 495.883 1193.43 498.737 1193.43 502.258 cv
1193.43 505.779 1190.58 508.633 1187.05 508.633 cv
1183.53 508.633 1180.68 505.779 1180.68 502.258 cv
1180.68 498.737 1183.53 495.883 1187.05 495.883 cv
cp
f
1022.97 341.779 mo
1026.49 341.779 1029.35 344.633 1029.35 348.154 cv
1029.35 351.674 1026.49 354.529 1022.97 354.529 cv
1019.45 354.529 1016.6 351.674 1016.6 348.154 cv
1016.6 344.633 1019.45 341.779 1022.97 341.779 cv
cp
f
611.768 571.229 mo
611.588 571.777 611.492 572.36 611.492 572.965 cv
611.492 584.679 601.962 594.209 590.246 594.209 cv
578.531 594.209 569 584.679 569 572.965 cv
569 569.815 566.449 567.262 563.298 567.262 cv
560.148 567.262 557.596 569.815 557.596 572.965 cv
557.596 584.679 548.066 594.209 536.35 594.209 cv
524.635 594.209 515.104 584.679 515.104 572.965 cv
515.104 569.815 512.552 567.262 509.402 567.262 cv
506.252 567.262 503.7 569.815 503.7 572.965 cv
503.7 584.679 494.169 594.209 482.454 594.209 cv
470.738 594.209 461.208 584.679 461.208 572.965 cv
461.208 569.815 458.656 567.262 455.506 567.262 cv
452.356 567.262 449.803 569.815 449.803 572.965 cv
449.803 584.679 440.272 594.209 428.557 594.209 cv
416.842 594.209 407.312 584.679 407.312 572.965 cv
407.312 569.815 404.758 567.262 401.609 567.262 cv
398.459 567.262 395.907 569.815 395.907 572.965 cv
395.907 584.679 386.376 594.209 374.662 594.209 cv
362.946 594.209 353.415 584.679 353.415 572.965 cv
353.415 569.815 350.862 567.262 347.713 567.262 cv
344.563 567.262 342.01 569.815 342.01 572.965 cv
342.01 584.679 332.48 594.209 320.766 594.209 cv
309.05 594.209 299.519 584.679 299.519 572.965 cv
299.519 569.815 296.966 567.262 293.816 567.262 cv
290.667 567.262 288.114 569.815 288.114 572.965 cv
288.114 584.679 278.584 594.209 266.868 594.209 cv
255.153 594.209 245.622 584.679 245.622 572.965 cv
245.622 572.322 245.511 571.708 245.315 571.132 cv
245.315 550.424 li
260.054 563.407 282.721 560.528 293.816 544.338 cv
306.835 563.333 334.72 563.297 347.713 544.338 cv
360.731 563.333 388.616 563.297 401.609 544.338 cv
414.627 563.333 442.513 563.297 455.505 544.337 cv
468.522 563.333 496.408 563.297 509.401 544.338 cv
522.418 563.333 550.304 563.297 563.297 544.338 cv
574.41 560.554 597.055 563.373 611.762 550.456 cv
611.762 571.23 li
611.768 571.23 li
611.768 571.229 li
611.768 571.229 li
cp
331.516 497.141 mo
333.502 495.156 333.06 495.652 360.29 495.662 cv
363.095 495.663 365.375 497.945 365.375 500.748 cv
365.359 545.025 li
358.294 541.57 353.416 534.31 353.416 525.931 cv
353.415 522.78 350.862 520.228 347.713 520.228 cv
344.563 520.228 342.01 522.78 342.01 525.931 cv
342.01 534.333 337.105 541.612 330.01 545.055 cv
330.027 497.21 329.464 499.191 331.516 497.141 cv
cp
289.559 459.328 mo
347.733 400.56 li
405.869 459.367 li
405.849 522.125 li
402.361 518.247 395.907 520.714 395.907 525.931 cv
395.907 536.937 387.495 546.013 376.763 547.071 cv
376.779 500.753 li
376.782 491.66 369.386 484.26 360.293 484.258 cv
335.119 484.249 li
325.984 484.249 318.623 491.633 318.621 500.734 cv
318.604 547.067 li
307.901 545.98 299.519 536.917 299.519 525.931 cv
299.519 520.671 292.991 518.243 289.538 522.171 cv
289.559 459.328 li
cp
622.885 526.365 mo
622.994 518.123 611.491 518.446 611.491 525.93 cv
611.491 537.644 601.961 547.174 590.246 547.174 cv
578.531 547.174 569 537.645 569 525.93 cv
569 522.78 566.448 520.227 563.297 520.227 cv
560.147 520.227 557.595 522.78 557.595 525.93 cv
557.595 537.644 548.065 547.174 536.349 547.174 cv
524.635 547.174 515.104 537.645 515.104 525.93 cv
515.104 522.78 512.551 520.227 509.401 520.227 cv
506.251 520.227 503.699 522.78 503.699 525.93 cv
503.699 537.644 494.169 547.174 482.453 547.174 cv
470.738 547.174 461.208 537.645 461.208 525.93 cv
461.208 522.78 458.655 520.227 455.505 520.227 cv
452.355 520.227 449.803 522.78 449.803 525.93 cv
449.803 542.577 431.365 552.82 417.244 543.899 cv
417.268 470.683 li
419.738 472.577 422.76 473.647 425.992 473.647 cv
438.62 473.647 445.241 458.283 436.214 449.162 cv
391.25 403.678 li
389.036 401.439 385.426 401.418 383.187 403.631 cv
380.946 405.845 380.926 409.455 383.14 411.695 cv
428.106 457.182 li
429.993 459.088 428.556 462.278 425.972 462.242 cv
424.328 462.233 424.44 461.934 415.638 453.029 cv
415.638 453.029 352.037 388.694 351.789 388.443 cv
349.564 386.191 345.917 386.182 343.681 388.44 cv
266.756 466.152 271.258 462.189 269.437 462.189 cv
267.812 462.189 266.474 460.876 266.466 459.23 cv
266.462 458.435 266.767 457.687 267.326 457.123 cv
350.818 372.778 345.909 377.141 347.741 377.141 cv
349.456 377.141 348.319 376.467 369.157 397.546 cv
371.371 399.785 374.981 399.806 377.22 397.593 cv
379.46 395.379 379.48 391.768 377.267 389.529 cv
357.967 370.006 li
352.218 364.194 343.04 364.438 337.522 369.998 cv
259.218 449.099 li
253.619 454.756 253.681 463.852 259.318 469.432 cv
264.455 474.52 272.486 474.977 278.15 470.636 cv
278.127 543.935 li
264 552.797 245.624 542.55 245.624 525.93 cv
245.624 522.78 243.071 520.227 239.921 520.227 cv
236.771 520.227 234.219 522.78 234.219 525.93 cv
234.219 526.044 234.227 526.159 234.227 526.273 cv
233.762 527.623 233.912 521.778 233.912 620.475 cv
233.912 628.65 240.563 635.301 248.738 635.301 cv
291.579 635.301 li
294.728 635.301 297.281 632.749 297.281 629.599 cv
297.281 626.448 294.728 623.896 291.579 623.896 cv
248.736 623.896 li
246.85 623.896 245.314 622.361 245.314 620.474 cv
245.314 597.458 li
260.054 610.44 282.72 607.561 293.815 591.372 cv
306.834 610.366 334.719 610.33 347.712 591.372 cv
360.73 610.366 388.616 610.33 401.608 591.372 cv
414.626 610.366 442.512 610.33 455.504 591.372 cv
468.521 610.366 496.407 610.331 509.4 591.372 cv
522.418 610.366 550.304 610.331 563.297 591.372 cv
574.41 607.588 597.054 610.406 611.761 597.489 cv
611.761 620.474 li
611.761 622.36 610.226 623.895 608.339 623.895 cv
312.107 623.895 li
308.957 623.895 306.404 626.448 306.404 629.598 cv
306.404 632.748 308.957 635.3 312.107 635.3 cv
608.341 635.3 li
616.515 635.3 623.167 628.649 623.167 620.474 cv
623.167 521.724 623.302 527.643 622.885 526.365 cv
cp
f
324.332 475.695 mo
371.089 475.711 li
374.238 475.711 376.791 473.159 376.792 470.011 cv
376.792 466.861 374.24 464.307 371.09 464.306 cv
324.333 464.29 li
321.185 464.29 318.631 466.841 318.63 469.99 cv
318.63 473.141 321.181 475.694 324.332 475.695 cv
cp
f
324.336 459.81 mo
324.337 459.81 371.093 459.824 371.093 459.824 cv
374.241 459.824 376.794 457.272 376.795 454.123 cv
376.796 450.973 374.245 448.419 371.095 448.419 cv
324.338 448.404 li
321.19 448.404 318.637 450.956 318.636 454.106 cv
318.635 457.256 321.187 459.809 324.336 459.81 cv
cp
f
512.734 288.607 mo
515.557 288.32 517.739 285.999 517.853 283.165 cv
518.437 268.745 530.205 257.452 544.645 257.452 cv
559.407 257.452 571.423 269.439 571.466 284.192 cv
571.365 288.498 575.746 291.288 579.535 289.558 cv
586.467 286.387 594.522 290.89 595.417 298.473 cv
595.756 301.343 598.19 303.507 601.08 303.507 cv
607.269 303.507 611.76 308.432 611.76 314.061 cv
611.76 319.883 607.024 324.619 601.203 324.619 cv
541.212 324.619 li
539.83 311.943 529.315 303.512 520.467 302.351 cv
518.936 297.316 515.643 292.357 510.962 288.907 cv
511.542 288.768 512.133 288.668 512.734 288.607 cv
cp
377.416 352.182 mo
379.113 353.063 377.274 352.819 412.848 352.819 cv
415.998 352.819 418.551 350.266 418.551 347.116 cv
418.551 343.966 415.998 341.413 412.848 341.413 cv
381.872 341.413 li
380.914 341.089 380.538 341.198 378.717 340.82 cv
371.985 339.095 369.567 332.952 369.493 330.428 cv
369.114 322.886 375.383 315.794 383.687 315.794 cv
386.081 315.794 387.99 316.752 390.42 314.902 cv
391.67 313.952 392.472 312.53 392.639 310.97 cv
393.523 302.718 400.157 296.115 408.415 295.272 cv
411.237 294.984 413.418 292.664 413.532 289.83 cv
414.267 271.673 429.088 257.449 447.272 257.449 cv
465.868 257.449 481.002 272.553 481.048 291.138 cv
480.984 293.232 482.025 295.087 483.667 296.142 cv
487.69 298.725 489.178 295.18 495.313 295.18 cv
502.83 295.18 509.225 300.802 510.112 308.315 cv
510.451 311.186 512.885 313.349 515.775 313.349 cv
523.787 313.214 530.664 320.136 529.894 328.651 cv
529.254 335.77 523.251 341.413 515.926 341.413 cv
432.998 341.413 li
429.847 341.413 427.295 343.965 427.295 347.115 cv
427.295 350.265 429.847 352.818 432.998 352.818 cv
515.925 352.818 li
526.919 352.818 536.305 345.806 539.85 336.02 cv
601.205 336.02 li
613.315 336.02 623.167 326.168 623.167 314.057 cv
623.167 303.495 615.672 294.65 605.721 292.562 cv
602.441 282.808 592.845 276.289 582.22 277.216 cv
578.901 259.496 563.314 246.044 544.646 246.044 cv
525.596 246.044 509.81 259.838 506.904 278.188 cv
503.253 279.284 499.92 281.216 497.116 283.841 cv
495.394 283.724 493.692 283.76 491.876 283.996 cv
488.405 262.508 469.725 246.044 447.274 246.044 cv
424.493 246.044 405.659 262.734 402.551 284.807 cv
392.954 287.449 385.291 294.923 382.391 304.42 cv
368.207 305.131 357.417 317.362 358.104 331.002 cv
358.53 339.715 365.625 350.096 377.416 352.182 cv
cp
f
399.435 367.031 mo
394.7 375.339 li
392.525 379.155 395.309 383.865 399.648 383.865 cv
401.63 383.865 403.557 382.831 404.608 380.986 cv
409.344 372.679 li
410.903 369.942 409.949 366.46 407.213 364.902 cv
404.478 363.341 400.996 364.294 399.435 367.031 cv
cp
f
439.474 383.864 mo
441.455 383.864 443.382 382.83 444.433 380.985 cv
449.168 372.678 li
450.729 369.941 449.774 366.459 447.038 364.901 cv
444.301 363.34 440.818 364.296 439.261 367.031 cv
434.525 375.338 li
432.35 379.154 435.135 383.864 439.474 383.864 cv
cp
f
431.598 391.993 mo
428.861 390.433 425.379 391.387 423.821 394.123 cv
419.085 402.43 li
417.526 405.167 418.48 408.649 421.215 410.207 cv
423.952 411.766 427.435 410.812 428.992 408.076 cv
433.728 399.77 li
435.289 397.034 434.334 393.552 431.598 391.993 cv
cp
f
479.296 383.864 mo
481.278 383.864 483.205 382.83 484.256 380.985 cv
488.99 372.678 li
490.55 369.941 489.596 366.459 486.86 364.901 cv
484.124 363.34 480.642 364.296 479.083 367.031 cv
474.347 375.338 li
472.172 379.154 474.957 383.864 479.296 383.864 cv
cp
f
471.42 391.993 mo
468.684 390.433 465.201 391.387 463.644 394.123 cv
458.908 402.43 li
457.348 405.167 458.303 408.649 461.039 410.207 cv
463.774 411.766 467.257 410.812 468.815 408.076 cv
473.551 399.77 li
475.111 397.034 474.157 393.552 471.42 391.993 cv
cp
f
448.417 438.048 mo
450.398 438.048 452.325 437.014 453.376 435.168 cv
458.111 426.862 li
459.67 424.125 458.716 420.643 455.98 419.084 cv
453.242 417.527 449.761 418.479 448.203 421.215 cv
443.468 429.522 li
441.297 433.329 444.068 438.048 448.417 438.048 cv
cp
f
519.119 383.864 mo
521.101 383.864 523.027 382.83 524.078 380.985 cv
528.813 372.678 li
530.374 369.941 529.419 366.459 526.683 364.901 cv
523.946 363.34 520.464 364.296 518.906 367.031 cv
514.17 375.338 li
511.996 379.154 514.78 383.864 519.119 383.864 cv
cp
f
511.244 391.993 mo
508.507 390.433 505.025 391.387 503.467 394.123 cv
498.731 402.43 li
497.171 405.167 498.125 408.649 500.862 410.207 cv
503.598 411.766 507.08 410.812 508.638 408.076 cv
513.374 399.77 li
514.934 397.034 513.979 393.552 511.244 391.993 cv
cp
f
488.24 438.048 mo
490.221 438.048 492.148 437.014 493.2 435.168 cv
497.934 426.862 li
499.494 424.125 498.539 420.643 495.803 419.084 cv
493.064 417.527 489.584 418.479 488.026 421.215 cv
483.291 429.522 li
481.12 433.329 483.892 438.048 488.24 438.048 cv
cp
f
472.801 465.14 mo
474.783 465.14 476.709 464.107 477.76 462.261 cv
482.495 453.955 li
484.055 451.218 483.1 447.737 480.364 446.178 cv
477.628 444.618 474.146 445.572 472.587 448.308 cv
467.852 456.614 li
465.677 460.428 468.461 465.14 472.801 465.14 cv
cp
f
457.361 492.233 mo
459.343 492.233 461.269 491.199 462.319 489.354 cv
467.055 481.049 li
468.615 478.312 467.661 474.83 464.925 473.272 cv
462.188 471.714 458.706 472.666 457.148 475.401 cv
452.413 483.706 li
450.235 487.522 453.02 492.233 457.361 492.233 cv
cp
f
558.941 383.864 mo
560.923 383.864 562.85 382.83 563.9 380.985 cv
568.636 372.678 li
570.196 369.941 569.241 366.459 566.505 364.901 cv
563.769 363.34 560.287 364.296 558.728 367.031 cv
553.992 375.338 li
551.818 379.154 554.603 383.864 558.941 383.864 cv
cp
f
551.066 391.993 mo
548.33 390.433 544.848 391.387 543.289 394.123 cv
538.554 402.43 li
536.994 405.167 537.949 408.649 540.685 410.207 cv
543.42 411.766 546.903 410.812 548.462 408.076 cv
553.197 399.77 li
554.756 397.034 553.803 393.552 551.066 391.993 cv
cp
f
528.063 438.048 mo
530.044 438.048 531.971 437.014 533.022 435.168 cv
537.757 426.862 li
539.317 424.125 538.362 420.643 535.626 419.084 cv
532.888 417.527 529.408 418.479 527.849 421.215 cv
523.114 429.522 li
520.943 433.329 523.714 438.048 528.063 438.048 cv
cp
f
512.623 465.14 mo
514.605 465.14 516.532 464.107 517.582 462.261 cv
522.316 453.955 li
523.877 451.218 522.922 447.737 520.187 446.178 cv
517.45 444.618 513.968 445.572 512.409 448.308 cv
507.674 456.614 li
505.5 460.428 508.284 465.14 512.623 465.14 cv
cp
f
497.184 492.233 mo
499.165 492.233 501.092 491.199 502.144 489.354 cv
506.878 481.049 li
508.438 478.312 507.483 474.83 504.748 473.272 cv
502.011 471.714 498.53 472.666 496.971 475.401 cv
492.236 483.706 li
490.059 487.522 492.843 492.233 497.184 492.233 cv
cp
f
598.766 383.864 mo
600.748 383.864 602.674 382.83 603.725 380.985 cv
608.46 372.678 li
610.021 369.941 609.066 366.459 606.33 364.901 cv
603.593 363.34 600.111 364.296 598.552 367.031 cv
593.818 375.338 li
591.641 379.154 594.426 383.864 598.766 383.864 cv
cp
f
583.327 410.956 mo
585.309 410.956 587.235 409.923 588.286 408.077 cv
593.021 399.77 li
594.582 397.033 593.627 393.551 590.891 391.993 cv
588.154 390.434 584.672 391.388 583.114 394.124 cv
578.378 402.431 li
576.202 406.244 578.986 410.956 583.327 410.956 cv
cp
f
567.886 438.048 mo
569.867 438.048 571.794 437.014 572.846 435.168 cv
577.58 426.862 li
579.14 424.125 578.185 420.643 575.449 419.084 cv
572.71 417.527 569.23 418.479 567.671 421.215 cv
562.937 429.522 li
560.766 433.329 563.538 438.048 567.886 438.048 cv
cp
f
552.446 465.14 mo
554.428 465.14 556.355 464.107 557.405 462.261 cv
562.14 453.955 li
563.7 451.218 562.746 447.737 560.009 446.178 cv
557.273 444.618 553.791 445.572 552.233 448.308 cv
547.498 456.614 li
545.323 460.428 548.107 465.14 552.446 465.14 cv
cp
f
537.006 492.233 mo
538.989 492.233 540.915 491.199 541.966 489.354 cv
546.701 481.049 li
548.261 478.312 547.307 474.83 544.571 473.272 cv
541.834 471.714 538.352 472.666 536.794 475.401 cv
532.059 483.706 li
529.881 487.522 532.666 492.233 537.006 492.233 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (huseyn) ()
%%Title: (a52001ed-3ec4-3157-8ceb-d5de3a5fb774.eps)
%%CreationDate: 10/8/2019 3:21 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7&o5o/QZ\ra".S*Pf180j)-!dVWf:@tT+C+@)e0;j*[Bir@](R9^+EguROd!"O5@3&%FGGKN\8OgMK[0F.!&dB4e>^G^HO
%Q;^6I/+Bj*_iG/JrpTlQQM-:o^%]fC.B9C!D\$KTMTG@5:!,!t>'dfQn![h$f1VQ,ZeO7(-%BTFhiUrl?SpZJhJAX1q@ZN)gjj2"
%=n+4V2"cg\D/"Ej'P.Q3Ij>i&pY[MdJ=d-QIa#5#<7(Mj=;Ki7iCdg1$0RNQ-3"*dch*[RlZ]bN@CGVl3&I4l.-cE@dHD*kCr=<1
%5=,(lQdVqgT\65aqF77<@mB$A'Oflj#9c6NPlqc*j<)D<LON`u+i+()_W(Sc_d7i0c^^'j$$;bd5)"&sFF_=)";-+FX:*Z^'-JPk
%(5X"^lE*f[lg$r`,/Zf7GWa/>,sd[6^Y>**,fjqb<MR4dMoZkWPuXHXi+Q,L.]P@H,\m8g6iV5F\$'Q^]k^1rhX),<T--.#<#O$r
%6&mDr-X"3U%@VV;]P[:lK+t1\R2hV0]a5C6Y[j1@Og9UIo%+dWe@INN%uP*[#:P`ET>K6q*=l=6m>$]/aBFdtFS'b(]HHO"E4j7^
%"\Ac=1+H*N0HdVK&-)7+.a.TdT!<ttqH-dAaOZpanKBf;*b=;/*q]'"CXe=:L8#$hLoO(5lL&eSb"-SbcDT#RKVGF)pfFm'[2'6g
%kkFbY9aT!+-BB-nJ;G<^E9_PWOu-AkQ6(KLJG-H\@l2H!p$:fLq$g./3Yj:Mn9Acd"\'FCs6ouJl#4^S^,^]cpU]L[PAOCGs8?:Y
%?85*amm8]%bq9:5i]ASP_j?H<8G8sbf[\,p"25;d6oC_Qq?.tgg!tNC=1FQD[K#RSHJ#l<7n*b41u8-uDjh[O@QMdB`dC^#CL&%X
%@>HUMquOQG^o%c:*2rV84Q-ESkl=on(,BJ1rs&WG5C&YHB=)$>+>BqPs3p<m:ghQ1JCmE!)qFu:5JpT:kl#OM*2`u=gK=&N^CEFn
%Dc_6P0$pdH%O9RSbR<Nd+0C^Z1jZ8I4sqTd.lGID^$qfKf0(QL;JS1M>$(%>NNt4b*VAX2U1lN@f\cIP\8pbNj<qUgPG[9Hn$Z$G
%PWu?a[0DRc#aUZ\1W?[0YBjt2pi2U3.?k-OhO;@\dr6?94GC,o6;CSjfY$YiW"6o_rm\_#jG_M7)\q%22;/U"p^.+uYE/C?g$2u+
%kpt8kN_[$`4gHb..6`>RF*aoYjATF*1A&W(`?%F<I106/LS&u6nEoKhG77mcq4'4_(fb8*+.rJ<kmRL@C:<*A#]QYVPQlOV%+uO-
%N-Dnfpm?*XBND]jRuH9QlWJ0P_]SDErs+_#L,-k7`g`O1p;hu9lNKQ0Y.9>eTf!)+=JPH4R'tS?6XU?_BPg)SQm>4A,Scs#<$d\N
%_4h1o>b`Z8-+!5(=mo5U,j);p-K0^b&q3N7"IARE6sV`dotCZ'm"*V[cC[S&?hZgF2/^[nMPn]Gp'9F%kIg$D4ilYH0Z+qk.FE1.
%e'];E:<J"P&)E-UF:On0!JrSkk@BjbSt>330*Amnp0pe:`_VK%[TVf5&E/"3@#p8aWeqV/\OKAP38@a@aKitbkN($k5,E%Nr1C'Z
%rFj`RLCnk&1V+PVrg<En&PKq[FNaM%boo6'Jo*07@!cp/p?hu&7$o!c'G*Bg1)`3qIH*aKmob"H@(;'^(QsFD864k]]DSO+ODt3j
%"g"WoWc)rj;E80Wb0<kqBd-uWb"Ws<o2KT3;`PASI0NV1&#I<l-9$@@>d^V`mPKu!UGpN\VTJ&HF1HQK2p^St4dSh*J*>-D?)s?B
%IZ)+S#kne6*H+>>HbL_PYC+A(3WG(dLUqq4#5SOaha>!(lW7!\*sQGQob9AILJNf1;KM?!Vtu0Okp3$S4`/R3)-T,l5'><p2g\B1
%MAQ:lR@o3'6A$*K<10D/o!U]YhKkU?C/=;JYT%2!YFcB[Aoa5bLo%?YHI10Q8[I7=CMb_FH%!fQ_BHo\Ja'p1Am>9JJYPjb7:6eH
%9l.j$PFHRkXM:BP\cRR-9eQYuCYY_Ao?c%9)g&,a=YH!sDZmV*cY`MC+p3&*al'l2nh1jPBsX[u&B"N3kJp@/XS=fl]O(4u`O&\o
%=Du(G?D!TqN0-&YG!G/l#dO+#Q;Ok+?d<[R1E#h0[Tc[KJ\U#L^_]X%?TAdeDH316SEF[c*7JL#4Lg*bH`<-+(cZ2<WJq-$]^1^!
%"Lj.&3P8G3ER>n&[iBWG2"6\e]AMe5>jE=,H;!^R+_IVLitk%KWV;BHUJGdnT0()C`;F?@X^A("I`7CB;P6O+\#(AtB/832^<sZm
%4FZTGk$:0cY0/2,Ra"6%f7/)p@8D<0c[XuPNJP)$qisKD4Yu[nVLOjNG2C7rj@.S9?0bdu@LTo:%=@#DF3X1%PuTR.WINeVbOcpE
%RCPu3MirK3PaH.6CN_d^I&<PA=#>VFaS.H"F5o-S`p5_BiooLDR(;b`GB/B*cqF3ECf\ZqH->R@mpCGqdj-mI%!TO6'#W4;$np#Y
%XDA:USY%]_DncM`c0t'"YMIqt[DlZV*7'R.T]!N?&EfYTg>+sO[eB`Y)kDQBMNS4PR[Ij)$SbS0*dHi+S1Igpg24N+d$s)b*aXlO
%?<o<8qViQVd(W94lUrSkD,Nj,e'uN$^A-e\lcc0J)83u0pZa!hqY7Tpa[\"XS3:hkNQBUr-P'deR5+"Z%FBB6MjTK[qA2A0FHSPB
%^)u\dktJR7o-B6.hs+Ncc(<&?I<_^Xb_ul"6HlXip!^A(4D:F@)oKdY$2'oGAo.C@"PqU"eE;Cs9#\R^`d&_E3-8%t[EZ,rP02lP
%C[f/;Z&:$Ni(9'-2?20T]GHdCbtML1HF,JMj:lrnC=d9IBcAA9-:LGRB^;+B3s3W/Z]&fNog$l;kbO"I4m6(gbB'??W/6Yq+VZlK
%"QJS)BOErYU86C'7=Wmu8WcpDfEknBRS@_filqdB(0]I+H1E.p^M=#1i5'4AA_r8!'a\(>4*@9B+_Fct(Gjj'i^jPW^G3H$-]46<
%aN\*Cb5@6Mo3RY1WLS;i(UN+IB"Sr!6YJJ)]dWmu7lgac.-9pIMrKGXGq[=Q(ZjQD2W(eVL&DPSU3JF;;t$:>]dV>J;9sSdVT->q
%P/XeHp$^Um;Z9G)-sh^tQ!OD?:MFFGVoFoO^L/oG.EgCnGb1fCYIPojmti!i,Db6gMFju/]03n_7@pFJpkpXjZfo0:<;^@i8O),"
%iRkpBWBV%RXC$=sbhT@L`NDdR]B4YJF1X?>CNI*G'6Yt`"irf2Rtke.Ct<]-d^`AI>ICY;[<\u7&(]lDD/Rn<McFhi#X(r@I!aRL
%idh:5oLO/&%KP\Hkj-toSo5ha/=:@Nq)39XN6(c^&)E&+kVH!DM2nj)MTERmjGgqHB"k8CGl5O)"&=NBJ,KOUZY9AtG"&SQmJ#L<
%l0<rekZU44ks5N6Z'1@NBDZWH:ms=7Rm3/"pQ5%W+%k#Ji8\'+-Y]G!k/)FiKZFQac/fm-$)O]3b]f&u5Bmg`AG"'cDK:\s(#^h+
%K7>i=1]2G1Idm<-HX%naJUHR90@L[TIBOG%rX4SNAGU@1]kDe*ReXRYo3Z=oT4W(:qrWBPJ\U-AAN#RdVZ.ugZdgdWOGBG:hQp/\
%d%3t[&0u,XB$q$2./#OTX-bo$JV,9bG']gtb9gpsE0#7+_gCQU/fKE-QG\(:==tNe=g:t*miAg=dBC%O^)'R#K3luI"uB1Ani&^Z
%nQRup=ZhN8U29":qT\L$S"K`[[e&B`r(+Qtq<t\Zh>-m8gALkmIf;Dns8>#)IERt&bg1e%kJ+bpHGgJ)NnO%A8^>Y0VmKngjb9i4
%RIC'tGCJ]OjT*)Kq_tP*5u1:FD2?!]??GPa'b^sn]Pa6k`s9;i7SeoA+*t8-rqSQg9qtbX_gk8q+"QW-]($.T(,^=jjb%FcZ9b[7
%Et=m`gGeMkf%T!<a=2D3ke#^qp5LS5Sugn`9_KfIo.o"39_P)2PC8X]hTj;Tdoe#m&cH=DX6].IL_BATE5Y5jh#,&DRsKRjX&h4(
%Y1A'r>^KdAS&?Oq4B+-0-@GDeDfUf-R%[G@d%pUs>(cg$Y8hZ[=F9+^b;:Z#'I%Q7!`$*],t/K,S/$t-UtU0@8SG<&QQ`g&I\CHI
%qNAsGHg_*7s6;j_qBZ25QV>\K^6cigL[(!Ln]f6I'-kEO#8=fFA(ln,]^R[0]Z^a:o>8\`n7'ZN0D!'(^Z]jGbX)[j<Y^A=?fm'/
%.F(3AKpStW?7$K\I@i]qW@8r)XQ4)m.nF$i!2i#QrMIo1pc`oM:.<"XG8Z(eIb9=?#6[`t_^<#YW+#\0M<U[Ag)i6Ch;3PLD4``F
%]jl$XrF==?k;D;U1T\-.S77+/mET_N,c9gFNo/ee9]#0dgb6r@Xu/S\EW-*<n+?g\0?A;8oVMB4QR8Q+na'bZY#W\1k:`h1Y<8WE
%HejtUiRqE+]CMjH,aeD^ffctrZLXU;EA`[P2*'4X6A('&Xcc!!]fi7LHC<;u:[d=]kirnD-@+29r!B(e^R,-$*U/%!A74+:o,E`V
%Ak+9@$uNF.[/"3Bs$h`$&Lo$,\F_di?K/m0L5FcCn.I-E0MZ/(`WHfqh-8dmE8\[U&\O4sVc!!6`+b4#f.j-F'9M@!N#BcPB"j;!
%I"OJ7(E2FYN2b'DB5Pu@lPT4S`jA<L?H8Gb0kRAEdFUK<,gEA,hr1*9r/4cd-:<HAU>*mSL"=G"Q.glA8\)&'iTWgAkMSoD`C)jO
%Ni/]GoLr>9)<gInQ]tlor1n"ARt\T(0>CT3ERb84>g[52P+-7ZUkl'p2:.oVZ"\Hnc%03q.:km=;emuI:O&Ja#7Ys`,4jt+]h-rU
%3CCQ:XDdm(+\rT]g,3)@ib1)`;NuRP-RO8.#:;l&][*QqH3lUU8_WIeo;nb0'n<sgfV%,%paH]aV*Pcbr+m,P4[l'nSp8R'HK%@W
%gk9n;=)[Yu(J6nnP^)nAA:P`Y]4Z:n/tKGJ0/&kV;r7*,KnO/YpgUs=_j;`krYl;RIB\UdW#G,uI:WV@n]\Wa5EjXmrb"7;5H)Os
%1-V9!>gAh`RqHgB2F6qNDP#,ONGQmmF.?lao5&<9c-<T*Gr@T[fpmhQ.a29YkCKXY1,jX'h!]*^R\t5uFDd\qc-s6'BKC?OR[%&X
%o<JV`\_L0FEY8!aA96U`R.bo&r*K2h-Z]2*q:p1@Z\4+`BDt/NalhJ$DkN_bf>,Z/F!]tpa.,@q@KrGT0gXg5O7E'(&'1,3_5mr7
%*IWG87]EAP)k0"u1-8[mkl9<)<!r$cIl+i<d]@GPdQ9eX2qgbCl'[fRPX39Xa^*t-&C^&i^0Q$UmleI!lJJ0(XeULiH0B&7HeGj\
%IUA\%#F\buD+pC8nigtF=i0qKP>XBdDkJSE2,@Y@C\4F$qQoVS8H_cRFm"mJI$g,-nI$[4T8/H4hOn*'b.:ZZ\VJKEfRH;DkL[5h
%N*l/T@bPc"TG,Gbe!0JOI.LG]G)VuZ$fF18'CD^F)L+<i(lk+#4iBlei0c^B.ssr,,Y#k#4!%W'SI6T1+D3^Nmi'I(0,sjV3;<94
%M/?i8p;pWXqQGq4f"XW2k`U4)2\5<TK;%+fhF.:R*d0\`7WfadbskMdO,8>]640#AR-C:-Mm$3SEYJE=$MhHA:O2feD:W#1na27j
%NVCFPKn4k'V-Y3pObT2cd[8r.nNt-?]a6;0K^#Am]a%iRB](7THG<7*X4B0)op5%1Ka]d!,J=nlVr']sNIG1ihQ=uFS`:D'ZtX`E
%?6&mu3DP>LVVO7Y[o7@_3"rjRgc'Zeh`-N/jS?t'V`!]64[smDjRHGU0p<OG]jAPRl*EfjZ!H["^@Q4@PZ\XGbo]VIehMY.d4[0e
%50!H^X\V=*k;"8(^$)4SE#,PRe@VkH\@VE#'@8:VY*K:U4?S^;QE15"S`f2]_PZ']I'8(h]0>67pYQQAaZVKPccCoiLPKD.4@J++
%s-/K"=(Rg+3@FjTrNML@rA4A5M(]!G;m0rnY-[Qbm%#"R,f-5Y,c^XoT!nSL%SC=u2H+N,=>0,[T#l62.4>^N'@,;aRe_L14#p?k
%[B$=abo#9o<6UcL6Xe:'i>A>nQ(%Q'fD;7XoVA9W(@f(1>a[miHo@1#,V&[.hd"E<8'Ua>;pEt*0q0I@92)]QKVUSPT7*uF[<kn,
%Dc2rhSc;km1\F&f\#Xt*q<"!2.""jk-6#P&9-8(DLU=_5S'?55o69kMhI?;-=tG0P$GQ9JUnr=%AKK=fb4&t5"=>>Vn^q[@!=O0@
%9uMW2oU=0Nrpmi(4783f'`)%J3InjljF'7sTQnF,l+TQ0d&[&(['j#a]=sJH"kNJ%O$<DU;JS1M)KcnJd%Y54fAZ1k>^tesooLhA
%/I7/O0BY9Up<NMrK(i:_,(39=8,gggjBoql^OH,2r@Qmn(\!:>4kPgND=c(3q1b@oGROA@JQ]SieN!gk+a^Y*ZoUp03/I*qi#fRD
%$idcc&97u)U,"5JMVr!=P/%H_!Zsg!AQU!;a:cOm,(*c%Q/Tf6=]UhX+0OUZ`bkmjqLRN6i6sKtrWMriNdS>1N3De:q!ed%#g?P)
%"d1KX<+DgiX2lCgWLrc5Y;Q!%?`1j(91Y$LlXF"%]-8[:Y$#46OiJ!4/-q,LXYk?M"rM[b/u]fmpQ1?7T?'n(&-)OAI/,A^"jaV;
%;=s7<^BsgR%F$7i9-5eUCN@_:r%?[:jprL'2q86d#PkXoUK'(=M!G"]>*Lc*HS\c^:7:30$dt*#ed&W74g*N><'C0EnrEci36sO4
%IbtmVi1Vt'\'Y&I=l/`f9911kr2%HlEkD)@LXtj0Id6E20`LQU0jqM[T)7itZ`4I;YSSoLc#Q2Oo[uZD-2,]nW?AEU[.,GiTD.!T
%=O<IfhEN@:GTbKrr)YAe5A/,o@F`f$2c^btGk/3t]L[A.MXYb`YjmKmZ[cP`6fF0Qnt=Sn>>nr/I]J?DoJ@!0d"fJ%oWG1n`kEmL
%hG*Z]YNL7Lj^.W+.F@N$YiNKp;>rak4MkQJ[=4ugc&[PG:#JrZZ6QHd92S]C"Sjjj5&L6EbP3e<KQ3M)7hpUP>[ZFF9hUf3GWY<R
%.HEp_q33j7DlP+A(qltnnt^iu8XSX1FHt'66lA"ug-=g?[EhLDA218@R[SbY=@uaK-L^AoNed`Vh,LJNV>%A)KNc,u1$Uu09V>kF
%90DI/A+\CVnLVl[L:%g'Op2q6V?n0>\+QmWhpm("hri)ML7:>t<IIA`YO4L$H@<JBr$7O\hjN=WRtG-Vjk'_aK77I[s6LA!Yh8Qu
%ic8572UH3M05l"<*U=&('R=\COm:E,rK=.&.mEO&FW]r8%eF\&'0,+PTq&=;eTJplW<j[tZ'jfkZm!=GJWO'e*3S7kYm(c;olV@0
%THk&W\+I0jZY>/*FN6+N9qsXbP^4A!Q6n9<4RQktRnfP`/<#jS&KSpEdX$n8HGm/(pn2O8je@+`eVL?"9#/PLp>(:0Q5Kr"YsG(Y
%Fn,0N^g^8j^!R0-9NQW_XTLW=1KoF.k"qsOW@3c"eYcq;`j.4JPHE:36h_>g^\YZd`TV(`UM9Af:kY*YKcad4PrbnPs3Q&q(I;#b
%M5IFWcq@V'[_;RiU=jhla"n,:S3INoOM.Mod[FfpB@-!*\>0P:cg+kaW)MUK6f.up5N40@J+Z=o_`^qM3&K5dn)GV8EZoeQYn*nQ
%nC'G4&Y_peJDr_r7_M1f`u>Y!I+=qDlI`Brs3S@uX?ZGK/%7*go7ASlr5]ta:lmGO7jIbH^Y7;bCW]AH")<Anpg:6;C-[A6Mr;r)
%bF#$/4WS47&AF\6LYhq34'7iHdFN`ZIb/Cp!eFG+Lc[@?kfnOX&);g%okl\<,<rp`71@6!bd,ef'CQk,*)T,dj4(O3iRfOtF`s63
%in;PKfsKja!E+\a_QRlK8og#m[JP[h\>&XYntQ`-la8:S`r_VqH5Eqk)*'lW_Qqjsk`n*Zk?C//qsN?QDWIm,9;h@b?OeHCGPeVm
%$JjFN^g2e[F[Zf4/oI)ED!I:.[+93eL)(;f`;.2pT30ktNk"-33226SYN*^iOW.ce_c1U>S_LUsZ6X17daJ+NQhJUs6SO=[\s;pr
%]"8TXh8MDaGhX5*=J*tf]?=qYH*n%e0u$.TnFfDV(k\,A;"l,7^dAn1;3:C,.j%UbRPf!hj8D9Iq!8dp8$!X;ic+Z_7"(s1[b@jE
%dZ='6ZP4_6d$d\`(%ts.5CS;L&fc,_ojV:ea$'LD8EQIcJ-X(Z.cbHST-3HO$1@M/PB7moN3Utg3[N^r.paD0+1:aV/7mR9e*!rq
%T.tZU)kAd-C99t4K^R?k<hhKAr.Kffd;Na_lJ1MmH5D!&lSa'md(`#YHSpGI%T\SaqJerH?;tf2D9$GclQ>]J0soa4@<4>o1dSnl
%?fknf/C(<1]3r'diaXu?O<`Nba"YA9..jql&VOcHBFZOGDpJb7duAPNj/'.Q0')EQ5dbr9XkbmBk>SR=d?B@sfLA>1#OV*/IQ<iQ
%hP:lEJke/HD6dJVme*'s$H5HB`D@guj2KuJ:'IV83mu%Z##h=7n#PYO5"/*>2&c:fH?QkXaq#>IUKlRj<ADX;Df-(&l7>*'Eg.0m
%)ecUo@RZat'O.=IJW6\uicUOPfQW*JXF5.,,KNKAI=!UX7s>u@'i'`\b/`OJq`Y:#"s0`&/,et6\e(KXhpFBq^AUM)^nm7T*.37#
%M]X#`1T`b05=7@nme)U[@3gd/`1U0'Sl'8b;ocAKaO&+pX:j3A36=^h@JXr9etY_5;lAlGa(pj-h<6PU!p<R$Hns>_o%k<`2VWbe
%O*-3g]g0%>27j&\^m_kBo]F4E"BKZOqfA!s^,_-?JT'&&?;FgaI]S+O+T&A]Hh#r17dg0o@XHR(OAY+_YO<4\+.od4=7.og5<]t7
%2k$LTpO+MW=A>pXJK<=W5<`%-&eRrUqM?tkOa7sF`l_r3HJ"JUq7NBjIA9#q2**cpGr6B8!X@4c[ci>LkHdJ9Y1`Ve%*#LUKRobT
%lT1I;5E^pdrc5N;pK*3^Db99g]VFjUl2#5#e(&]!0HEg[0`$^K7gjf^='")SBVkN]6,Q"%6#!iMq7$.Q"#=,HRWmoZFK=Qi'%7\t
%[U.Fe$MI>!dt=#/dtWo<@9*fQF73W)8d9n5Bn*WoJOC:DBgYA&D8K[gYHC0sUcSq2D[s[J9cI.-nZ:ZR`s/j/>=8GU6u/t]*;M0F
%!@-EC]28TVCfpEH_RG1!"0o`;!?!kKqS^+Km..tX>0Zp]-^M\-G=ghcO_1Nc#qiP_)14?:Cg4#;$7B="IM.3nXN'W2hUEC2rE*Wh
%Stl2$O^lH!iQa"/;'hukX77AO;5dn\O,VcXC))\$826/H?B)";6iZPS4Hoj'-ldQ#b>B#6Qr2frDu?Fjo6RmG%uKCN6#b76)G?9#
%TAp&_4^m!>LNju1bpm0p0B4cJrp'7TdfVIWOEgD)n*KPCoojfH1SZOE[hFJ\;'<nt*rGol9?+^tm%;6T:1AY%a;j%7<)0S$ouuu5
%Y4M8J:VT-dPk+]Q<u1`5i5#Jf<Q&/=jQG`V0TD]_F\f=pHs#apf4&"!Y;P:VdOG)s;"bMVI?1OE\W-d1fZ!e^#X5>kOK[oHEqTLJ
%DN_10?J4,QY:"F2nYWsM?d%MG>WLn-n0,;laLC/$rj`B.6JM:C#h/.B7,r(PAJI]eSF%mcNd:E,G)VccP=DacNaKn+`DlI\dXr&B
%QMd1ClJ39SHB)>Wl)1)=+F_\qO")KdHDsQO;JK05Rj>F3"#A!`rUs%O7dALPV'<7-fh)_5;*MJ$asYabq0;G+\!0H3<]T)^n31,]
%gpg'Y=8%tYLBIO,E/j@N#P:CciHW.Fk>GI^LeB>VDD4j&m+K^WbFQUi9TfmERT,5Nhf*:Z,dCZom=]>E^ub>5,%q\LH.<PdC?($M
%*PX4MJNJDdjE:6[!:b)[*rr8jLCXB')"umA%2@43,Q*]f)_G/=8s;4dlmhqhEKo9P>i2'jcRQQMM=c*Z+=ddgCG-4We4sL8]kh#W
%mNq:sVaP$iZ5.et2A-LZ)PK;[I7)3g(0$S=0Cb?2)e?B4fb6q</70Z^mJW#`qC'D(??XM431\549DmeBr:B)tj5A9+hW]5qMbEGi
%NHek`ekR-k$JljJ\*eF6.D<2@Vf/T'6u:oY\ZpTc%1@4BQ9?<ocd?@5[ssPn0l)F:iH:e#npCop,3nE0.U1#t!4kQSf&RK=EN(5,
%lb+bin!::r\=qd>7Th]6J@T`5]J/j,_hg3Oh2AVq82uo?.E.QCF<OYDh!qA^dF$7L?nI67,g-&6*sf+`IpftFnh3u9TDec=V#\Zm
%:&=h##CTkAJgIYJlMZ<!FF<c@?enO[M6^(E_@UMW#4M(d+;6RHk,3;=Bng-2:eecu,,jT%AcKX<rJ!P@Q9+^mEoE128VUN`]R;!`
%/m-e7pADb_k,gk4/suXg_p,,EI(GF/Y?a7qp`k"IB7I9&$2N1g`jVLRj\Phk:Y,JlTYK^R#Nq7W>i%O295B(`^W\lbrCZF4pT#0?
%hnO1!J+.BBak]hnmH%!o^U&!#inqH%Y5)RE2XF4UXJYp;gVBRK^"cocBC[]1s8GpZcC[8a"T4%;6/8*]Q6-"F]A\i9^FWspVkpo^
%04^+Hs#G.Cm_9T$0DM`p[C#trEP%7[gg-JoreJtbSc>Z;Y5(^,B*EeHWjCom<d&N_\uGB$NFc_ZhqGShnXCoR4o\1No#9Knj7X;e
%=`(ASkTl0(Q4ni2KjalEHm,$8AJQK'V5FLZ8D@D-fqT<VZQMGM*%WMY/&?qaNV;2FcAK'<&F3Z;/0sOoKn[agTs0WlcScS[GP``q
%-^>obiN.=Y?9%C\'Gmni5]df\/hB+#r/V5^(//#ib]4*23?Vu=3qj#Q]TU6JqCC`,@%kqQ$nMduog$SH>m;JVBg9E(f1J;5k/.4r
%V=amo:Rfm"m-ONpO?,Qb$1&Iq9H\Q4fFI!2:5(t'GrlYK%YRjapM+=aT]NS!5d(o+JS4E?)5[_Ic][rdD`M-.>WCE=0!;9%CQ%/,
%^%rqZH2,$#qTiB(lJ:LDim(uQ^R.^".uX:P4L02G^(_C0ep?)/QdLf+`Okf$r1^V3\6Z0W*S)#G:VFSRVnX$Rno##H@@F%SX5hu5
%Gd)4t`#`^]-)hss05V^_mjocPC11h[ITg)>3nt2s($'%El$B%Q[Ihg^]I['S%;G)&nL;6&WKpc3re`$RY;@`,bL,EPB3C<42O?An
%m-Si;L^.@WjZVkfE;A^td9\FXYAGrMSF2Z.29$2nCV"c&geM-EQNrZ"jiVW419qP?f<85.Mu2_\k3;$a9&e23<jF*,b"DYNB6WIc
%#^05i#5+aVWcT7fC#uX]/,_qR(TlZ=cF,qSXf>Gg8X22cgWrJVR*KMS"cpGg#)hlcEq&Kl.gIR0SQrCe@&.0pEOZQ`8a,9_H8;!$
%agp2%B_S2:%ILj)HD,_n;$gMK,VMM\VZ/>\lkFH.cq@:L=-lf<iRR/_D.$AT:VEjtmL,$)I=>%#4^BtReSA*5==lD<]@DXUJ%ODn
%+)f&j;!gHj.HY,bF+9kt:-C>^nF9\^)885El@u^#hGX.E8;W)u$YM4gZPIos,hBJ!p3:F)@c"8aHPp>\Utc?Z?/Oi@[IP!'?>GfE
%Q]ZuFYn;gDm=Z_T7O0%3+2;&M%\$HSEZs<0Of,h7UIZVU<f[Z(2bZ&u\35^AbGAf-<q"s'dDLn#Ab71U[2@F(chF3ZK6D<aiIKfh
%O.;c+es/im>Ybk'+4a4GqY^37q8's0W2$m%P(+l7_-hYKiQhT8AlmJ;bX"H8?nQ2n9;ZgRMbG':As]g>*)+8Ua.[X!]+D!K=cGFN
%cV9g;95N$eg\^dSDX#,rF56I]R+j@E:$s_2E6V[j7eaEM?BD^a>[W6rV$_'G&jfBA;LCOgo5`i@^K24]r,]$<#RctH$qqnIpQK#o
%HV7Z\%^*\W_U[p\?dPtmHU<d#m"s]@C0spnjTTWWR9UBNf2"_B3DsA*QaKgr>$Xkh8dbI&04bd^"fZ`IGa(hF?rMAKYF"A$4$f%[
%:aL`8DXZQR9"rs:)KMZiY0+Eb3h)n.94_mg^S;bq'7t82Z[&VhLTtJLE"_21:-Zt'M<0YUHCD!TWDE@7m!NA[D.D,+52Fl4/GR&/
%mI"grlh/PX;;=p_1n0DY9lj6(mU\:TWKl=P0m0,CXBZgJD"]aKEf15.`3!/4g"=I!bLnIA\I38f<,\A:,J2RLm@Dd"B_to4Qa\%i
%(([l9#9pph[WgB[fhRh#GE*28ZTF4,8#QJN*M]sR)i5gZ]0"'hqq[H20#+Guel'-9Ni'hI:\N@LELC0j'nT*X=JaR3`;L5@NB",t
%)Y%q2\e`&^>up"3.p>*@ZIO1pW2G8Kiip=B'+]r55bc^ZLLHW^oQZWs`jsl"ZI&%^,cdcTMq$b:TTYI6NdIaXP@udqIp%i13_r8"
%o_S-=O\R=*U%J/O5Fsc6>M#:.bNE2DF1n_gNqLD;VKC8TmJ/\-gO!BtH.^;pNcCN$qk`l2hFfiXh.P6TjF/T9D<tW[dl[H/eRgDF
%<]o0Z`^?H_m.kKYR=/-1\d+o0GC6Wi#Jp_"@f?;!I\H3M##B,`LYF`u(Pe*?W*h`IIP.R@YB/HZ*8YM#/$-ZjF7kIGkG&US^Gsq%
%'$6p.\\T:L-T:qD@C]E'N_AWkj%D+GI,*Ge9:\J317KYj#DP=N>o9Z6]VHJsH*4:Ro%Dj262n.hcp.3\<sPWq``tJd;1hLqc"T$d
%L!G;9H0/q0J!SD5PkEk=f(&Q%@9m5(0C5g5PmS$LTha"ME#1,V`SIY*INs)8XS&Wjo@<D#i&l"+\8csrLn1,]Mjo\6nR7p#33)Ee
%>u[0>c^1=n6%EZ%j0e1Jjc-RQE7qA]Up$Tmqrb#DE,bEKei5-dLS#@DldYlYl2(CF;f;N%;8(Y]kB:d$CE)D1.ildgZIRgsm3,h`
%\?.lXG4%]OAcH%Vagemn.s6%'rV+]NR-&khGb]A1ITjhKS&M9&+D=[2iP^4EI5'a4o>g(jH2967AECl&<B^6o'!d.fA=IEu4l#bS
%g1%L4VsVJV0"%0N^7Yq@q:!dS=[$3(W*JCVh:9qV=ZPnW^bk.>O1d-7LKU`'Xjs!nVe)`0BjKMKFQ%`^p&+MX6>n20c`6pB9=]@h
%Gr;NYW\M6-F*tE>;HSCL20u.7cC_O(lhU5)7D7C<Fq*C_ZtZ&%Dql8uiuA9#cVhKII4j</>L/jDG.XG#2_0lG<*X>5Si^+s.t+ES
%Y6V/c>.A>7Zsm6n<pP=[*4/e!l:O.O_VV]DlccfJ-:dsq_*3?_ek8)/*KE,dFRk.+ViDYg+2B]db0uCGEgbGn\pciCG@T%tMsfW*
%][mNC<Rq,Y1WoLMaD=eNj4;\qHLNiIC^s!aea3-]eL;t[o_DJKd;JGpb^j&KJ2jNNBWn&%^Zp@f_rS5im-Wet]p'bJD3jKnZ_aSD
%5MPfWYh*_`D^40O!U[eD-F%aO@Pi*KD`3UG%hI8rf4<WIhuug=jhf?UgYO+LP;Y+4fM2#SX%6#'^7E>B+aLE4CgTFLfUN!)`k216
%c#+cr=gNd0,sEq<3NC>-h0pHt<PQlprC),o1ti[W-1#+OrCoF)oX/j2lT3<fhIl2ZU%Mp.!fj\C9g2SdZ@l[glZ><03?g:73[4BU
%UVgi@LU!'tU]&RXX$&?C6GCrB(P_pe?$.aM_63R?/gtjJpK;>B50uSP/Nr!`FhR2.Bn)cVe(R!m4s=s;D<H_?e9^m7I7+Cc1Mf::
%qTaEj1&UFdlWf6qQig\#%$(ou:8c[%/;#.KBh$ii[-;]sLZ)J/_8J\DD4oe<2\AnipDKcL:\-G$HJK*JPQr(WKqPI%_oJRgK!XhY
%3H-&`UGH-GJK>8.eRis2+J\*=ZlAcgPNY)/h:;qK>j`N$cd(3K,!9r?BmcjLFH;'&n0%6W]lo&6=.Yb@)!h.sA9dX^e&e<TdV=+%
%ir_o#BX)?[S1B'SB["R*&?<@ir=]k?[Yak-h\?>A[)lplItfH6ame=i@s7ks1BQ<a*&\MO%bKUqaj_[Q*HrlU@/tU.XfiQ,K3"tR
%)9q$Z-[Bhc%^s'W^s>'C5DX;M7i.&tkdhAo?+poGRO"e8Y6'9Yq,rJgpip^]:YPVar)o)L_\do4e%EYGj&``=qKO(HaFP3D=0p%2
%h$W3>mF'Z(-%+p^dGL"n;&4Mji[+36ZfQDDrHORrG(el:5-HW0*fb(\pmlRY4,!3>8GDh,pc-]A>9C&"NlQK1^8)\#$M\5.C(*0Z
%^U@.THR^tPg`\,e]p#8)_5p^!-?okfhiX(W/1Y&pRO,).dsgN:hVVeja>&-;kh(o?7B%*>^<36@kL_JEC3O]cE/kgqnQVgKjC97*
%1/CEO_X>P:D0YAeHY$-f>!(Z/:EkWtGHY$(W3uR/)?3lZ-#%&?hP,,+T9]NtZ1GZ",@Pd@GIMT,lOM'X-I!P[9<96=(oEXG:=[p_
%`Rs<?F>^M7f'1/"LYOpa'ALb,]Cr1UI\O9#RYu"hH6I!=n!$bukXt6m>e/!79IQeo9,mHH?9e+1T+GlaC[m^Ylc$2aIQb=g"U:BZ
%Y]uR\DQ[6]1oVsG:jNf0U9%DWMppFmGVL)LG^icW\;gC<<[2Z-gZV(1iRHT0+;<P2<+-]^YKRZ903,^#PjsFpC875rpQKaqL37Ls
%BfT1*F"af#h3CWj#Su5h51CWIppBsNVgSJ37!W*t(F"Dg?,W"/)8J)oF"gioQc7E]Z7\7WDT.t;j`'4(m0SjJc8/%?Ye"mq&?'N5
%b?>!4)<#Zp=/T!'bdo-FNQ%e)j5HYoBJ/\T7(V?h5s/4NIR+$%Z-@n^*XbW1(\b1Z]=cQ!D]`i!bH8Bn_faJ=_%'>.;[9uDi1.HS
%bEk=ifeATT)@2`og($U'oL)X'[jV^;\YWC`]+qhLYGi_;&>lbB;IE!iRLeAZMotDk<sm^r]K>L,+DF>L%A6g@V+^'[NNCi*1dY*Y
%;UC=oNa_AY8#^WJCH:DchfNiV$%I1B=ND&@L++]b"nEtPPM*6*D-a"Ll1j=CqMA\AY.6)sn.cVnfh&AeWSQ::L$3Q(CU<SZr'7&<
%>VY.u8Vm's0Ih&r>f-GQ$#FSX$qKO`JVj@olB/:i:P8o97X?]-MlGlYWk*ZSP1I"*`Iq2O5Mb$h4mp7Hol<9g?S!;<M]@d-&=;jh
%")q-!-@PQo3uE!p.^)KL*uZA?8i,2W[tT!BVQ,>lKs29\C8(,l@.TOR#r0=SksmXZOV"Z*19k`+IP,FV?1&=S.AG4T5_?%PiIn0o
%N-!HB\s)eFX/KtL'c-GZgOil\eRT?;J[b`1p)&E+g6#!>CpVc$L_gTuK@eluPGX!*[e-c7IY;.=L@>g5io@*YS>gf]\D.B:ldFH\
%]#8EeVY"bMNR@@PS&:LfNXXU'gP\9;YXIZ_,#9*3ZA6h,p0#rt.mTr2'OFsunWSaH;'oF/:`/o1<66C9X_VB;hiP`^U+'qdNfZp4
%h"FHO^DPTE>6LPt$Wm0rC9On<_d'*DU`FubDHrX6f/l1!%%l,IH_#kRWeNHdj"[-AAp\,IC%MgjR*NciSdP_-q]i[1oo8&Km-1hf
%.bR[Dqr$VPT!`_H2N<K!QZB-RrPqM\??eM%XW-$2$q3uufpC^;,I8/t-t]k\=uj9JBstlPqJOB::3t/Ijtb-.`YAc.TVfnlQXtLJ
%Z;I&/2:KaX.lji!gFMg#AnTXSmSqpG;n+$mBD'egr:%;E`l"+)7CNLa`es?X8M^$<A6gfuFZEH]Y<9="_HA5W)"Q8b+^fiT3c$CQ
%2"muP!]Zk3niVrU=2D$,RH_+gGoITGH3mgRC,*B-/b.n'X)Z';XWVV4*)]HN*puNR>A5f[IO3Ln<nh_DnL1i1BHAj)Ph5;9UWU`^
%Yq![EF@I$ag?6[gYa'r-Plu0L<oWc#_=b5DT<<>;VT#&Z[YAEUNf1!4RW[_#Ya2Z"I"kE?2,>j10=PR:0`!0LahYFB1\gU4U-ilR
%R>1+)SI<A5:./W]<b`V0A,4"m%N:Us[2cb)>TI4Gdu_N[8dS,f)G1\lbecj5,1GK3j'8l*rHd&M(?#akL7et3mQ)sbkau\-W:O<i
%EuT=DP7E%tfo4]IFYJBPoOd4;`psZ_;<*hj#P.hF0ZGA(W>Q%qoC(B1Ju)Z2Dg-"u\MuprNP8;e+mO\Y],!]3)%+kfN>Ji2)X&Q<
%0'cU%=.JD9p%V3>DYuLB>pFcCXgqu2GPO[Q:7,I2`'H6jIZps'5o`jJ1.-bEK2R#X2;o+%HTBAe$,O)4Y#u>YbXuG&j9V<r/R$:\
%6qLGdb]mpH=KKQdE$%&>eY7eSOUV!d]=fX&iVM(7<G8&O\nEMjd7&.AerkMU)2W+WmHL!hbT;pBlq`9[,_XSQ]DKtAS:WbNjt0*%
%`nU$iC@)Q6cGRqps+hIE%bmBgb;Sj/Iqe?`Je^!g3?jd*l-`VpZ!UaqD)-Bd3.5eSDu6uaU*IZs6jhsgP]Ii<G@98mK,X7%@7Tn.
%WfYRI-DVB4#t)2jVH`WR9eI+B)iFqH95p(/-KtV+UR2:FS;s[NL",)LMr:*PnYjLSg4f-CTq?1u_n#H5qq#F,VCm#XSDu.W9$c]0
%g"YLZr$7]OPK:b$\lp`C5amSXR@@5I"<qcMcd1VAh8*7ZTY('m(4s'+J"M]B?CkU7D6<2QWNk&:dCWFQR$/0@b3u(Be0=a/C@Q:M
%5sc&C[6SQ6I"&7@VQ-Q-_RblE"jK`U,\\sXEsoH!B1q]j8hc5\>8eq?&k<W*X8#75omHS&1nLQ:c"_$n#,1K8$Z+LAP3'$-M5uPn
%_BpeM/MuodW)00>Cu6c5OB.-jK:Psn'&'0<SFSa;&AXj<,jXFTjLVV&]j]%+bplepdK&ZqAk(H/)B5Roo(tfX0In6\.RT6]^87Tb
%Q+WH)/FQDX+74^YIM3BU;0q0G%3/#@)u<tU8?.>!:QISPC@>?/6Iqaj(iE,/)TR3i&)E6,0UAT4m>7H1;q:L/*i#&W.5"Rke#c0h
%=`uBa<2gIVfNN1*\%h"J_u4<mPAUo&\0\PZfIF,5[^^deaQ;2Ci\V_ZC9Cd]<Ztji]bE[o/mMpbTo/fd8E\6/7W&W,Gp[`;lARL_
%n_s[qdm2S3lZ`>fnBTnNUTInt;%R700[Vie6f=T?N]->1<b3<b%;sobqI*J[?oBL:-3L9j*[AR@7Wf;:$K%6L=&2QGRPh^jM*',6
%nEu#(@a@l8A"/8*$]niKrGL[Dn\SVo).^)0j^RD%Q,nL^@66I,FB#n&q#P?dDS7tOP#bAp`54>A)W3%;dZ5EW'\b`WM)pN/SCh*!
%X:FgIn`%*&%5VfWRESrqLZRkmL:2E@e:I;"B#^pdV`3s]B[P\V:2Cu\1%-SYI_:j^:5U^&8qLCEF;m;BK%mei$CqLbS"#h1Gf,5Z
%Y4#G!U\%@lE8\u$[W*Mc==5Xgg$D67K2hKE&g91h%"2/R>0+(7<](Ig0[b5$NR[gTB$=lOMS<EK+.eRj4_o1eWGThK?>b\bq7/oZ
%A-^qZ.i^Pb&gme\#2"@T98?TFWl'OMZk!mD=q&%lZ&QpCA$`aRWl6m!1/:fuIa]!</R]Y<^%g14[Br_k48cWHPR0Z;h_0TjD`1O?
%k9NQ,$n78O!XRgaLW-$BdJWQ(1KO_*\%A#VAD6dWC,(DGiq/[b1l.'pphdU4Dhc9+.'&e>>AA\2<>X`QqXI"eR#BpP<$ST5^D2]M
%,O-DC5?kn[0HQH.8H!QDA`JSmW.3N-#JJ6]6J-=&SpB+mYE.#PmC]ekdPX8Gf:n=T5^<gu8uYaIZMPGR((A-?EE[AP-'AS'C1urm
%[ZnsU,90(;Mi0cZ,ap<^$;/dWO`iWXY%*qAQ$lAs23,`^L<@Z<\bb_B11[.X.D<A8EYD#!lHMpJWCr4q0r;.3V@l]BDXGE!D4I+S
%M9qd4k*7Q]duEbceLbU/e5?.F(jgP1+G!kIfKST>2DRpoZn#GL-'+6+]>LjMZMfcqAX%+3g%&90+^B'd=42R(pq`@PVjZJZDGK$&
%bOhn:fb.g0eEp)d4C!hH;mjES+E)@r8I1K<eIa8L%O/?]DPHRTDM8jm*`:%gd\ZW+N]SeiCK$,6MhTAb@(?7OL@<P$ci#UJ>J=_6
%?9_^fXPtf?)b4?92I7peqct\XRiUM5=[ao82fdCngL'F+d?=Gn-5jRRfJ/]2l<ksH<YU=#7_2p6&Pj5'Z?fPMKr7<Ha@n;V%RIk&
%@4i:P[+C2QY\fkb1hsK3gY1oM0i=[uAsV>iTdLa/rI]cB]l:^#I4)+@U=G/$>ZcU*4#0MTHOT.1g2q3t.;#<(4<Sk4_+s+pO?q[#
%,9.Z(i]k_AY4MVeiAFhZbdr4I>Y.q!lC.%W"4e4jUOU^jNN=ilalZN-FDTXhf`sCLiFDI><E0QuWR@fOUun8[>FB`B]g->2@nMA'
%J-UZFa3""deD]B;3fW+.dm>=DAuibl7f7)=QKi#m*'nRMg<RW\'%0ZJ9P(WodOS8Gb_L^1pLe/AUT)/t65!"jHRE[4%J&,=(t3s;
%_7*&Ts6:L1H1!\!UiN\lpa=^T]8?\D^D[O."B7"r&,,NpCh`5Acf2iS-CAYheb\*A+Hsqi'f&E&!US%,?An?1)e$*&Xlp$SNT)R2
%&/^`AJRfc"h2cDAU7o&o_,8C&=Cf-u;/-%&Ad^HT683DN%e`NhBN*Q'IPJOD)^5F;_3+'XV^^[>>c:hR'*l-i:r1*H0Q,H;<h65?
%7pD9ms"Go"E!$O7p:')c!Th:s[)1\UhU:8o!_UoY3!T+uR<qb]fHQ/JaAF=ATr$C=.XG"ME[^C:Zt<oN6Yd<&8&>mL)R1VLZeX'\
%nqD4H-QS^=Bm%uVG.GiZg;58aJ$!E[=5KoU1VpsleL>4,ZDVmIr1Ou]PWDg5:iauN/^[`uSfIi2CqoQsgn#a?6`.ET[krC%oHYM3
%%*lE8%S#f^Z7VgVIOrlu,rVUDe'X?TIT19lZ%YWfjA@3>G['<RTV8=HH9#7dpEQ;h.kY2cVmWGh6D>3$G51EtVE&+Kh;^!s\)HNQ
%(rPLgJ?NWT#?-$R611qj5WG>u*]e"E9V8pI=.//97o'DC"JeAGO?6?a18GXa^mmmCc,B3p5*j>l:A_#C?nd5rWEFQ<'Q7_<&i$6[
%b?;SCo`6,;^(JuZh?n/&#e(bOT_>M,:KJXSB9lc'dl8EXqFpU+Dej/nf[N1=;D)i,5ElA?V['AYR`5lak&6as[B1erh>ha^jhqe\
%\-65Z'hhVo3ru=1f\at:2P]U+BoIhT)G$[5.W7G&$[AB[*g[<XC@_u^#[1J8=YWqMno-apm.L5-LB)m3<kF7^6<=Po_h7iQPeQgp
%0G5;K#bD0<gXQd9P.PjNUNEg.ol@]GL$WT)5P*OBO(;]MHI7/8-^"@:)&kYUaFgs^7Ht4R\@/kjUD31FV.0?X<>1^Y0hXD]@^c4R
%3c8]</?u"-33`8\O"uplgT?f94<Nm**;'N5]:(->0<BJc.OVVnC=QE>b?K?t:Z#-Xl![/I$n9!K04`F2C%e[\[sQ&F;5WGnjPnYf
%H6tM*PN0nd#X_W:WD#C&"<Orf8i/H8,$*>OL9_$'XtV8)7a3(*10R4E(D:1*K7,ZBb!rDn0V-dF@_h!1`P1s=R@/DbG$[KEB4?j:
%:989ndVJR`5?uC>7O;?W0CZu*"u:&YAb@0G]$eo4g[4@r>sEM(Lqt'KUNa44'Tc<tg]hg@aTSF-l2E:<7(Zj2%por[9uE,DG8fhC
%<c(Fkq8ta7g%2Vq&fZMjqXeSUFl9GY:)`?S%P(ht<9(naA<q9,`Ye:*@+;R-nkH6WWg`Zj;J:B_n82>-KS!4cinbg3H&*R!KTqT+
%?q\=.\ia)>:ep`[U<9Y[Ch=a?/iL_K)'UQ-bqW;f7eDqHeMA_#L9A$%4[dYZp>Y4-D]N%O:/^i+Fhi.l4Yd0[#MR/EL]sqlq\3N"
%UWgm;;J*[$baT`-\m12k%`/7o3H_[CQnF`V.\nZTP2!C[XbC>NrZ_Vf>HSn?]c>dSL^`:^V#1LdBa#.>onXABj*G=E3f8V%`]%Cs
%pZDjnSLq.Hqq=2gFb)k8[VfRWdugiL7PqQ(Alk4c-I9+;[5pbTbNd'Ik?5/Bg7hc_m)!6+n`f'?2JMr)nQrYGGd[I4@MU2*ipoNf
%Eg;?CTsXmB^j0W)bH4Dgn%RKA^b#:Va@u_!kC$s[a8_0DjqZUf8+Xj.l?rT<$^ILK4?0nuK6@:TZcl*(DZ$3H:)%X=.:XUjfYaOI
%>'p$h.M#=GIFSC5Zl@7r5?]rM_])nJ-gtU#%3N=.e+q'*a7F$Qg)p1=T\27b9g(]6?sr08Nl;MNCVtUQ0]$U]FDRCnFam1LlXL+p
%=Cus5:>[$TWIIIZCDJm9(d%Hfd3X0k.C/SqNgHE%hGa:I=k7n'/aJUJpuYWT=&o>E+uEBthu<khaRGa^0@qQ1!$^9GFjt[p"l]hP
%rl$6,aVF:or>>*&^,(ghg%k,/i4.]8I#T\&@ID[<+2!gSf>i/^RkB,=Peo1Q7:^[Nl[SrT\H"Vti-6VJcG&QqR.J2[H^*8o.pVF(
%(@#'nGMHJ3&NOh.Is$9X:Z7dg-..$qYUE,&LbB_`3E6Ur6t-iGh_WL0A&^_UCKOT$UGC02l;^-(`@E,URUO^E,fm]UU+5s+@R<&l
%Z;F%&,_Sce?KO6iJH7M-j7)0M5'j=TM$Us%$%f?S:s)Xe;,O'X,0Dm,O"(d[>;/WG&B70cN`G>_Jg-#b,VE#YUT1E4:mL(9ZDn8A
%+oj,jL*<V\Qme`F<+MrK1'56n.4X>\!0[C!0-cF6!Xb6&<MZRh,$%s]b(r1!$EI$LR4^dWT6q=UCr<*l;+=Sh+1YS;@F5&gU5Ar(
%:o".(bm=[<U(Thr-8/4s.7dEg%BM$0;+VOJlY;/O/4/#<0-XL%:8f?edj9icP_Xt.P11m)q2!fC!U(Z3&4@dK'V`77P'%.0<[Goi
%!KgCA4?NiN3RO!9&1!1D,T\doQNSCaWBA$W?jnFQ5'jc@i&i!RQW+>C&1Ol?Q/eU?!,;TiTMf<"$c]Mt3MSuRQ4pCDJT*rO+@HB6
%UiL*Md@sJ<&^$?Y;O!Fm'HE/E-'efm`@/p781,sU(KlI/5[eIDOeSA'M?o(jJFX4.7-&UpQ@UJ5%0VMuH@Z<8J6^174>.mR!<aNq
%C/^Y<80U!!NO"L6<!dZ8;+(b$'U]4/e5p8KWu9b<P6$8[Z6\'kTU.bLKjC?B'%(Wf8AWIe:]QdG4=W:\>>[iA-a4/^#oj1OUI#%'
%dUV&d:(Zb#&[n0O21e[B6rS>56,p1&R4)F(4G\m1?LRn>0i\Wc(m\tgghh]IL4eTr&Bk4k*8TV);\2g"7G)I_K%PVq=lDdcN%>Hl
%>:/&d"S4#_#qlOSi)Sh]kYP7@,a9!5,fr,UjDs&-!p^cHLf%;??@`)eSjgd=f[>@FCkEXk)2g5bkGWpN!ORZJ'Pe=]-9MH8<93Wi
%A5fYHj^=?uSeB09]Kl;/Jg.4.)=_p:j%uad,_na,?SN`tf-H8bH5<X@:f0LEaA%r]6-XXb#D3eXa:G]j^dR'!F43R[T"jGkjNfss
%M]r/GQKXbO1u*a0JO?l%%PY[D+B(Qa_[[IsR<-9]qf-!]M2Xo3coPK&i^Xi2!K7PE=-"];@H;0pO+MN5h*XIT`0?37N^0bX*T5m3
%7i4bW]V`@>JX^770U$;kKpC%R&<29i!mZ=8<#/V=N6"&qBVAs&!Ri8A%PY[`SJA`8608S:$n'9(Q^hG;eO7Y%-pbC(&Ije2FrQ`h
%YLNj;U(e)i$e:)!JQY"!AXsJp@?*3*_=mFK7\UG]1>cJ=ncJo;d:NVU!TOdR(%6#/)"2=GPG&%=+,5!W'Sp56"-;tY`39EHQP1\?
%@ohaJ]XM<Z]XP^ph@C2X(cn2.!HYEc$+?2hi;Jb]2]22qGn2VH?rY-kDhH)TDhFShPqa`hI<*/KLd4@GSG+eK"!/[0#>1EZB$nSE
%)`G]_)sl_c&:oJ-_hjm;CJDnoms09QU0I#?<5-2H?c[PLA46bVa'!>5a&m84Sc"/VK,%?ElbO&$&8I30T#GYS&/c;Q!@U387cZS"
%Ifsk7Ifsu#hgo:UCWC6$!SAoD$XcMX6NBJWhr*(h'*-568!Xh.,VXh^750>*(lJu^,`#qq,S.!@\.l_$o9/;Q!XD!rMdFiB"<0<Q
%"<0NOKHUi'&F@MD0Pb)L+]q-gS5Tb)Eo5m0YET./)][o>j)VB_j)VB_0%N?kW[]Pa#)&(s#9u>`#FNFr0Z#;+P0<H,Ej1,TEj4M4
%EZ!eTo%]h\$*tF+Oor`6WF/-'+GTO&`O&u$#dA?2;SCou2LJa@2Vc8U8VJE]*8;$4I2U6m`WZC/)R9ds/IBM.iN(n&KFJofKFK#e
%`"7]flbhC\5\k(D>@L-X;\DHLhr<?SPQ[;13!R6>aGQ&g/E@WZ+k(;%8s">>X:(U=K0sY\WLcN:O>okj!FLC$NPg'n"4"cl_=0l;
%5Sc.0;@3GW/'3HZ'ln%lZ0EBthFeI^$Xi%@CFk8&,6Y=9%PVQ$a"47o/+>"1MY?^rh*fOjJ<;-UT`HVGQ3n,->:e0`AI4<3WsL=]
%V&8-K8h);Y8:mX>eKDA"+rNJXYo#e?3<^t'W/t"M5S:sdbE1ndF<b;X.^6hM(!?rmmGZH=;C4ch"WE8;XE2H.D1oSTnB;G7;H-33
%);LH7!\8dH$&gDceq=Z:'*r%g'U$:cP,qEE3@o.M:m<rYU-fM-;G.$.W0S'"6rV=F6\V[07\Ud$7Y<QDQAu1cE"#o>bcS\WgUrk`
%Oe^Cq!aQbf#n(05/%&;8<j[P&_NHIo=BDccE2b=L2%*8V<n3mMd6&$LK<jJ>'$MQ(7Wq+>/h#+cem^cEMcUeq,Ie*hbCQg:_J?Z5
%c;8U9&BeDn-X!5N/4o%[`=uEl8@N=_/rMfT@&Ed:QSqt]`$L4,KuR4/dj\%$UnL,]">cts-a?$m<pWE`BTb1bX_N\(-=djR+6kXR
%Ks@Et>=sqP9G,0;jQKnrqCINAEeVH<b"s*iQ't:sck,lU6[]`s[j\a]AI+N"1ionU8_(o%@##4I:oY.O&r!cGEg_QM8)T-e9_(c^
%YNXDNF]L6$"7meEe5G$X;nOY^,M8\NF-_`LYgR;i%9-sM0uK83c\Y#3#.$_KTMRpQFg`KC#kWC?R'i_>9,:tsaoDO!g8n[##(pJ@
%1IG^sofFiG%-,\Wb918.<)MG'F(90`\TZO05##R5omJfc`aCOl31'sD&P,/7@$MAd9$4;):uG7eQBao^P%0*f,`*7@!uWdQ.d+f1
%K\99;b(a<5c]L4cj8T\9@,Vsc)Zd2\#3m^#@9>UVcqTj4f41)<'hGb8ejcq0b+Q,A6=<-E'N0]/E]&p\)Q,Pb.\sjJ.btROp_nNC
%[ek(K0'>V=<f6u0D_DCJmY"_Y+7Y5!1`VF]C.iIc?ifSaW*LecOXER>)/G/),sH>`@Y:WSn1]L9IP_]1JWU'O7L./+4DCi+!=tNc
%F+Y4/rF+4c$g_8iOEiV440dMA!1Sh;M4j.7W*BJk#Rnn_U2pPN>b/fr4jN$FJ8Cc]n6#=8YXsNC<otDV`$kf3AIP8%i1(b1aB2"J
%?@fr[5TC"iJU:ZKP/`,'oLUgj"@bWqCkIP4JGE#@1e4<l15;B2nKWDkQo-a(kQpNY./5EL*ltk,pdR],*)I))+:me-,>L7,Pbhoj
%&Wj5hYps0)F]KdNF$rnS4de85O`O.E!@,IJW:WPeh#8L`Wt?k8!Z2!%=r*^K8W!]6;=-Ai3$I2t)SfJEO#!](U#d%8(JFn-W`F8p
%$!-TkJ9MJ,KbC.#7XZm3`or"S^i7.VRQO4t.!SpO-6"3?L(KVM_@o7=F9.S8n[&`Qa(ceHXQgkQ0sGn'+MfY#:3OP=dM.""l@^s,
%`^TW0&>+j#O"MR9kqX=CN+7BW!OaR4_6GWI[_A.D3"LKmTjl)')c7[_!F'H?JDmYrmU?GfcbF!o[N"J6%AP?fmSq.+-2S[6*O(SW
%"ILu"&k.<afh%M>Z^,."<u)Wp>#BQ\S(J*s'5/W3=U.%(%.Mu6jiL(V5r'\t%pc8m=2HL`*6+6F9B/%V4ika>L_@&c6rb@LYQ,T%
%T+EF2$+VmO<`L%_JeE]W['5/PAJI9dj%'pf)1eRh]H*KHjFiC3IF7NhAlUf@]G;Y:OD&e>=TcTM<iR<0r2-L>iH>P0ajr/,6%[/q
%1^&?!]a,5E-YA#ObOCMqe(b//NCq*3Rll$a%,ZiQO=:O)-6RtO+uslO/#$3]K#M&R=/@X46QEX\`+2G9;6UbX$KDaeiruHdN_9p.
%.@$YoW%C:th$8B7/eK::<>lYrqK"s,!mm&4nN`?!XceAa5s1*;<D(J3JiFL4.;<%=G^(m)F'lBZaWW?0]j28H8'<a;*(j%)_6ig"
%G1dMHn6G*hYj7Mr"6Pc/fiJe33P4Ph+D+,qQ$X#faDdOFZ*,F/8$^e40IFWF`+2FN4?]b\@jk:a?=^,e2K:AAQj(rVM^'IN4,4b`
%Gn3*W:?U`#ca#ecA[$JC';X.j%%ee7FMW$!r%!kHO:e#%Fo^G("j1eTXL`roZcT_#)AYBlYXSiO#b5Q3D!E/%NaiMV0KEAoUH%5C
%0t?WB?GZ/*>=,e!7M'tM!FidbNO]33QmDSs?UtgP+e8*<O8DN%@gKQ2/TAVlJ8dHo>$H"q)1`a%"me9(=/O/^_dV5gRjTI0QXsY%
%*%Z46?2Pe\8&B;>*Jr=O"ripLdk[h=38ng*,feF)8.[D)#8WhKNklJDM:Tp@5R7=++E?a9=<u4:%N^HA!b72Dgb=ZqlrKc<e3*Ih
%r#^+u?k>VmMQAd&_=AGq@FANf)$Pi7#pq>s-[6PJb.n8C&0;sX:(pSOm&(u%n<!!EUK[k"IL'pI8jX@E?NcR8_C9fA5`ua6Gq(jE
%E]K7=p?Z4^/orL_&gC_?,s<=UA'%d036P?bb;i]CG!@\gCB_n_+PT%ZA29;LZC"6,9jiPAW8'u,CQ<elG2Rr#kB;n21[K+7s&T-n
%J!)H%nm,O),Q9%6fm?7O/H:"QTt;V7"fHrX;8f_ICCq=cciA.F@mSFT4c%#FSApI,jNY?YgIE]S,(b"?H"-de/Q[L5_6-0+Js0RG
%qpYh>]oiL!2C#4IR_]u3@jHpsiG"s8aYY^Z3#-[J>3nTSA8-IHK=Hr.B]-d:$-+MrES/<bp$W/H.3g]a!+Kf$@BIA5*HIOa>>ZE%
%D2)*2c[e[GXSO?BC*[H3_$[<i@>cRe9ndNUm%5?QE6'5S3dkh8@0P@K!Q##(7*d_u/k34R7V!`^*Gf+8)CtS6c_*=$AO%q\BQF31
%7kQX&"gWBbd*+;A.?Ush^gj(+?r3e+6?\Kk)OX5Ao``37/BLeEM56qB:KUcH!6Ypp(d.=FjFrRB@RhdGiC`E,JH[:7bCl'ge1)A'
%FojAW,#FBRPt&Or2C$:bW'Yg7=L;+\TFgA%k1VIJZsc7[XF=@dDSaVm@0qud1IjerZln#"bOP^)O'j]D!hNg$'9Ye#!MNM/n2.e#
%=MePm+:UJ:TNJ!`Vb8Bi&b@GFm!':-:cQkn,c\X`;?OS;<C2G2VQ*ViE=F*^F!<<SV!eO)CE;#7>nrD>Gtd?8HE`6K%kD&K-1&IE
%CkOW9_UT9lW*3g`\4n6#!;&XO'jB7E*,@ES!3$N*df'cAZW/RZVh(C`U=HA3,%MaUVAWX=$7f[Z9.hLPW)c#$#M\.q(5n0U/FAmZ
%QjpHk741mR*T-o#M=?SF=u"U)n:ZX^=dkiN\8$kdiDEN"Roa:L7(RM/XKGs9S-S_oOspuYF@:kNZ#Z)^,,cl%Z\u3>d0pTKi&GQ$
%iiiQHI#h\$WXPA[DB,&jMZq,DP1;4DQBB)AP6g<0.ZCZl*G]kYJfR@G=MS!L>*n2YR:ZmZ6<S&k=mUFQ<Xfg?3s9jl_'k\^a9Vp_
%=EtN;^I$.30jr249U,e>">^'6,#*M'%%+8Q"+d2J;@Id_/mAU+1_"OX>_\&C>nEf(MN%V;,#8Y0YY_/jXs0I:fc6(j[%Q&;-'N4C
%%f>'bam+Wb+^%M#8b,OfI+E$Bjr"^L:H=Di##q\VjXu_!:C1qD+R4hC!@Xc0'=)28,PhW`,ghWLM):o13(_:S.H4eO9?&9O>"Tcs
%!,a]rRuq^KZW&Ch`icJ[.^<WXp3t,l-0-coPA&u&BIf,LOEOMU`<s<f^4Zh3-]HuWTRc3N<7#%.A<HN,_!I5LG-VtDOQL*G\nDIB
%S505lCu0_+MAh$tn<0m,`gMs6$S1X@H@?4@Q,POj,#FO<m.M5X046epTg"PJ'Yo5t"L,]WQ6]:g\7;!kc!%Ac#&_LG:/cDC$8<Y4
%:YchYkWn,75S9K'Gmbtj<^S-*RR2;soLBYDD33,5Vd9^S'/jWi+C*ksiX?N20/l=M4hN>*l$66JFPn]C)Td9JOHNNt@XDZ]U)>2U
%K9Zq_IKiORMIhVfOJHMILdVe'1DMI1?u$lVENN_dF9W)idchT<Y^lju8-"rpC>NtZ4Gcd7d^r0^'IeUm5pQ:<bo-c&.N-pnF5q6*
%</SX=!+T"l'Q!2lV;]p_0J$K!W:$I`!=UbAka6WuLZD2iLXeY)-;h8[IW:"FTtm[)=\o*,n\J6IR0k!N(b.[/A?knT>!aQTats1?
%,7mb4:l#.mVJe<Vf46FUnRKNEXC)_Q=NE32Cb>kLN@R+FLNG?!o3F3Q,&:=a/;^U<K,kDu,tSCBUR]9%eFkYnSI3[L@@(1fMBjs1
%HJf*DdR484h&qBi/30QH,)[X;<;/uGQeiP[2HM5s$Bn'.'@hi"R<\'a+g]pi'<J-m+9n?0^uH_Ud?$X*>7rW5UnF2C(g(L;p7hs=
%hNi_Zo-c#g@4G<N5].Yea!0_D8>RBs_L<kD(gmZN@-7[4;C]Re:.AfrZZ5UF.LCWeVr2Ho'k+^:Mj=S#0?IaJn2CoKW=CB9gfSX)
%j=/Le<u?dAAk')8ar&c9W7V,6(0An/iF(2r7#@Y[PZ$)4h:b,GR7?GD_7;9[<fQVb!s7X^NTbO22d`d;*)nj8('o/##.P,<8A_u/
%BFY+^#al3M(O:&27PDgZ+-7Y?C55V8*jIdljOP'.Umk+-SlYqM,7lA8dlmI<-O?*]$gp[0Ba-UfF93EkB'?K)'a]P!jG\3aUi@GD
%QSP<qiP\I4&2qr2F,5GrV0bWL9uabqf!5S<&Jtp=H4nF"3T/sV/r&:L$Xb(S$SknI\)M8fGmK1kP'/jZ1W/oW.m&>^:;AP&@n?mn
%n"=):L-RR/"At%YS"]6eml[:mK-p\jQ*A&e+E:qo;@]!W-l<tb5T9_h)eH'YNl+mS;6_&F<:nRK0\C'Xnk$,TiYNK'%lMX7"'2Pd
%"e:ZcBgESZLr*Z6.4:7HKS;ZV*WZ\/LhQN,#dST=a@W2$JLhY5=fY,Mj%+q34ih:#\HC*tn6EeERN`I\4&Z5MVTod=OX!F!Am.;I
%gW`\QYre=eZ'O!s\VJ5d8>.G0Y7Fb?Ms<la&;:Cu:D+P^$T)m)=dqiIAAs/Qr?]R/kFP'O^_+YMGRAsTK-1aKLLC[*#7_(g%_8Re
%eff-_ZGM\\+>1f^ctQLaYY%s5Wo?0j<["'P7PgVs-&dgD]Sd(?F?HS1)bap5aFSLa/BpN/!QgXOL4BU8/%-s0YQ@813f.`5Ul=/i
%_'s'mWOJ,5]jTD0#\KN.JLFLG)o*oHYa(,7Rjo_9Z-IR?NQYAh_VtG"$p?2YZD(fN*MJE,L?AO"P47O__a8lg<HhP-/3k&<OEgY-
%$hW1'fV!HI/\T)DCVbmbOCXBo'6I?bH]d1=X4A^%]qnT5'73$BkF-(i-(-_3F;M75reINS-SE.8o6Al_iW'Web)0rAT8Vdo`sKXQ
%1hqH0?u-50Lg(aj,aEPE6qbGND&BfgZu:.-NPq\MKd7]a(i.qE14g*&`J[bQ)rAdE9VM^pObt-l+i=IQ+"KCFFI.$Rjjdq*:ci+H
%hGB-U&JR/g#%]$4=>pfuk=/D)0QK$OiAeh?Ph_,;\Nlr1`&i`OGDs'R8+*k'D'i?s,p#b'/;\h[;i.jC=07;"lJX#3'EqLF0=M>n
%==lY8G0EC:b'4?2/$<HG%UdhuBa>Cf-%_+iZpK<i8h9PQS4+\2'oD0@Foi*DBnYGGjlj*?^:<(%.rfLVgE;<&"`#t4JW^cK2],cD
%,Xud(M-U3R`R4<Q_I=*oOgFKZ&b&5@A1kN%Q(cS4d4;9d#E9j9op&_8M;/W7Eh)'>^#!p(CI9;",jD_r-HiSRiUG5%dnmYeHBsG>
%->?s97:=i@8P2M6fG4W"5/7ASTImir_!UB,mju@7)%=(;=LB]Q,h#[#EeB%d;>ZB/k/?1%9-pW..$7+AnemL&XVE=]):%4kL3j?R
%H#7eD%$"aO\lfbH%$n.oN&do8D_0/mX#&,>K/o(N]^(O"/?g/pMS/3om9BfX`FHh@i$eMDXr%O)N"sp+</meaWY:CQO@4Fu_)m08
%3-CH)d7.LPK/dm-/OOE7VElS"DRLlS`G2M?"")Hl9g(5>]eJ"<)CG7eb74&Um)M@Np5piU]f9s3<_Wi@m#rP`''@`75VcU\]0sc,
%``sB*6lHVH>u.0V*8FATljPSK@,t>3pq\"-&p7:nfT?l3V"6?%q^+jF.t5<$JOHJ)7E:+EOoQc)KKgY0=qDgJ7aO=?1oQpE"@ou#
%=;Vm^>?IQ6mV/!B9Ycf(,@(AZ#h-`oe%ik*AIBPK-rg+HH%SM91'\=QGg!p43s&Q>5VdPXig@/`^CIOfE_4r9Z%@+F$VO[4khu]"
%jXQkP+SS9%59fs?8.ks?]WreeOY4s`#m8R1nmDLXqn[\(*AY1-?+,8-hQ/tmMCR=FOHb195[n;N=H9?nAm0HO!;l`pBCB,LouNCE
%bu`<&!$um)N&B.qJ0#*NZ[@:PqrVPZA2&J7XGQX2L#+eQK[SEn&I\js:3Uc#ogFqAXuHT#MM5sViY'!%iR_jV)W&_%ZbB6lqO."f
%-S0n^(6Z:ghdmk#-J5$+m[#Ul1,ChaD/D'Xf6:mJ&Pq#%pC&*f:V*//gAat<T!u8hcKb4si*S#I5Q4B>?TEq2H%UD&'XEEGj=%6B
%a2-$J!,]I$)ikUFM0Xk13lg=u(a[sG`7>a]#\7`.H#C6kWSI?R2Jhm'8"2GT>N`e_Okr#7d5#fMO1W6?D&9>k@Dq'4I9u`-If%U0
%hL/0dicY1u/N3V(/N3UnhR,<H[\>_5aR^7`I>_[BAZ0dUgD8QrHJbb4)uTUL)uogOcV:S1I3*TbGM@#*(J4'kn\"B.h=g=8'^STB
%'BALuf_FX-f_DLk.kJ#15<rKKSeu\3K[XIf??_+'(Irb#M%+o_M2d"6M<?3ekFSSWfW/RBIU;'Glgqu#o\,pdM7Al:.Z^V@UgaO+
%JdKlG\8h+UTR&BaNU+BK7uV*=V=FXBn=7&e_L:@uGL[Oon)A*!#(M"WH/l>+0,(3BT5!1.B$W?IT(^%6A[_Pi>G@?gK*3=3lg&u6
%lEieS&Bg_L-i,P]Vo8P8HV3(3HUc*TAf=>0j)sgAGN4%3hKM,Xq/4&4-13,;;e"E,ItdUm\O,6!-lqJZ2g..HL$on!h=SAJ=+0f*
%92ka]<#9+NAO#3+X%tmd_&`!,DO+dE1PRAOPR\thYU1#%7TCMT5/=U2kC4OOZ28+B,n/_gN0bPmA&tOl;&h5u#<V%)@4Rtc=GCCK
%j-D@MjPf3e*P54%F%Ye4i,]E(gOTN1P-RU/7=jeu)1(WDh+T#..%atNJro6fKk]=-987b>s0S!-;!a2Seu^LVDMh1HaT6'uCdk[G
%=>PkU-_o,8L)=MjM%qS[dp82Y</9Qs=hNLQ\967S(^95'U/'*RaTDI$pbHqs5/fQmN3ima"?XcQ(W%>M#RFbBWE`R&OIU;'.?.f'
%*6^NtGUK,'i/S<b"+A\n*@AM3O_cS%@I`K4R5<M+:,e^17e\M)*bE(Jp%46C;&lmQnch"bSU\gN9/`4g&Y@NO*(*B,'S@`H&"JE<
%]_W,]2O:d=hG0VD+.9GC*$Gf8ZPD_tEUH/-cGiDbZ!Y4[XmsbE5KtT7BnX>cQ#RDfc(gd6Ue.DR?A0gGV8tMFPpT^SED)V>cn'YB
%<S$Q<95G*IqU$Sr)(OG?F=L$VbH$"Os2M51FM[.(g+CX;TAP*)5Q7%2VD'r=OY"8/pBKFf+0$-YcS!L89Gb>q,#`Z?F]]UB'O2KS
%T$I(Vcq)A`bcp8jOcMO@h9WttAn2PF6kkm@Yg&5fgU"Q\!7,U4Y7@^#Q(OZnZai+o&6g[Fi@.6k`(isK(NUk/Xse5`9+_?+>:o(_
%`0Q/(prlUmI&-t%MRZ_)!^Ug(Qk`cZ]M+pq*1#'=g1F8<;Y(GqQ$Arm:3kd5W6W$:R6'"*Kf9NS3uN].c->FLUpkHha\bfKIUi.8
%8+at8g_?3FhsO],.1!Y[^+iob)*-,(I"&YcWe+kO:N'21_%`/Y8tpt23"272U^"XG11Z=LeNE)[+OjK1o8cChKK"\PetaEl[Ll:p
%,='Zod*)i4$4HO2eOr7r95htE9meY$4/#=*oXTEciW7818`E1Z\u^sTn>Yd49?%"`I.aKcFec;ZEGD)9&B\OGTlR@Z5)Zc7\Js,L
%)"Ib&f,`4`a>+WpV<n-a_$).CD*,c?'E)bD6KaAAjh2_L0st^)Roo4j>F6mEo"3=0LD"ank:*].B*Y%'9bIe\,TX)G5n7u1!Lq<3
%P.N"/3IA#jVbb4]-6mh2@Qk95qaRE5HMfCWg8^u6C;46b$=Za+B55o0r,75KO%o+/?<k$*L8_!E24BhcqpV[Hn^lM$@NKYH7F-b$
%T_lX_nG[CiIcn%C&&(9_e]dosAT9Z9\N_0bl882Q*tRu^8K0fEfBql#"b6!65OA"A^U*Xg>"Zf[C4jX'6X*c)\-.l(MZK6[<CgBF
%Jfdf+$,4n42P1/&Pp/eLetLT*,J+-gq"7:gNtsZK#/T6OT("W5Q-QnB\=gI]"4gAWVX+.\Tlq=Z)QXO'Y$/FgW1G._fu^&PH2'@8
%M>5P8Y*Ni.#()ZZf,e,>OXc5PY%_0:p1N)O(R68]Wq7%dR@&XY[p8[!hBJKUB)&Jk`or<*r':IRL/,qQ+[SAT,d"SKSL$j0/"!:9
%4Ast&S/Fe170tpIXa_#+VlZ/;h;%X4XZaL*>*YcI3XU6j8jS#"[g!"bpYjbXQVj73qu+Oc,cZr.Mij-oT<:akS5'0ETgaC><a;DV
%5FWc8GO<N*(VX5-.f+[,TiO2*JJ:l6gd+#\=5kal:n.k_0Et5l@:L2V<Em$6Y$r;l)ft41=C@<1FA`q+/$<;hT9uZej0c;[k2;+J
%Nr<?(kbQiA]Jc$dN"H3F/<`=IoS_u)Iq8Y+7)]+`QA&o?%[RZW?qgWYFb*qT'6C'>;sLj38T2nF&I^s<%FK;j[@\&i.44K3Re#)f
%2`UNXa./01gJeoEr\h9?eJ+;":7eMW5oKeS:\mfECgDmR'rQf'g1"s$c"$N#f@S0:02^=*&hUTtZ^HL5oi"<+7Eh]HeSA>)ZZ<gE
%k?LOI2$MHC(*dq]hH@1JP_SB9Dlg(@2,&i3)q)7W^sEV'-6hJbPi7!d&_UB>ARN*LM,XmHG$0Xehn@Z^@bJj#Yh7onK2@?cf#Y8f
%h$&LF2KEV4!g6+8+e-8i_jFKk9%#q#U)Pj_;Lf'_U*lE;Ye=I!8Jc!?hQL5.Hnla1LT.'Cf16J/Tj*&*V(Qm2<^;9u8h/'8TM.#E
%6jN8:PX"'Lm],bV'gG,+WfaD[.jVak'"AceqVkF+A>qJt@tRc2fWhOin6MY%eZ^b:R<3;"im>Y]"`g4alUK#X8n$B*&#TfKo.g*I
%4kJQ2H!)?/CJCeG:7IoBOMH%]+cErAitM_YC8N',Q'i(\]4IRc-KG)7X0+Zg\6*6j*f`GA=HE&6+kLkJZV-F:OeII;)[s"fS<0al
%;M.9i81qm,=Z]CPb^u/%=d28]<Yn`]QM;05I1hC#;e'j99s3I.Md9!$P\aoeY]64/)L7Ur_&gTbNgdPRT?'7'XE^6/de/oQXB9_Q
%65raQ"jSh_cE$'$-ZaP*=Q4e_/s2:Dcq==mD,GF8+R=ig!E+$TKnWg%?RK<VglCBUXkrEC;p*'\=\6-1(Ffd%'2sI'hhas"NgfXh
%M#6J]>+JZ"f/^=amGLklW30.*KP5&[=BRX0%m*o=9jWUXD'__K-lSLL]/SJI=#BuV7a%N6QA)(/%bi=?Ml[e.P9b-s[AOY^'GI$:
%er1)";`:#h+\^q,2b=-F64$i6=oiK&)()7,['FC):?[C#E%D*_<<m,r3?o45G356,pf4>AOlD&"FR'[A4/5nkf2L)iZ?OR54jm8K
%mYtL!!)a(eS7T9$;dF21JtV.>K[!nVJU24NV840D1r9B3@R_b]Qtd/!N3k3qLe33$BIDMcG_l94XDPU$l8(0,C'i<&$\J8Q@DR1H
%:Whs0I(Xo1/.`$LQ5S`oA-.p9b!I^ELE/Oakp#Z2K9iqU$Tt[eTdJ8gP(B8CSrkM>\u%RbE6/Pe<1?MS]HpZ6g<"GQAOW.D"P.9%
%9o!Xbk\8RA,!/5=EY<7=`^u04!ha]:4J=7d3jJ1r'"#bJMFo^;@PHAE--t#FVsoS-FB]&B)I!]4Tr3E?V+E-3%/ZuC8;P[;CGhn$
%>6>da\!)"^I\!Vf>>!YT>."QGYllOt7WpVYM@t_EVEspS5#.ed`R%b6i#Z&hZ&f]_L)2O@SJ.[(e26d79m78!T^kDb11=(dXf.Db
%;j`D2_B]S5rN+pQ;a0Z$et,_-E>RrfrBh!l)-tU8CAl%ef.A"_R$X<:B4)HaWKOC)_$<3!V_/*dfOTC<)biqm'2)'5a"h0QX?Zbs
%9g^NdDSji`FJWkXm"D,8+D(XU(d-2ZdUX1\-S/1W7<\K[8)D#NK!Cg'$B-VS^+L&72Td[eCIiXbE?+@*;C0,_3b.RJU%Y#a)L^FH
%0=GJ.HusYcpF%L('/h`l.Mn8*F5;\?h2Y3tF=rp2A8P[p1F$_$>[t72\X04anqQ,mZ1S70jfsLt$WP?/YC:QJ.oVQRd>TG+hKppg
%WHAV)X4?Vu&c(?rr7JjECCTh,gAJk=%s9/cen`5(S7RN$]KUU,dAo8:'$f1aJCaoiAu>?s2O?K!KGiTjg'!-i#$/"Ve,F'uB@8Un
%/:U_0?F./1Ek&R]D^-'f<N^S\2.Bp.C4C#rU:q(a6@ZQb$d8-s.1rqQ8]bR$)afgRE(jIg1!qK4q!GBf4A#EZCj'SAG>$M06=n%F
%Z_$O!!BI4AIFL[+EU7rK`!]fXWIQV6_W&:uM1IlB@?7cCQi1:mXX68#J?cE0Yn!3lU<%H[%9YnImE*F5Z2$\;K8'PR$/ACh">%*@
%%GYGK$c%W+Ll*]Pr)o?soO1G_#%,=6fLe3=d?q/DeeWqV@u^5)@t$a/9#(8$kb*(MN1:k$f!@Ha2DQPX>bV$YP[33a]d.SJ]G%6U
%%D/-oP<!EIW@;*)0D"L3C;]X9G)_`F-qB7@:(*G&Y2$A-Habf^,)R@j]m$[pC>-!P18@b_#%$,(5&]eSq.4Sj^"E9^`LAGB@#BG9
%o[-hZNt9.!8s(db$ITLKf<DH3Y\VsV0-SW`,$Ji#,SW=6CQ9.=%nlU=g+@Lc^>\L$8j4IXFk,.pgWA!YgOjP;:?pH:MJ?N7Vk*P3
%EF*>_p6CcXjfk#4)F2[_mFeiO/en6.O%s^BNhMHAfVg')Pg=LmbTFe@::RO9c)=O"5#B%\#D::tbm9BT2%9p27G[)D;ZO94qd,e&
%J"TF-kirGSiF?q<7QWH2H^d2(%n\,9'b6<WmBiUJcaKqSbB)!ck`qJAcM_K/=Un$PA4--scQ>QPB=0ia*Yl8M=fX"Gd]28XZ/eVG
%LFK%la1auQ7l7'nF]A.Z`?0Ca>t08\U1LSKd</l"eUGPMhII/F(!WF.Oq8pD5:)2+1_V@4_BQRrm:]ct-t@I"#t>4Kd(pU11dqMU
%10m=#Um,V;nV-qI/Z=BH!Q.]9RAP9.-:M4G@5?sR>9diuq^:R8H`g``'lq(fh;Q$<F_"=f1jjT:^8;Si0Z0<q]H,SUg?WU/<)YS'
%;)+L*^C.k-J,hOS1*`<@r]s+u$h0i`U41EB,g</B'nNciUSH9.)0UuE8_R]:Y1?'8^WBd;p*MOgA7aH6%0!r3.=Jm;qF"PpUP`fO
%D]+PEjKa[NnB0V16e%d?f4&u]R75D&.5X'+2'[1I%q!KL;qogEL^lEG+,sngHnmesT*`.@bBm828(p,UJdLpYa>gp,X*s;L8Gj\I
%9.boiZ=Y7GR?GdVLTk!h%!eSiSo2ihn)#lt^MHY(>kJA\nE:YR*nI[Ok0$CUA)M.YKI=HF_HKUW7_iPIL@[<ENh&0O;>"#*iA_h3
%@Npk$I?[+Rq;`+qA2OQAFSgoMQNtWt1IU"iY8)qA7MRJNrUbZM1/mcmS8?%Sbu7#[ZsX2hloli*je-`_cnOR&!_&s=MEa'u#7VR/
%lo*1WVS=IZKY?!?SYugp>9+UGCmuqX43lLL@06TG-:#"E@?Mf9H:=60AM^JOYL.2U<.HR04cV<t)R*roQGQ0E"RC-#hg)4M4VH#/
%%_XQ(`$<-^lVT<;$P3'>F6(U6c-s=#OO<YZUu+bj8!pi4+`AO@Alolh9@Nen=\G:0Tu(Mcm2u6_f]907[)9edSAXL,"cqp//l%]Y
%9HZ0srlHQ^dl'<7H1CBtDf1n;3:XG@0Y^:44Z<-6RHUCA)k@L@`L<bW*SJ'<bLEd!@\m=]D1]uMQ3h6u(-jkeYqd>I?bB?MCR)uo
%,:;1$'ko1RZts^###og/@HRjLQ^Sb:Q;,cRgg=86_7:W2<,LVNirLFe`En>Pd'3&on8oHo,3"A_F/4prgs'BIYJY/*.<3o&^MCaI
%8ap%K+,/'<2WncC]][i4S^#05oXXjC"A>W2NDR68%ETB!"3#IoUT7H\AMSG?A[l\;R`Un/V4ZG);ut9FB3,r29X;YiT7"SJdEtGI
%HYmZJFsYr7A//`WHa)1%7)LHWGD;s-0e@B#0@:4VMN1m>WtmP$B2AuRDj$5,YsoqT?.U-_(&`s;Yo:ghV=Ct=4]<RXo7B;dk@AY:
%dn-fiD9:<RSGhSO.3tK[lZ[`hS54/KS73%&])o:&D7-Ju1Vu9nYaWs%Q^b:=SCLg#3Q\Q.;>tDlP`(Hn8>+^,d069qmP6d3LMAH\
%=0C6<3\4<@^g:]Y.,u[u;DO_8[g`aInJpEYCUM*GgQYV"$ORc=d9Oi%fu/sph"G;h9'%k7M$UO8JlM_md;GFKJDG\;)7(BA$>,jn
%!6O6Kn.Q"%<=%aL,S$,'IuBTE/UH>m0d^5?0NPudM4j+>F)nu<,`V*"HFh8@`)jgpfHQno7qd-AX05uO59;,'6Hhte1+H9i,QGcL
%6kW%n5c('o@m^q]Cn6WAI7JPudfX@F:fgc_nhcD6`Dmjg[[@qKb,MX0''$K%aY&aWh8^Dh6b=J;CfAf!*BQH8)D9&4`k,h52,]cX
%@&F.G`AG6':nFm6V.:-\fhG5Kkg<PD:]cNOZrA;[1#,QkM8`kG2\-d;:5l^NoW=&5!0;"T9JE?-(&#R9(7U_Knk&F7P1b_;`_,a?
%-0jRl$K3M].E9CJRXUW']n>;c&rlhKo@V)^>*kk67@=_Ii^0Vd0TDe9="Z=&25KOTr#(Po83;`$'f_lHK^(aO+g"Ai$U0@4;>=mg
%TrOr+B\aU8V"*<t=,/YFbZoC#g#9j"^a/[&G2.0Zp1dGt4+0?9+sW`TPRU6VqLBHF:%!t(_-/:m(pNtuFpnKk(/W!15t]u\Dj[tm
%X%MoNku.E"O8:l3nV[mcShJSomX7a(7YX')#":K"f1SN$9V&+)P\*Qp[QK5[M9k&c(Hfuk%YSV'WG^pbZj.q#N_TF#P/Xp0=]"Jk
%k1IITKXG((r9epVa=cX,f6V7;Q?I6B^]tHg@FrT[`*WermF4YnV=$%AZ9b.SGa$FDp<dE8+b]JfBDhPrXMOp#5*T&Cs"@eFI)iU^
%<h+]]32>_V@%oT&PRCeBja30=j_,J.*HGQ=;4l:O?/k&aL)<32f$+Rl`JY2l\g>45`nu'5^9JdK[Vkl<@!jV2J"Aa[*&!f<CeqVs
%Dj9&m\@gO6[qp8lI+;.[rpLG.rp,>l6oW<a*"Eqe(_.M!^[\V`Jf)Qfeh'De@lP1u`QDsU'_4ST_YcNE@irTs_]QeT\\n%'c]^!J
%DU]-ap0Y_r]]U(oocH=:.TT>?T>P*T+2_O)pGXE1V+p?o<4pCPNaK$CnDcAGE53k_Hp)mf+2_O)+2d'J_t/l6PA]`%e-2K<?c1j8
%k8-;S+$CSJHZ]1&3,JA"3,JBh`Z-@K=Lp4^CAG?t+>'Vk*Y.skMgW(]dl6tT*&d^L*1f5ShtT=u_KM]Wc!iV=DOtJtSCd\5U]-HI
%K>R*]1>7(74SX7c4S\T7Q1mF11ql7RN_4%.6c(&AP!HTsX.k=@2(0O8a%)UXrZ2jL:!OTc*qo`LD/V5iHBDiV>d+'*^\qf+Nf5K)
%QJY0P`]lu6`a9f-m6QS'^VBjTVZ/P8#^2.+GMa1iV>2LB2Jhl(FDUkrF?DLm#/YZ@%IU[<ed[*>*GVdoESgJkDYqa!*9c`b;l:e'
%`ioBm(F3>Q0f$d,2B_:^>&O7"3G,Pj_`A?'rrup30P*+"DB++h9[t)HbHcMG*MK>+gE#cp<_fUS>(nR-"A&ar;1aeY;nG?O+i2J^
%on_qSGSE9?EGg,SC4kt=(QP77-$)krEO`cnd3[W\/_Dk9p#Ae:_m&bEDbt;o,0o;2+4"4]p:fntH5kAB#M1mQk!f*+G^h@f=F]:+
%^.5p-"a6)Mg><TOh@8b>7QX>YE9*]!/`!l^<iO@ADSl[N2WknUo+S&%dr-omE(TniX-fD-Jp2c2\IS^BCiRf+;+18R]mgHAg'^^B
%[\'3OiJ4UV#JOB3a^Y,64gOVaqR\D4CCf3kG%'7D4A<!TW:_li+)Y6Dq.c@T?d.[4]Hms!4Bo76/;\#Am0q%6a20a;/L*j</Dg/G
%3R^(l=pQ"j&$26r;?r6jLCW(H4'Zu0iGFL44\aSeO*?L@9Zph-Hd(X-U.X9`]Uj7S]3X4Bi-<#RFiX*R?ZanLhO'r@p8>OBKE]-V
%kE)@j_(\=#Vk5_I>"0l!rV==5+`ZQ*1Ym7<ht(U!4X.'&hBO4:n2lX(W.Lp^"Ve01GCcs6HK0?[?[$p1_!aG[T/S<U'OOPYDON\l
%XICW'qg%46h/oAun]'/jU<Gmq'M$6s5-Se)H8@*)*!I+(qS)8*d_D5i7IIk.2bM!/;lSp55BhYCD1rXp8)9Ok9/d$_"_tf'mV(YO
%]]g6Goq+/gO<<rlnnUdX5?uE3Hjtp`dlNK_O;MXl>$0kpM&X'^`/UB4ES^:*&m#b7+`Xpb*YW3;7.ZLFpE8G?$T("B]>;*n2niYZ
%]'Jt%^\?F]`I[PdQ[pV`Nha?n;3'8\BTN#&_tjAO'ohVe9h*NJjS,tq*,9FR=^[N6B#HXN\d[K10,SsHKQY!r?h!>2R$nXLT^Sp%
%*]E/%3ZDoH=IRIk47l?ZY7YGBVF'BI8ogh_m3F\Gfp23_=_HmJPHJ%+<6@.W(<@S,iP66=Q:`$RUT?$V-<\YV<(+.GT.cS;\[@e;
%gC9@>1)'tdL88@*O]bgk&oUi>_nE=gJ!OUOD@Z\o_]nEbnJePBEsa*W1t.F?e9l<[_OG="VMF\tW`6G:s*V^c2>A!Se_@jV444*l
%7GbdL<FMingKb9fH^'J?,gO[Ga"H4ih=&4PC@F0`LAFuja\oN0go*%sP&t_&r#Mc?0[eEIDeN>="c_@D[L_:8BX[I6D\S51(oeN\
%&;_.EPg\aHH1o'2;N/24_,I>D<r52GB.JU*eXIu,6pf+"'oAfQ&>8u8Q??b?P6a4_q0dQ(m#?Il#!s8$RO&>1+qYW7&`dgHMA-d\
%IX](/3GB)DFU?8fWRK880Y3"'gc)+L)#fk4`ibq#=&UJ22nU8_[(Xe:ePM=Bh([8VEr8<);ssPto51;Z8P22$fFRH2W[R:dXm=S)
%>J1"%%V^4m2a'`H"uk\(3Zlk0]kKVM='LZ:r=?+fZIhcf&3dN_8M1PY%opJqIG?!'qP:9j]6>#h;G+?FR?ha;[W"E>.j%"<@ul\_
%hOlgd))-d]9cS?n.8A/e7'OOn+G=!aU0\%IdOMsuSp!SI:`=_)cTi6Z38aLT.f<k]<J$B(Qb22X8LR?RB,@/&D*%#d8K3e,"P1h8
%NYFQW+GDs0%?E/A/XZ*7<*@P(fsm&F0Y3c?^[^c:;&s2ZJp\FpW%uHfl!??0'tq\2>?-^Da`e[^W&ps%Unr[6*u@ra=#Y-#b3os-
%/gpWP]SqcDW_4#o#$o=!oF(;X]^E20LbJ+SMem%$Am.CWD3)J\RU38j2Fnrpf9_or*@\EOXm/&s9i9/AT[JjiO/3*5#cZ:D<u4VW
%5h8pV(95tga:t95H^#GDItKt5S.A7Dfs!&qW8CgCcTV3.a6RFmd$sahl([^;D>$EM=\4A:aD.i<TD"#*quC]PjQL8.:cH2n)%/cS
%al?O3R1?0*(05Csr<$9:!eRXsZ_'<YQ2`A<-XE)ulA(-V*7iEgpXZITcEH4(c2JU[Q^e4iVJ(P3_0%`XjM2k.)HChG+7QiT3/sm4
%J>s\M?c]YYJ%`">MODh0=;^;/b,lc?2E';ViWgG"j^u_?$uYi%h!OB1#7!%PEdV,pHip?>>sCL@s0V"0]^\5#m_POq#h.ms?p/tH
%%g.<riO`_E/,>h,R1V2sg;ga^M??V7p3uPQItn!"<L;]Fdl.F-dXQb>eOg0tQSMQ)$To@GrTX3D6a,OiCN$saCVouY%UR;0'KW!l
%;`\Kg!ZOf'YcO@SnLRkj_@+pE7\5Prm+d/9WZJq1:V&9!e;l7Ejl\k%s2/K6mu9lWYT4U>O/g6ZUX#SpD'P:^%^uE6)NZp:9>IrI
%,_0R&9$JhVfu^_i`"C4u@IfXkp_cH]=H+8iD4\m;E3t,Z%[3t[COu[>Uq9JpDmK'LR+1)LHDnh=UKEc1f@1"&hlDNpWA[fJ[kHY6
%s7nH8anJ*H6*cj=`(EYTheGESOS1;bVJ=-K2U*TZSg91;_#tQGOF4CL!S).XeH2*2OYhBg+KWG@"R78(2i*Z%INkM1;En)5i`:5.
%19=;t'p/MSICu9kl_FbZOE_SIXJULpH,\e9A'n1gVU"u6qu3:m$%L?+LLI^Y(t`-.<pMB^67#VP=Rm;W=A$HHf&eZN3-I!eJ/W7[
%1e"".P,H],"cI\%e[.1TN8pe#Ye"5%_e(3bhQSJ(9CQFU8gDW!G$9#B[7W*6hEU*j]`@'.:7o0P7gc\Zo_L">L=p<ZX%D=RZe"H=
%%Xd.+k6'&Z/`iHd.D:&rp[@b?15S"rRP,&N0k\29m)jK&g$m<,jr\#1,Q/*Z@B[k^=X1dsV1RP7Ubqu@MIuSr&,s<A\]m@ST+Cpr
%h;a"PFo?ZV>@*!qOb8_jNn0PROq!sBd0PWheRTW!-9TtLMAEZ,ia\IBlGB1b1ceF\_sEUBb3ljZ/')&Q8aeL<KqM=HVShr;UXimS
%J16_NI#)l:-06_3-QUa0H4>h$>tD2`1pA[U)i.Z[4EfR]SkO@iTUIHbA$o"\]Od!U9!(5+Je@b!dnI-A[?<HV=[eZKWR::j<FW$H
%[-Rk/.60!/oY"+aiAB7C:fT@\<dRg5jGk.\Em9_F/(J\7m;d&;KAEaJ?/@"\TV$6b*gBD4U0\ZWYI6$QN^g!^g/#nZ>>XrPNsM+)
%'^NL\;(=l;dOc,+]ru1p$RTjA<Vrc]J5o'ohOKJs&f;K1a(5c.OjMVQ1Zr,BnPE]am&!@N$s<<>S$j#%I'L31RMoB#X::#f\J6ud
%%Dt4RFfhbJB3?_V7Q/NLCdm/*RNr=\]4WJ+U,@s)C9,paZW0\3KM9k6-S\E^H";$Im#&M[/X<VA[FA]':*Z/YNDmQ/e!(IFg'<@[
%@lll0nt+@3.#+Z%L>9:1V4[=*76+4YHY#cY*)&FCl"s$S]mi(JkR24,MK;kA]!U<!Vk3#aOtT"iWJ21^O77nrOQiF$/#KE4hKXR'
%U69KM\5ON4)TflGRb/H'DfH?YW!4P<R]ZB6Z^A0[$bE69Z8P\2QFh,n>>+XV)KP3iRZ>/k=5hdNPo?7iEM[!(Ueu5d=P_Im<]=>E
%`?%NiV7\gYM[2I5i73DgI^XL]5@6Ar[GemRYU.uLZIM;?b;AE"[h=pk\=!ZF/aFaQnfhgreL-OPqW#l1M9Y:O#XIOREJ%l!B-^NB
%)5:VESlp<4%7MmF->m5s:<eqNAKD.fJn]=i(0`BXB@t)50^)<HZ4,ip)hC,`>hDlP\)F&kjK:NjFXQmE;8\E#UX`>=%F@,3h+3!C
%Z(J%\A[Bo<-ngS;Kg+95,,mcI[j''X;jU]_QLeg]1J[oCAr;3OVH6:_GP:baOj8ephf64Fgug;7)uB3%4J(4uXVi@PH];KnCFc<?
%g2F26afHmNq]2>Ep`0W:Pj.o$Z<b_`-#-kRGR6Cl/M<?YM6Te>=P<ShY*@2Uni1I]R@`dna$X_<lYjl$5.et^ott6&BL-'#cOXbC
%q\j>%dA%FfZ-gJqf%*<H17@s9[,>OC>92rRX?+CoXYibW)6qUfm;fa<PbpmN1O+Lfc-qqL]h\E-Td`m4'jC.2D)/6r5Z7.tHA0nV
%l^GbTqSk(tTL.g]?U"/g?2\<.6T4CV*XWN&AQ\-U$?gtXQ$F6Z/2_Wa!QO?#dYr)'$4l_$TpjTUf\^d6c.M(`0efrBWB@?N8V1\e
%O-P@p;R77d%*rW#"s8>V(?>9&mLB\LjO0dc6?Ng=-.9?1Y<Q\d2<bn4g6Ja^Em<Lu/_T?+D;Tj<q=+]W#0Z]k?i5JsA*VpLS[Z*X
%$tH[3Ft(g01`Nj2-`J3%J$-0R']0bahgD4Tc5dgl_OeRCr#!g,'6bUKRM:Cd5t#bLh>G(BkGP5`>d05N=`$Elg_TjGoq]%qArtpL
%I\#A=n7&M6_hsk]1;WhO?;tF]5s:eSBY#,9+@4[sdPVYAg%I(6\#Lh!e9;.,a0FE1rE<>IXC'ON\\L1X<Me%2]/VCaS3$AoDb0u>
%mO!'VFjXMa5+&eI9F=uT@me^QfFB`]lkkLE2k.DFC3:@o\SZo_(<i75eJ@OV'S6!l'=LrGD2jW[DJgBDXJC-BU>!hTTIasNrd3FT
%qb[6NibQNY9j;B@,"l*%&_rJIe0R>Yjeo`U73@>XaEt1XNo&QLbiM:AqWr$-BChcsG2]2EM58F0eT"/"TW>1d"?&jIMIjB?cG3qq
%L6]1Kr[$tt*\QB3?[D@QW>t9r\gtCT'Q<Kc7#=#uM)8lN>ap4C,b38WqJ&6Be7C)%Wl.ObD_!;]EiMWSXtmtJL5_pU&ZhF=,bb>b
%2-8_iFmc$=[a#Vf6WQ3_Jsf.2f\@5YE2i\gPdH^o6'o*9_CfNH7+nN;r!nhk3!?fHdi)Y(dC9O+E-&-3k,*P;%3PtQGD3OYPS1'Z
%n%'G"Ul6!ugTlV/JWgi8l,BETS0HqKIoE'8U=e>6'Tj!JV@0"%DJl_P<l9=:ji%qEZ(Q.pCdblTiP)r8GAB%&OcT*RDhae99%.BA
%Yt[qQC_Oo+:*hHqOEQ>Ec.:qIk:u_VR66?4^mQi8LTH[]V5bF"[AN?AV:B<0V9!$0j)L_,Ve);bOrrj`oW$Vs).iBAl\K$j+pPA.
%CjoaDCu*PXV&7+#%@33=>SKTTWYq=i"^=3%RF4BiW@AMeb>94+g$Lj?RF?/]<?<(.RRG&?n<#Af`cBN7S*=?4Y,"n!_!DEig2h:W
%b17B2h2sP,@U7P.YF)>FC<]`,.?op[=,&Z]Og/sGp$4R'4+)/XqfDL]r53rXIsp#_c1F$q2S<i5eAfbWD8At=LiJhal38sep-*la
%@>iIfpLVNfe\A.")mu/32E\JDqY==D9ZZi8@\!)cGmb)tWJur\F6N;T^hMO2HsYk;qb,g*h7[kgTH0jB/+>Feh3%CC;--L7rC_l=
%S*?]sJ,;RIh!q>^D"Eb3n>r^<*1T7k2F(f83?c[;<%ItR**kHKZ3]&2a[E4<q1RrYIIcMcd8Qa?a.I/?:U`1!NDo/L=llP#8$F9b
%R0ms7Rlb%Ni-9Wj(N:oaVur&bfWHlQIOnj8)6j]#^UOYmhKP%lh<+D%@sQgG\PU3?)a&'/GjJ_8:<p_$\a1?7:Af([bT@Y%CCf6<
%45c1+;OiCQiS.#\@f7>0n7IMV<M_B\bGfrOkuK[>!i!dN[Mfm(SSqF4^5llJDq*q9,_[+H?^a;?8h0[H0`Ljl5HZcEZ$B1-JQ9"o
%:GA-ir#]pnc-NT^^A[WjYCA]WA$7tdaM:$Vp[^T:l49)o[&Y3f'Hm,>pEtuieA1:gElh*aV=?a/CiH$?UZKO5f])JG2No`20is=1
%L`ti"GGlEN(-gjAp(G9+h!F2TT6Dfa'&-rr\"gi7jV"\8SFBI$"[K/TYpXO6"(-XD;'Qku#HPM'!JP=6DQ;NVY#^%ri$L&@[D>MB
%U\cMKN@_o0SE,B9)s224HYPFfogh$kPOLQ51^4":H#@Ut1RTuK9!a-pif6PYfj7DH90UQIOo=d6:+m70Ll5$G9(3p3`n,WV_C9-O
%p2C7gr;"d"[p;XQe?ZW`)OoH@+LU4"5X6I#Yld,-S?8/V`Ti&kP;_`Mfj)c:A1:'R\!RXqGK:.e]j!M+1n:A_bEa4u7]3M)@7gZu
%I"ET:2slRE6DW02)78u'C%M4:JH,Hf(5(>RB',P,)W4GHf/ZcnJ">OIRKcp$W<Ti^OX6SS<EV7X5T)p9Nk2tliiGJKO(a6D`NFqH
%)iR')WLG\'kGKfopUYg1,b[u.<0V7@X%,blG8"5[3-!2&N?*(Eo8AC5@cmpsIB7S1R[OeD>o<FAiab?E`8<(]-q#`&/=,?M>n/Bb
%MF]>L^;`r1"\5jQAu4AY<BpFjfR>u<j4.*V;i8`?J`0O2':3YDV)W*G'1cIU93r03Y(T?U8b749"KU\Q;&*9.A7nAOrg,7X+d;Os
%F;Rr^Na=A:4=b$s"d)F5CTq?%]#theQ_jo4<$&CanNGkI(n+UC4fP29W\c#llZe]FpEXg15U9,%HU=p7p6CuX<rEsTM&YGsYj_9i
%0E#V*Wrc"q_\0[Fgg>1d&Q?ff!D!&K&U$`I\:\nlKHEfg;HK%K*PHiP?#HIfUgeU5B2C(Bf0'e&V#Z,dTGSTqJJ2sC*%Gi#=(VaM
%HA,IB=btR""ZL038+V?6V.?DfWG@0^;&M7pC5eHq=&U1>44T<8^>#7i=2e&n-0#:CkkS5*-C'N9T);SQr>V[b#sWGCd9/:q*SW3.
%I1&[jiD]-`=Mqt_hD8$):)SEaqSfj%%/P5I&8.#`*nU?3bTEpE+-bHs;0cTKHX`[]<E`Ra:81]]S4\(_)"S*4[oKRjE5ZBq<Km45
%o#@8Vhl*?D-<C_CYnZ@?Y6P_s;aB^+'crBl=F"1p75C;Rc3%$5<Ch3p*MV2.P]NHS5FFWVU3o\!Fi<bd/0t(_*%b!XMeQ_&O(o1h
%$7gBXdBY_c$F3G+H>fm#]a_6YBg/Uh,)=1pGBCBNEMM,Kj`9<;E<AM,:=(T^1+e=42QDa5.J.U[@F0u)KZ.D,bRCI;^MI*=^PR*(
%f),Uo]YQlt&^P5.`Cm3He!8I7*sS'Nie3lalXD*UPEg`I_jncS2oY#_UE:sk:uGY)%Att8/VJB@d-2+m<EkT@f50<56mr+$o4hlH
%5>)FW[,m*CeqiI]C1"?*;Y6fRJm\qc,D^?)<0F-,9IbOZ]E;.YL\`2g3=?W+s*\4GdBZoPaJ.(:FbuVA<SNk%S4;TKf"$G`b`/)+
%oF_+UF;j`T,h7=M9t`:W.%j:"5ASYW_&pbUBPc0NShnDL]4IM4-l?g)TR&C]]olhNN4NJ\Z.:@CADaXW_m/;4R5N*:.LC5%?ZCXl
%r:>O1eO>2=P4kP7Udc",79&S_7a1Man0AE#RD>&c=*\pnp*#kjJ1H.Ja;cjcG^]s;XI&#^gp`Cib+G?*0KKtIVp7WINF1e8jc,E`
%MkeS,arI-?!q?qE<L3kH4l&Zfo#OtF8-^Bu(MR`qI(335E),\BS4&[EKVK'.4_q+=%#0]5jVg4<2CA&pab,P6QTACuMLD=#AAm`#
%P;9Ps`(N8^3?F]:^uYn&S`]mt.4Ub_\Co5D_&gJprYa9El3L0[\tn#G]rm^)/niNUfH4-c$-AU`9M8]2;V;:1[gG^)$$tcrLS(BQ
%;Q=5,L#aLS;uGT"e`j_t1ef)6A%sjqQ;cNVR:$FsNH>IOn$Ol#:BZmj*R-#7n7$E7pUq.W8HdqKl0qNH\4gge@J?`>mD1[n/KCTH
%<7uDXC)eaH3[s]4`0d>Ua(>sfc)25C(H/UfO(8f6mYJVZ-Zkg64OU%%8=%AD(NV5VMu4quW_SL[[BW9q,K\IkpXRqaSrA\gFdSDZ
%C[1V/lst]&PdR4S!_;@OI-bSmL1I#*cg&kDa\8D&g!g<JSkp)RH`/gFR8DQM>n-V.BpDN5?*fd/8VE<rG>WZ3Wn_?u`'VU&m*WP]
%GndrP-":$K2G5XSOKFbJ-4d@'p3(2o[CN1Q"I?!7\$@2Q>BZt7-kf:#m=SQeWhpUN4*8m(GX9HA<PSH@LWs@;W[W"1`,/ZlXW,N4
%$jY52=Sf%1FT56VchbB9_-RY%?rb8c9O@L2">lIe5ufYq1<BYoAqhQaobJ;4;'_M4Z\I`C+W]^Bh+!VL(3daMI#lS<NrVm/3AddJ
%Al;TQ=TXma$3aAK'n!LMP\<i<D%9mu?T'8Zn[%NH.-l]kYZW9'bjuOH.e(OI<V7ITGU=mAZJWSNN,OYmb0uDJ&'P>rb&!Z^OI:F[
%H-WTlA?pGg\pW_0Y@!<b4S@M"_-RY%i!(io"dTF4Ze&&,-71g>QK/$D_I3$+XtZ\m7^+QP&)2)q\cpfO7l@ScKN?a$)o[)I65GC(
%$8$mnoC,;"1f95JI:('Ae,\!d&;rn9Du.KCOE@.%Hak-Ck#+2eC0@4i(agBnN"@PPK!c$!R]@P$-0_VTagMQ*;^_.8m@/\XK/;bO
%h48c+Vk<'G#l4/T]$qtqkEkL%@e9&\MUp9aTC0R&:Ocd9@q9Ui0%dn?pRJ&V`NBR=H?r(Cc+PHU`>[m&-K:;q9ACl:RGj['87])s
%4[N>5;=IYBaudlu9.f/ic@hlPlcD$p_UCiV.:nYR.)_i]M-(dYYiJF+#f0jsVEHrZ,%0,`7=/>KooO-BZAGBN._@,Q]$I@+h+`M.
%MFm:@?.G<h2)oViNMp49VX9B7:RSYA9]\Y$`UW6I>"#)i3s=N;$nMT\ZX&e4WKoauO@lE'WGmbK(-uNsh;IX%$;n3/[>/KK=(@mn
%>8"=.c1t\-QoItj.3-pkZ)F%`dksTe484rV3[JO`AH+R+B[!lX!4e`I<U`jli2Qc^4J/]Yi;lra`Kl/P;,"*rLkM+3oa+n:3uO36
%*BWm>MlDW0#Y7C0XWLm"SN&Ad(+!CE-+Ms^NI*Zt"dn:rT`ENrpEjd_WXQ*PPAD%(h!%FWO`-r:@?N'7-FF4dDf,U67p5OE(4b]G
%kbgrX>-/N>Y`OoBYskKP68u-kXASYqUWBZ9a+m5niO)h7(CuZb)5XACAr3Ih$WSTUjXr]M-`PQh-@i2uQH3AmX83OKIBB:Sq(nut
%XAt,R67O8!/6k!$)c5*^rdZ7LPl-B<@O!+Y-.-uiOd#o?'U'+q'Ku.@VRXf,FCYdq<`CM7X0`[8>@9=n'A[_;[B:6PR`Gq<*@d"_
%5sm)">%bMEdXn`\D)H0aNO4o6Vs_bYZH]>]Yfg[!TuXc2'?*Y[]HA6"ngm#Fm4dd=30W@uWO--SI,4A0mY=$jp?P+e&9@$EUBj-o
%-Ie#pH(2s$I/T<!J87KC>@,tTn-`gCj>G&XZjBr,DlFY9*K457gP#\T6>X::LLCrBbY_%C1$^+%b(J8#OPcG<4jbq?0Qi9dDN18A
%QuXgL>GGk^@\$AVPF-,b:aPcBg8C"11*%>4l%XU![sXrBAU(!KOQ'km;&nr0a,U<B5-=k\!IKrO@Ej1k(%RMM.9.+cVtF=JEM%>D
%]MHea)?9El18N,nebS7S[J9']+*&&>cHCTj;:\5n[r7S4M6C$Fe.DScR=IAjcR``+qU3iML9dreG@Rt8G,o#F>&j<k["KC=1f$=q
%6iH4KJUF:=D?hg&G?*-(#Ck^Rmo[0*s6]4J3`O'KUqi$=Q7EB#kT%?coq(<SNA*EE1<6gF`+O,22`=(1j**;25_Q8*9IG_u$a,@X
%l:bmF=s+D8hms+GFPCf6%q"*'A1Op2[p1hsYKssB_;`h1g.@]pZ7B>Ls"0US.sVnd6I3qD8)hP<.Z$=h!]9aZkW<=?/=0#qIPY`^
%)IaEb$lP8&mE,bZCY?][2$MEfam,bKNn&s"I``hSh^^&LVl6PhZ9F-A@<nAA82_P#\tr,-dtJ7;?PjZ<i]o?09N?2UL9DBPbfPW0
%4@hLQfL*fh(Y3R?b&3+!0%0eKgSgh@V@McXlro-D?o6Mr8]bK?@cSG'X,>AkAlOg/SopE3EudgV]1N`nm@j2Ik'$@K*s,8Ipm<D)
%Cl0'BVVn[1E)8ggq7'd[E$(uVAO-'Se4?mf+9JU2Xgld4OEU\&R$KVbBFVD-4B,7U7JU5.+1=:2k-!`@?Y'bbEUL9;'+<CuFn.90
%2ihqS[2fW#BD79R94X9:/DI-L#:iC^@J!:)n-Bm(Bs"Jnb)E7MS2]R;ZXY2EhK8;kl_9SpeR;eWL.d8$P%n^9qtQh=X>I\:q"d>+
%*3\ZR29hi0p@)mbQXGEa)Y`"b![Yj0EKV0pb+(LWL:F]KEs!$k9>6NYR(1#7\EI+fW(lVr5Y)Y'MW:edddVm5_b[,\@Q7)*3?4&*
%a]dqL;%@YJ0(V6[!PS-ljuqM@XOpKNRBU:O.L2reSJ(F@+#\K!@koGE$+82BN@Cg6+cku-DH6>YE@Eeos!\H^Rt2j+jE8BCiGN,G
%b,KRYd"gOc+9JM0I%J`C:[(QDD4n4YA2u8Efi:bo*gAcrB-iH44p.)kGUH:m\i44*3=>OH.V385b0XL_2F'nT\ma8nH7Ko&lT+::
%k3&j2[@psAm>Uo36fREQ]^GN%Y=Cfr,94sBJ96-"qGK81>n!u7.IQfYFg"*GI5Tn27-IH>!7c2Qi;[$$*GZ(T#8OHg?DUr$1mqu9
%:oY#O1/+SV]P1n^*N?*YfXRBUTp1c5/17[i^'lDY+b*fN8!Ii-F#imOTQI0rnfb#m6AtU":a;hIo_L"8-k9t$V>WG9SkYLHr-\:H
%@d%erSAP=:]V8T4<mFX-#4J7=nD9Lq0-o8cIVL#1<`Y-jmC$4)FI95PF1K/D8If)"Z!>:nh^)LG%B&"EA[o'<+0>\W.R!9#O\W4u
%Q1V.r5K-)FgU:%.S^:k@ob2u6na",V6)g<DHTK"(.ZE4XF%;GKNBQ7]rr/lcM-kJ^d-K'i86tb5K#sJ0PB65l4.**T@Ui1fq=RYs
%&aKS/Du%8qZS1r-d[/'\YBSA4T2d)pIVf7CRa0U<:X(IS?ai/MlerY+RV<8uq0F'&@/%u+QNqlGpJ5cmkl?"bo"hJa+7s:poNk7a
%lZJr-Qh'=/':t)b4u-Iugumj\%sC277X$B-.m1uQ2Wb_qT:aoO_V4RPT5#:tS2e!jYj:6Q]pdW>gb`?@"#W^Yfrl2>Tf>[/i;0GH
%$G65knmJYV?g)4$Fqr,Y5Hgi!V1!f5gK-RgatSY?2nuT_i<R&b8Oa!EL\l3BnL0=VrT8dHiC7':Q'YU=rH$-e],uKs]:%eWY5*Me
%o-`/dn`Jt0Y-6e--aCT<Y$55bp$dT?buAXto[iEEBTN_dlci#$=hE[/GfZ_Fnn[?3Yh-cGoJBLlTCEi:[`=F+q;u_sI/F\FNqfg0
%/MHI:pd))qir#eEaXcP8CC=Kf0'CQ.YD%#]bk)fC%sC28N<U/:@9Gm.[](2CL2NL5iQ*!V?^NBVbkMBE0/(K*caLpi`(A100hK\V
%Tp\4i22UN?%o0h]HWma0h?1r$"FF@@:BunTNc!C#?J+;k\RA7cdnE]H\epEcC:$1LkYgW9RdMX7IsD,(euCH&guun0ERm-V2OD,j
%l7K<aT6^(?==.++pXNkrEUJ7XIb(.gC0=e&]NnTKEJ_Bf=3l6L^9;u:Y30ON/oq7^c[N=7f@;Xd`kJr&HY^jkib^!cf>VWFBn<.*
%=baAujc>-<Z4/GPEN3j0H0C1Vp@Fp'p[Ak%VPc44Z\'NaD9!TTP.RI,:M^`gj1f$^O2emhWh6j/&!S\*Y2?ana#Y1"oi#"!SAhX8
%51o2c(E<`9f573q]g2&t^R"UW'D>gpKr4NP_jeS'Y?S`FkNOq<)sSc=#3((T2ppo<^UotK2?V9$AU)=QI;\jgYGYasBdcgk&TY#j
%dP2pEp?poRa7h5A]N>1&4$M<qn-=Er.2sl5fDEWY/,f(iAYX6!Isu.0=1piqNSRCFiS@=5BiH_"?H<UY+"o5cD8,ng/?eWYiJ$+6
%Ic.,l1=GaZ9:CuDg;f\PO]L@(Q0BU,n%%P4]q0\hVkLEE7Xi%4<lpIfhd'8$T()WTfNu'kY?P>crU^>D)QL_]%BnrKA>Z3oq<g#e
%o'<?GnYMkL>@,t\oGcWr2*7qTL9^,!rSuGQ9Z'_IrDLX:I!t]-]-%$f:HPi1j9E<S#B#8G]=hP,m'QE]lt1[bf3H(pf@)DJ1fT4`
%CDbg7>fZ$.b>,,,T?@!;mlOk.rU:&@g8QLVI"+a+C>ncbS"UU)5;i$_]LMgQh+rO<Eo4L*[^W?h[e46S!3kZ*?8nAg;X'75UWh'd
%9b9@A)`emEBQo;D?p,E>Sp.M0NhmsE7Y+'#(sktt]fm:qSe"9W40Qh=lc9c"Q^b+PJTEHQ=_p"aFh&AOl#jCM*K;^XXh5\-3q`+'
%B'eU1j_!l#L,fc'A#F`=goR%bcfK5;41/F^]6d+4HsLX`NdTi.EeJ8fp5\ecSWNHOGG9SqR-J8N`63W*q5%*_5I._h&8'<N,@'5S
%M\^^ah_o2B3,fQR6f'Gq4V<4S&_M2kBm7Gq:,'^PnhJDU&M4[uDHsLNmod=X?*<P/5$gHR8K\TJF\C/s/o3bCnTVf$>(HY9#@'q:
%CgkBfMAOtp]+B)9L(71n0Js2G6Wk,L:MEFeP213&)iI3ejG%k_J%f;3>@DEMTg?n%l1`]`:WbjY`&_$mFntkO0a8;s[%##RHhWY1
%dA?Z'K+N_L^#^$D5P]5mj4>AbA&5BMUe'%T7^<]s%?oi<193&F%QD3P6C^pDqiJ[lLnR4-EtXsZ@rr@ElQWJ+l_cG?-(oP>o"t=h
%qJ$PRg\ULNa/D\r#j]\;^"6`b(Gts/3/Q&H?3[At?,=s/rt)J@&6IY)f3d0ZZECoL#j*%Z9%$bQMO\?hCs`k@7$65k/r-3$a8;cF
%4]l7[\`JP$:Oh<175VHT#^nAZ>iiK2<4<Y[F(/Xo][s#p/NuCI5-OAkhq3DQO$=Y+&e*PABJ^,Sk2;D,;4TL&&g:&qrb$1TfKD2(
%%%f(MGE?(6dL$q;`@Mcd&^nb]q\I/fnj0@4OFh36qAE$k-&:0uqA\28[>Q,/M6RtNjG*'m:`V/Y9ThUOgLOg*S<17J\G&ds1Rmi;
%51oi+#:;>=j$Rn)o`<0S6o`fU>GRREl#I:6h*_=i:Pf]f75<U2C[8k2e+G."lsIiJKMZY<oIZPMJ/4;f9V68&gZ\F]7IF><;(f'2
%[p=-opLYjaN`bb0agALlp^Km"h;7aXQ$:P,p,n2c$M(K/NS9aX&mP+f5CN6\kEZqH:]K'>G$BHF^q:Fnd;+NJ?N7L+qVrTN`@ktU
%aJ+eCS*d;@b4F>c0;mMFTMFV(?5TcciH2^O7Z"rr8%i;.c87i5K@YpH6kd8&['=7,eun]D</[h4I*N`cbTHiEXN(Nl;h#iJS[ZJn
%Gcgnqg],i#J(jSV:pt+aG9iDT"dTruQ/?Bfl5M)GJ/fOA1Hi9a27Y+I,q&qkU^Nsl<9u!nO.YF9X6FcM$hL:rd,bf)D>j82_renc
%]Uf6T9pm8.UGf!]Wr9=H3.?4f-RiBZ^?VU\h;b4DbJUi96V@nH(l)\glqTn?W+7Ca[l`ioY"lReX-7FGGLH/[dn*W92PqcJ8a5U%
%VsI&3A"Hn2f[EPJp_lnZbq+3J92F!]n@\bh4nZkU^2a(VdfKBY?qa46P\2qB]F95bL2`,ePELPi<ef\@ehWmSLXZ]KIT($_8\pRl
%<6RF4W^]7R6InWJLg<*F<Y5s:/T4u@YmnkX<#0)QJK-8>$A$umGnZuVYJd#lBm/H%Z-D;+Ou*e28sV&"Bt50m%<AkE)^Zj=^A?.d
%(jg0qWOU.Z'B:G*,GDP^)EF*1\M5s5H<+2gc;.pm:ID2M\`8\F__l6OGW5<Y)c#s\Ap^Rj)&uK[8EJAt)maGE$u+6=cVMpuOtTZ-
%2T8^jhhK2o:3fi/TVPhUp/"m>e:bJi2ELu)h9"(o\IsS$_3/L9:l[VO^Ho<GP0t116Uq$]6_St<N`sp+^s4(R:J'mq>D'SBTUbmQ
%WiERXr(]"Cn@X\2R#*(-G%n,qRaIZb9U3.B/bJjj],atf(OS_A/d0*.9lGPk:T@aQ-#k3D!#TnIe.Y&(L]N9(=h2W'+rqBR;3#'T
%6C(Qm\pX:9Og53kj`_QR/0\P5$USN/-RoI'U&ktLBc]\J#^HfK^IUt=p?]DJBEDJ6lFJ1F6ll)YSL]<IFO2snS+AXA-r0uVNZib.
%OkFlic"fsJ6Q#C'e!Q_eaefUi]Zp1HqbA_srJisE=HVq[:X?@nj#L`T.?!]_A2CQr>=j*F#_[D5.2GS>/%h6$bbRj2$*%VaACr?(
%\a137mEkWA`:UdC_L/#(K!&ZWLL.YQJu;*^^LN\H1qgsmAi#7kY<o1`P-u%W$'\A`haJ1ACrg?'F?p^WA86418V\JQ!kU`_bAmYO
%`8*1.X=.X.MB<B^BR[gNO">2pQJP=/QBF:Q]-Ad98f?VWX#bNKRsrD%CI(O8e"s-g"R/30?^V$BDJ=43BXpFiF*h#\+e-/)F12i?
%<7.R'5;^CMJB'!GF#LIB/>e,pJd,Y]q0)Ps=or3LSaGcOM<l>:H(Ta`XU=AtL(S/;')6tcOL-u&IIpB:L^E5V>Et&Xfj0NU[kteF
%]6P0nT:i+j1_NP_!V"j6gW*1o9A/#ALo+e7f/_1rn5>m7irYtgHR:J>$WB>c?L_E,Pc/mW*IWS9QFS6l@i11kB'G4bp;`G66:eYF
%k,CcX&rH=3jHZV[Te)4PgV)q"d,J#"<"\GD5oc60P1?Y9feu;k\K8gM_*W:Frr+46@f&u84NV*E(;?FU#<gh\\YII%\-B]\8Or5*
%,arX];dZ$l;A,hL$EUJm&T?&LQEj@^I'rtDqtm!Sr:b+)+32"$\WPQKK6qljc#SHn.'(:tI=nY0A]_NLbH`85T8\(^lQ]@c?Uqk\
%\2q6r/<Zhn^X4N.#`5:=&fGQiVdq\4p]W#8O-X3N]2EnP$nVLA$c7=JJ]"l3.[C$PQ-qjZ.AKcG]%^#-&&a`RA'(*$5NEQ6XMM;g
%.R&)C=+_#3+$LFtlu$OP.d<X.2f7a`*IkYBUH_%?h[?RYrUY^s]2SS"`M`XOo0el1P#>;VD&K^NZlVmnl$tT&V/KB53G;>;?[;T0
%CJZ&1L,/UNC>t5YdLUeODMJK18Sud`2tH"Z_Mp>'W26<9IaB!Td]MY5/Eh^n&39+@jmr'cPSbL?1;DX!J*89ikWF&V>`0AeK)Eq*
%<OkU,`MDOsQ01V9b/Qp9KqbnS^KidVZ3C+'e.(d\]997jOQquWG<09/MfV29gKl<(lHmWMG4YQn?]9V%4>Tqc5KG4`Vq9h!aU0S(
%PAUN,>'afMKj6G469DSb^0NZjfPZ+3_rn!<@LPgj4kr84$rP-`@kRY!iWYV]\=[aa='I<,g\fjnH*Qtj%K6(-?[i"Ml)_\nkb^s;
%Qpdd=$SjiMgG`65^+!X^K4+T$H<nUZ6$Ht%$WORQCp(F)U>q4E6Em1%(CJ.3eFF[mla@p/BMX`.>j,3JlY4IledW"4lWIBH)u[<S
%=6V1ng@EO^3B'sB+jT]CF@!Nq4QZ\=g\fj*%W_R"cQc0irmp\U*cnG[d3+p3)Ol<?5bY]&#T*:-"d5k8/[B>$s##,Yi%+;(FB-<X
%DXSo_P"p@Nhr+V)LHX7=NP;"X8*6+rTScL'V/rt:GGS\I:;'eJJrTc:X`P$n%lVQo>#j'K8`C`G/kAG'M?6(&g<^R1hlb^"moefQ
%oiO_5g^S@aV5,N;Y$RHhg6%Dq,PSqrDo`GFIN7/q[_(Yu]mfF85@'l,%@(h`5'knuG:,IsF^5c4kLITc4Yt":6Be_NlJ9JeQc&[[
%p!aGaH?k/3DE_,dh7'"r6+\l?Ia65"])()emC-Et2`T)$LWRt,je1YWqV+is3F4,"rj$uP)+1^*lm:sn2hH1?FUW[p1(+03P1WYY
%m0!OuF>QC`Fu"d`0#^1eo_nACZI``1Al_Pi82PN8CDCSJB\3\5`kfeeE&T2Uqe_lg`Wm2#a)c+R,WWu3+l_";*>i70+cJOLJ^T@&
%W*lH"J!1$?RKV#b1p:=QGY4(Q?<Ol<bHBo0/'_a`e<VfF8DSKpY=K+;>;i9K,J&O<.dP1(er*"1Dbt;E!(e%]qmFBoM.T)K*m2lU
%*_:%a;Hm"<q'L/\Sg\t7<kYJ4E^Ql(Op9I8RV^U>3Sae2EC&@<'XN(*"A3n^(\Pdo@@Y0M,X]oZetiX+.f1Sd[Tnlqh94A?%XB'W
%ec_-8>+:n"V:Tplb*\G9Gsf>Qf:F'V"(CO]!s07G\K=H),TMp";,NgjCtumj26g9r8Q"&:$!+^HO?>a$m7P7>\eMB0qLF;k6.qD#
%f7):N4Np*tMHc=k!=6HR;Ti:8(UW%XANDZY3M.B?VbY=h6+YYW@1Hn]oDrrOXe,:!\V$+,Z0SA.OtD^>:i@.R<7K1+L&o>f^Qpqj
%>;Y";qRoLE?Q+U:b)pZ>eW`m4=#*J"fHb#qXE-(Hnhs@BM4@W#12Re'bgCZE/T='e.,_%7OQ'YB4%,5FB/eVn.b__H]8RsJJTC;<
%`.F@if*G8tP3<N<Nk!YB8ZLQTRVrqUUNR!_-Dk]ElgT][UdE1,&Crjq%/a_c(Z"?`<n/79Xu-e:S8?XolP$rZ1UAa!CoM4SNn-CG
%IHhI3M9<Lh;0pGs-'4!seg,nkWjB6@7'0A)I^Z?o5Z"COS87tS_nj-R?.0eVmCJXDo$7-uoWlbPJR^iteXDuF<)fP5Y4LMZ_VA,0
%OsEc>*5@V\@hn<OD6RReF1&'gRNtj80EfKHP9L5GftW_*TT]_g.i&Pl<73YG5#1=;>H)8^ZlKoRJj1^"K'(:"A/o]fC-KaFmH&.6
%KeQ3!^RJh\7DR'AjdJmj:>JJF\TFZLe1<WH)G$k38s@r5Q/b:B`'hH6k?Mu!?[f+4!1k:4VT4Dq;6tl7f_%P.Q`/%r?ZZb::-:;4
%J805PAk0KPl(IIM+:eA@CR$4Dr(q1c(A;KB[D=k<F=?H`PF/+j->Yt"PjWZ9$i9<@]%h"O*=bTMRW]2QQ$__\[K"j,XW<e/P2PG/
%RTB;dp,_0Zl9ndN'%T$5[Rg`sp]Cl7-E=_[CWCKS1@`5kVNNDM$.:^RWGU'?,cfNdM,V9D[L8IG9JO:KGCBKX%Y5?_BpqZ[';t7G
%3^HS^$RHG7\^WqlXNa\_?Yh?_3h$m\>6A]eol#HKm&$1R=Ji?iEdc2?f'[8sb).`$6c;BfMD#3:%;X\(a7"/GfR/$B6<GRTFY3M%
%L=DDYSf24@/is?gM2ko([[O'&j$M.9AkDZb\U9fMNn6'GoX$5Vkg(40`$t]/DeL;-![LK&5n*o`:hCj6[$o2uTk0uJk9kDQPt/4$
%MRR).:)$_MaDBP,;qR(M^h2.d=b4_:-.91b441i+/8<]ZY,.smi-g'1@nT6J1N@gudKGuF)Q/#8Acti,=faOg<`p+bRoV+.)Z05Z
%YZsZ,l=UW2K8S@15eP&WnS-AH.*3#HUjXB=ZBM,e>pt'&6qmI]2C\E[G!4i9:0W2".AA+e2o,(NG&:;?:9OlXmY_b"'iL4al-PAu
%<jR,OIJ[<W3fr18`"h)ieEaRsPW3IC((VgT`Oh)"UtWc@hk$`oNSaF.fA<`S8r&;[m@:0cd3iER7Rh/r22hA)dl0n.\X6mMaa&hJ
%P`RcF="f^Nl9/8uPB'%9Gi]?VcpEh_Xgc8]dH^0O=Xq$s7pepb-QLP3oWZ_Z,GB&5s$it1\Q4=i/\h]A&/lM+;FH!gJO5-@=:h6l
%GlLV'A9aR%riM3qP$GJOm%^mShO8jfNi$qq:Y;h59Hsd+Dk0]GYGcuo"]VGZ:)_(R=c\uSoE)'>Eap:^/+K:3]4OI-,cIhR)j8O;
%N5""Q5MWZKTA*Yuo@O-\)++^s5#*V,THG/af%;dm$C$um:<_T#h9UQN)5/k>pYEMrSs0["$7cgKk>tL`K!2H^8ek^@9!#Z.'iIaB
%FG?>;A>/OBmD4WFLE^jN;(+j%//H!o?Y2g38K$t=G3Y<_Fgp/A1Y*(MSq^)VdqUo*m6Oj/C8L8`XSm_b,/ZeIqAJD_U[JMs-t^K5
%<.0qZ4TH"-*U5QZKh<&*RFR,)Wsf!f:/Y9&l!S63%XHrc\A^I^l>%NG]N((5QI,R^pHsE,]XDq9MKQ@4?SmlU(H_PfL!Y.O+(dp#
%3T-SkD<4clM8&6$$`?"rAnC\$MPW1tbS2IZgOMs^WCfsoI^A]kl[MAK?p#R&Rtaqu/gtI1)ji+S]W>NK6)q#ENQQCjGbBC?go([N
%,,/8R7ppmY-.1b""R=4)SC?YV3m#Wqh<dP3Vd:e&=L90I.8^]];n#P03JSb]G/81`-i`VV,-;YPPn2)23VAlD[Kop2gT,gs?TXpD
%mbaRcaobcd@shNr+dF"SY_ZCaC<9ZW0$%7E@Ob!UN!'H'pd2!b19`'%GA$T7b5)P<%$G$=DWk7BDihE14W+.0&XuuhbG8@e4!U8'
%=#1KKn&,-b172&/g*t_c5])b5#63nbF^e60=i!6keQtuW._[)tV8Xu&dJQo0$pSokU>:n+q;oNo&cL<%.=&>oTR=Q3I/]sWR[b\f
%\@Z?kJhbu;%CM-,r'7lXFg(t4'2.ATH()*pS^j,a:=QgjI!]^WCI<k[f3U\+YPOZ7irtulqg`K2,43HHBu,![M&^lL.G8lNTZd6m
%0rVH@`e\VAFOraOs2(3nOQP2p61Glrj\hBU,t8QTP;/VfWDf+Na!Nk-&4;Hrf[?0M.)S:/Ss#P[7O].]f%'X@2rq+"NXs::YC;.`
%<hB_mP<n#c/:@XM6Za:OlVuaa,6sQn;)(+La1625='4^"%Bu6+6u'^4V=/1SZfBi81j3`"jO1QAeY6f(ldrNo7BFFO?&PW,>k8nD
%#ao,OgABUH0m]A1&p3,tXN9OFWN:q55;&MVdaQk%O'N,ShP#4#g[Z+"]ru:Q8gC;G\eM-o"sZ;)h=4pAd5G0McK+j2Mn<9Yrg#d`
%)K)1bOL0D]r<*P/S4*L/>f4lt/B)],43Chf6j^r^T<O7#MOT+KP88<RKKL\I.hB8!$fY@LIB"[fr/eLsnfliULlFRErS.c\9'5C\
%\NZdH-o?S]e_NqEA4'TP#BGdt%s<8fpY?nOHKkOWb=4LboDK.M-Sb;gb>q:P)d=8pXPEc[(N_h67_O(ZjjngmK8n(NnZlcgeo^r=
%m+6^DmXhV)53RH&ZZPYSCPM7XME.l@4,<^flGS=QiHj;b\fZ9m]6u^YNVhJa$m)%EX/"'e]rmAXol[kS\t8elkB5H'9K1qC#6'7N
%flFd0!Z%KbTD,W6p\S:Dp"UMZ#!OBpH&]jt]\iH<+eKhte*sp("^TH&d/C]VA)qpMD^ih3QlkciBe\Z)4[2&5qt%N4F?fLdG6<m8
%n@ZcI1YhGGCk1i,B5^#D]:eK#%sm(kTYI#c_2E/mdVGRd*0LsMe(kCD0;`j)mfd"C]hr^@9\VD-\'QJUkJuoJW/*IhrK=5(gUurt
%6.]TgFMBGgHMPgg[nm7nq"_MR0sSH!=&-kb:YuQ.F6DYubUuH:@lG?;RHgpk'Hq=^[F&4g7^`&P%3dV@k8EeE6@p_V%'1LQ+Za%>
%.nlsK=V#6sE#7Q"R2'0IFqhZ$KCl:!dM,/^Urc,V>ppB)A>%5E1-r>sN*XT%Cdp.(/sQSQcVrd<@Y(mepSG<E<O)%c$Y=eZ*qtBE
%,($I<l5-bKfCoAYHh>gklXY@lk;"hU_Rjl"G;S^:F<[^%Z9(b/P?Y;_Qp?^U&AC_UVsT,ZPcu&X^Y9S)"TDV-;=)"tq<sEGZ"Fbs
%9/f!Q-A-%=**2e7*ld]%5qL$+HZ$2^ak%2Ep+h=)'G5_tQe,>@afX`@MVcJ:oK;/cY,5IfDXk9lH)]u+(Cg>$55@PmjaSB0hl6Tj
%#D1'm`%h1`crDFjGQ&2+&CN'6%0'4j!CI!1XonY><.C0:Xm&Z\M(u/A@S6,B\Nh:N3,c!W'G)c0mOW@eH7D(3PL`(%ITET&2-EAC
%/s*1u+#]P6":jI00n-7BY*gDlH!T:gbSDoPGE'-.OS#HlcioON?-Wq`fR>)3^GUL%P2K'2+3=]RMXj'8="tM$5?hrpA1NpLg"7r1
%(K%&if2'Le;92r*`E"lrHA0?Ra+hpjSkcO-\`NHY.V=jj7THRMBLG%fYRsVFXYMH-XKijHV/>1%.lC@b-p_JKDV9u/Rp`._<X)3e
%`GucR6d\(1)1\TP6e<bXMj$bNF@oX^aU>(GMPp+s^n46lbHkaKP1=0Ip7u(bEXBu<"eht$gqFb@Tq]o0pD8OEPEPaUW<h-IWd1In
%mLg1Am1%(K;D)oBOW^Y[>;[oh5SN&-HLp3*X16Ec3ZA=gLIUjgnu(crZ%4<_K$[n'k_7W&)@9c0p`G!o#^g:BYu.S2kb=pIHRG7>
%0CV%j33([?,T)dNP?P7i?oSDgoO7Z`j91.7l9,c"nkaTT"mS2"SQ10-os+gD@","E>Z=a[dd=CHi?-NhM&4j`cQKD%MoA>rRnK#i
%Ru7I;"6C`@X,u+m(>VdSB(V7,#NAq$H]%J_ItD:)IF%!eWffihoEoe$K]\8j]\b-5,g!?^gSm`3Z5_)12l*,IH*GU&V)9,:2pi'q
%i\0$T#L_A\%ASio:^ANg6_[Cm_n)+rkfJu.-pG_4Xbu=#JT-2qn=FX(+l7n4BTeD,o0`*825?fgiPW2L1",F:#OH]r<Wer*SRM3g
%nGDm6"55LC<NA$8(N1N:)gUfNjau$f"]F?mIkC@[<'e&c+l2)`Kh=loJPDcE7JW&)2!&"!,8Z\0'WK##b:([e],FV?<q(7JRc&!8
%JUA0n&]<19VK^R<pV?T+XZWk'dPi6r(.ChR'9\&!U1s]ERseiq#B[#[jNoP33,>A!`U<P1ZI2F8CniIIo"rK)$-fY;0UlIXK^a%Q
%8TXY%HM5@#3PcQCBWn$XC"pig[P3CdU`5sE9_!;dUl*#+a0'Zgr&J9JWfB4kk/BMeL%Q"I2)^50+n"<o@@LYh@BJXC^QY0KX=@cu
%cnr`M@qut=SJPHPT",s"n+_jChoFlOY2<CP?=VSPrTi-q+OhSMiS<WmTad#b]jR6:h+C6eR9lDc$VLh<Cu`C[W5A;OX>tL#32`$>
%4O;m2O*<rMXH&WT]X!sO%:GPsj$oXG?.d]')jM%d)F?_6l2@6@r1]PWN?+'=$$,1?j#?h^nJf3S1T4JaI:HSPrM/O%do]os:B@?&
%Z[#e=^nHgLhsa.VT,V%k\Y!q1=,Us``ogF<T6L4-PQ%fD8M^(DHECN0WQ-gUTioSIrQ\kgr;8kn<uk<b_hdBql4MfdB6d:U?7&nS
%]B%M5+[/l.)C^7lSQ?e:IcELs-<`,aZt5ZepeetV<]TtJ6V+P`1(&s'H$/T";rXucCF]0TZ4G7TUK<<'%T-&*c_?[tjF6ZSRO0.]
%5HO#6Zt3dj^0sb?Z_=;>%(W3foleFL<OJ"&8oLTrQ`@LA^QPo`ON\W!4.;f)LRd.aB=9Md4]s[]N1ETMfc*pgHAb-r0X8/:<YR;U
%dPi:4g6:pW-<'P%^W]_.<kRMkE.-SWH338Q#<ECXg'_I9a[aJ(Ts6YbKmFR>]<k3)9^;*1pkeA2r!^gmOZ/o%?-r8oK0IOqQk$IY
%0>S5u$5KbR7EQa>)uWO6V]O]c\"VDp06B.75H!$"f8*Dc27C=!_@`gpV=FQL+T:bO`uDX^rP22ZWK]N0](!?@-WVaCrd&DkW6&:Z
%cVIsrMl_<^nmLpa?gqbXFIf]F$i(0m/MoutI!9DlZAAV];eTcD:ZgI&JaR/hoP15tf)>P*,hGS$o_md&^*St`blbmY<AjQ^jb(5f
%I`&dc@`nH;H?#nS7I9?lMfY>iMSe47<Qq,LDL#[bdgpg`1f[m,Xr#5iU8O&ra$1.f,kq3Ni@XSZY$2t6rU^I]%95^Vp3N@nm#R3/
%Dk-Z2'-+JTY[YJq%57'sp49DZ9#SHXhF;Vs>Q7sV[PZ/";taC)_``3kYh-d2GdfIZ3C,"kH(V0Sm+5F=b7Q+Zn'R^Q?^k@XrPn9'
%+8BTL'[@H&IpNDK.q>2f9SNmbIRt7k/D6N4Zj^S5(W5?Bp2o2#/m/"2gUoJh(A1ClUhSM<g;rnUjEEI34Qr0hW1mUnH>McBA?sP/
%di1s$^O0@J-Ri4Nnak5_OUZ?CD8ok)hNF([r'9BS_^h_W`,\6,@6OeA.[4Y@$0J.n2GG_B'u]Li=Rahe%?U!(_(k_68llPgl"&GN
%o.MZb@/2P>Qa(@gSLu'uL5Fo2%]qf7+p9Wr"3uGT=3Cp!4fp)-X,/rDAW-kn%]*`='U'se(65]DnaW!8*mR>+%mV)B9ScAkQa21:
%12Cc$'9Im6Bo8_LV^sX1p`_QU._;j?UXp.852]?4:J3Cpp17-6S`%;H\I#($36pW^R.$0MYiJ]a?1]/KaZRD<0W```4,FRn1%Tsj
%"_O4abA&!e[ONRh-gPNQHb-(eM\4l9n;]jK<o.%0*3LG.Sie6U04fj4nGQHmaSL%$eRdN_V4(X?%W7#ZPi[$+,Sa=\:lNe4qKj'?
%VL9_.Sm2QbU0:i_[;0CO=JRteH2L.<K$=FfW]LT&PT@?I>lSPYIR5LGI#[L/k&,^:mI!=:Ne]WmE.#bh9:mHHU;-Dfh.+(n@$hU;
%"uj9L@X9dA)@E5h=0!Gp(YhT@%[#H,<jjnajOq.KP&0,?8N&^POcO@ZpX\+?g#DFh3m4+b,Rn<H+]K1$_kA#+;_6JKhM_AqaQE85
%,a6H;75K?4`;sH.Tu)c__b[8op?4nAqLt>CYkh?4`qN8a:K(8RNR`Fu_\O^=_bSP-+qmjndUptm$<Kb*D4eHtjH8IY5E)i,A3Y$b
%%:\9b3P\*"Vi^8]d+eZQm-)c[FiARGR?g#)Qs!$Ln[7\RT41bo/%7(?[G&hr)rq"<OWK+(9(M-3]S;"`+8)N:1G$mOl%n=T-7^B5
%=L(a/17)_@:Zf1s(`aQbIEkfo"?B`!ka?KZ&KNKBP%AAhN`q?C,o!&7P[C`7.X;_<Ogcl2:L2FICfLR?Xn9J305\osI.\W"rR8"8
%]Bj:_;?Fh1mQR7qqem1[W8/9=Bq@1%of?f&eI5Y[2QOj?_=Vh-R[3gIVc%fsdauY%bOf7"#>.2!X"C_hRKE`*2EA8!*W&^k8pgG=
%,"33sjh@9o"'F))%&@DbA@.boqhpV#Oc.uCmqog")ch&,;lR`OJ;gdL:FPLH$FqRrBbl=iPJBR*5[1KGYC9O_+h>,o/JSr(1Zs>r
%FX_r+S'Ra"7M)L&jXHJ[F]ik[(d;sg`1eaEkh(XXH,:`eSK]Y?UTR?afuIljI,dZHFfO@R69h`cV[/VUCN]*%fh0[CQJsu8<k2uP
%A=F-\0!F]AAtA._?HK;'Fr=lclr48pg%&H#,C,a*3c"J;L"_]&<jaX;S_,o%C>bkIO_)L)c,S0DV.Cn'0KpUP_%QdlNPu.ZhBF`k
%ZXnoA^`?:*G5qF0q*H:Jg7W@X:A`iL)]!@uKcS[rYS,j!h1%X\q/I_sE#Nl'+798qQ#oiib0,*=Q[(hEcQV^h+?&H!C!.$?$4T)A
%rjf:On!>LAZe0-VeHqk.\6i%3Sc&*%nMR_$dUE+jba7WR*J1.2H[UiRItL1i\n.>B-4h`6m)B6LdqE;DMKjQg]Eq;`j"-2BmW&6o
%!kR+8IHMmo:+j)YOPDc49d]RofM%Y-oR"L#CT1.C#56gEBQ;`!gTYt]2;)3i_7U.&;Q)UY[9]DTU6(6iTNSjL_/`tR,#DNH_Vq,9
%C9?W<HL@HgC2).\jLr2[Dq'iOhsBMj_Z*LRL(m"W\R_dr=j7>TjhJ=h<_RjC;c2L3pTMX4KQ[1P/jK@'It6'kj1sGh6,LSsplc+^
%A8<Kri;H^QKc/d#?EQ5'+/qTgMt\79koK)8:k)oc9g=Yf4P#QP\2s"!i8'aVbP4SKh^(]]2$MJG>W*[T;Sa_N@)VV0c\).?X`4TS
%V2nPp0<a\aFr!eHO3uC%@G[aAoIZHJ`sdFKMW`R_VR%dSTO!e`*2-D.N@o&1DTN(dN=`iT2G:;aY`(*]1LKj.OZUCdm2edClY8n^
%M-aLi_`cC8YcDVFP7&pi>`S?G,p3.l:3QX%MfX/XgNBGOZe+=#n5>n%,8S;rl/m+'DuID?C7/+6pfsr4V0^>VC`Ls12r<B1ERi5+
%"tI-=kJM="mFnL"m0o_"7D5NPA4;f&G^nYD?]W._a69fZ37iNddAl<]*;dQ#\5_:H73fkPKcIjVGl:D*HLZX^boXeFHG'(Y-L1/]
%mF>9-5p.;_4&#a1%3<3te_/bCPe0-QqfWeJ4SAf"lf?St*THYto'3-6=-Z]Kh`o"YY<:./gCA6encF$ajO"dSr4IQ@Xmtq]ma7*a
%T/$MlX7'rmH1ZgY-CR0VEd%/7Qp8@0O#JtHrcnCiI.Z[;i<.n3^<k=u3V,+$T6J\Am-XDPjim1s:M`4@X1`drH"#=B+7uqge5P5-
%D;P3:%rL0NI@Y$?b=+Y8FiOm$*dsfqOljirOgnc\>0-.+2ICq.paQ3[r#.gZG!5ah:FkPKJ%^a;po/YR[JTLCl_edKVg.+fJaNbM
%k\6d(pbffm7B:q6*9?8%<s=9?Vu8=2T3GXSp$`2LXcsX:]On4VnNRgDH1BcBS[mle\ScXXf9:,p[o#>:q)+af0d$DY+0Y&qr:Kib
%*:r]Kb6tp'rh-0So&,S\CV'g9I_PR:_1-q1Gjs$"+35Q&p>;'*OrtP\$_hE\`=Qf3La]NTna:D&Q>sLrRo3oiG;m#L&6c-5qB44c
%)%aXQ.-A.&U&8o<$j[6Ml"ZF9ATuiCCe$4VD'\rM.IPC(J?U<$rGXP8ik-qRjf86%\I=;C::ja87!i:d,/:J>cdf<Cl>uK;qa%j=
%\Q2pCrHrP:&!hX^0tE_J&1f>i4G2X5ra<^\&Uk4=fY([@>a&^(5eg=`rIj(:_`smqQIGt):nf[`3@7bT!&q?oW6kkLl,UacIbTF]
%Y8)n(_ucL5cSpR]L'`FgE9:L7KKQ_S4Gtq74agg)hJM)Q)V$QX6\!nmJamV5hrdQA[Mu'T$C9Xcm8)X;QLXpF^\?6=5NGLH-A4A%
%BBQ&@-3sLMmpQ`AU0VUC3f^rOrke*;J)I4pSm+BAG96bKqPU0nY*WX6^2JP+\W!NR5nEZ1%hF'!rjh.^R_SUG+*RU4?a@`PqQEQe
%BOkN$/Rm0*:nG#OA7>Bg:B7I7Ud*(q!`h51o%'9A`^f:gN7&+5hP4ll0n9"0/4Ge5T2R@DW+4MKs#l2\XoJHQ-9Q<adU<k!M^VSF
%PWC+_jIa9AS`\QJYfb0/k%gt/%t#bce.e-Y!E&3W6ZLX+cgPJQg//5ihb"qlbG'pe$I;qVPN:8*4+*,%R66;QX>l:_5"F797'T"'
%iCn.cOBN@VM^)YC%jqXqj,L]t2GP&c&B2CGZt-!>.ccTej6l\f@DDHjP_3<!5?7^9oOtp;+)btWF(8"\i2K)Sq,/89i_:92%4TkK
%Qo+XF4]#qkd#,Uq(s!.b5?pFLEg1s+kDg'pSuo%H\7(TdC1L-OSO?[Hea8-;X>Zs!OZ6<NjSil6rEWa=]Wh:t#CbB0qG'h9?:V9$
%o_ILV!6Vp3L9qh)pH-b!aVT=C8\G1b^$B6/="oTZpJtS9q"ggZ#j1upj+Z;"5O`CLOKe$oe`goT8N8#GIdjc-r)HpI^%aie;3Cb=
%NX'knqh>aunO]$6FTuHD*"ia!YbI'pM>1WU4V#oJ\nT^2)eXm7"ke/m][2o&rP!GjN+o2PKKf<K\E:Wgd+4`4/6@8@Ml2tHrXuo2
%2b_Ya-31"p7_5$Gb2t]e:9rLVUAe31O[C4Z@B2OD_diV-iRT=68kH:E?R!qVOD:t5Cm)b*`WrCijkqWb=A1)`_9o=7MdA^R/A5T"
%Ef35@f+AGUbdmNq"S$X1OJkpZb:W6s&;mjC%Yu5W\XMF#C@\ZPcuX>1ns[6'joAL34)j#s4+:TAmY\,M(JM&9bOcY+HS<NuL=:fU
%SZH(tA+JBU&QM2Hs"mR]fHQ"GQ5=^/r=)i)fEj??&*t!ED[J:h$g\Q\6YEXf,qF,+,K3>rLT71Pc`9cd6./-=emn?4T.HFFP>`0)
%*`Sa>QC>1@-7VhI\i-&?m$)5<k%f&Nr!.n-NE+a];GdA)=r@mB69<L21*h"1^=Rt)j;OG&_[936.T'^e^fEn^f__rh+,<FL_ql_;
%>>]U+m&WH-=Rm.n9jID?+O<b[^:K#Het^?oP,5.jYHDTj)+,Td9)k1HU2"Vch_0:Rj3SrEm%(/,-W>CZ*f1r7>3FOM?_IZ3L9XrC
%'k!3@XYPAU^81*EY[he!cme$g!"0Q7LSj'DZ)Lo]U8/J8*],LElN/QoV+_dSO6"iJp^^o\D2uM:1Qk,sbdi:IOFu"]\k"@SO]KZ2
%'oc_,05ustfL/c>XUpRLZ:.C=nWafCi7BYH8gB@29>leMWlc`R#lNa(f,\Yti-iu2G4K($'7odpEk9%S_;3`cCD93LqbP'+O'E6p
%E@KdY9gR@CmN)KT;[^L?1S,o"#Z&oSp,Xr;E]2-QS?V0M7_!!"M(_L&FMb(5?@p71h60:(GT*On9@'sl(Q8Qs]g;Ed;,n[0`Vq6Z
%^%MqJ.2=kF"sa6]fosLCiVAhNEsfOGh2r,jXJe`l?3(_NG@0`;gG&h>'-6XU+g+"VI@QCYA?SNa\p6JM#SPM**cP3.lNIKnbpp3O
%M!E>9%mdV;:YF@t8YVVmEYD5!()WR+b;1dEH<aC&9c@%i6q%>Y<SqAb;CaBQVb>Fu'A(.miRC\Db0p]rBc'?[qG!jnO+*P/j^UY)
%Bkf0!Qa;<W.D#ge\g9SU@!uut5=Da8ieh]=]oc/1f0cus[)(:1>5/Z?4Q9\)7Zp$qg7ViY?^0?JN2,<?"=VtSf+oISpgh=P'9_/N
%>Mlti[]NZ]E.+^"@rE0Gbf"ca*aoZcG;toLO`Uf!EM]s=fa&9I7]3]T/4O7>2F3cof/V5oM;ChV"_5TP_p7FKP@]^p@lTZ/B+#JS
%8M/(E`s^)?7-Vf;E`>tQEGnZabo+E13rO16neVHEG2uUtoTU>mW/,JRqJ&+6J?k,B7WHu$g*JrBEW%A1bTqjQ3PUi+gQt:RT@H?D
%'*b^>fn0lZS1W9C3>0E.0sQ3&9$Sn`ETf*Ro>6a1ZK;;#nA\M,]XNpt'RU<i^6QXg*7#'J'Qm"fif*3D\Ed&G$(6s3>A_@5(]T^t
%SY"76:@bd%I+!FDju!ku7qhm-].-fS8a@hh9R:4'bEO7aV;E;Yk1TM,YAW8bN_2U5`=VPACCEeX:jZB%_7dW4]EHi.jUTaQfufK.
%&dG;RUt`a3#sW3C*`b[1etmlP+gFU9*/I2YiCc^"Md1Ak_*%3&j3'?3;J@R^5`?3(i[Ehk]n<,o.]4E]3840D$"C'Th0Y:bKEbp%
%5:beRf^RLOkq8n>?fT63m2rP@eNAh0:t!V%I,70e*MluDL/C\n3_@D'^bd7!V1ERSLHA"p`nZ,f9(%iE:%p5CQQ^UF`V4Y^dk9JL
%^ih!tUUO&?q9W+S[>>.-@T3g_'"[rB55[B)0&@0%@k;]53nA:UDB98s<Qb4NLSRA<o0l[q4D&$L/CcICl*_cGFd(6\jr&2ac2#RP
%.q>2NZa$<'Eh4/<3iZ2nKQJ"s4-q<f!KPAHR8$8<8AuUD^dbNb^1t<%LR;2_$IMh<4<!A[A7H(CI&Yi)Pm(Q!F=kE\?*@2W!`^%>
%+Ju><X?"8`rMJQriGkKmqbDtOYs=5;%uBM^:+tt(=s,\28(jK9*cfq,M-J%l&VsVrTL,%JB)i.tj=O1i6oP\CgFger`)cUN)5T>9
%m;E^)_-3_[JjB=11u!;\[OlE,$78NB%ZUm)C7oc\Aja?Jff,l/[P>3eChopTU?fu;egM&Bb:+fT4.3?lB>"DeV5uIRoFg`O'!gTD
%V]@0h1:)a6Rb=cZU9N+^2;4!N:8UY=9u)E"ScPO%T!'grGEg=Of-8.'/B0"_!Sos@CNNA$;n%Y4i+0kB46`c$7Q3EK6od5Qb6;Vg
%-C^*fSkX-S9n,<Og6(%_Vel4SLbO\&b'R6!:g&s*@O12?\b<<Q8R-SZkX)V\h!=m:*,LZZc(_Q.nEJ(@?TU7N=<5K+s&\$eZs(m/
%kBUslJ(PDDQcT&8BK%gd)XN"eG[q<O,MA`Ub`T-W^NVk[6rmm$h%kUuZLR/5?Z`EMb,igGgDb(0Je]0A%'%]gi.`4mMd=*#.;l3n
%^FEIFgPi46W(Q6P+rNE4Qmqpa6sZ]sZ\)B1ZrKn5,mC/V6pSX:h#Do7Am9cGNMCX0,$ZEm:T_DIE>WB\,`=bsgMkj"HiA(@FB"$Z
%k?(t\!H!f''._Q^]*M*;je0F<lLaql.H0HF(B-joCH:A*rR=>lF/jSeFZi]13Qu=)"9?NMnN*EnA7Ip-)I2)/^7LM4R,<d2%rRc7
%7gKR'Fiu?8Q(eLNDD>S2..<IPs4Dn;+jppp_,gg)f^'f,$=20^a-Gr-StC5>A`praZ%_Gp>#VNZFdLY#$n(79`uP;*%LcV)ClkUm
%;Rj2.Hf"=V4e@+[pPZ?>SbMt!cih$fk1e7jlK?BP.k?kdYrqH!aNfQJio<2Pihk>JG_iDR3tSuY:<#\Vn8TmI9q1Beb=hPVqB<RZ
%<34=60q`[7_>"]0gYepL]Z&WNYqXr(]^%q0]YPc+hc>'%>E8LteiJ9c+i<uW^FfnD&YBGBagPE'hXqLfY@%V4/XHoWK\m<N)2%1<
%bCfbYgnC"`btRD\U,Hs8;:2i7HTM6*Cp9^j5RH1=qg"$Pe.J`!o6"\O`3$5k9J[:jT^K+(qo$lRFc$'V+g_h4ik!)`N;H`giF+pA
%nh(4?^9]j&$G[o(eV>"cV3[)VSSlH'9'X<%O)7BG'k3OL+=S-8g8Pu8!&EdNgQDI5f/P&X4kr73lB"%"O"nn^U[7M\U;Gp]o3W.:
%+l:n)dSB\eK3j8;;kCaYQd]&'Y@eLf2($QGA':IVrNu;.BKprLB_ZQJ7J5B#EZ43@kDC:<=:;&UqRg63VZ#4<TjnI%J.0;7S,D7W
%n'Cn0f;nH=A">Z`A"19C<30]aA!XEAbY\utX_7"_+hKOR`lia8W]]'mf,`m=[\%uGm"Qb%XC%)fFp:2867!+Yc(A+>0%lMq;qUEK
%[(E)Rh"$Pt:VXm#cn/n>!JEWZbLuR_Z!5ZE3HjNDk&]mum.'^8I(cJ[U\Ggj(1-nqG,=RY'WGB<A6_]e>9:*Al*pF+]+T=f<PJe"
%M7`:9G"^W`kG:ekD(8p4q]S%nIZ!lXN[uRV0m;<VomQ1Z+2(s:its]SZ/>)5SI`KSpX#7T3Xr'3O2l(jr'#4+;iWjZQc]qVO-*eD
%a0T^Kop2o9ApTEUNk,-QDDTu.o2=qZpq5W53ZicAY>Le&[Lol)'XQC4)rS0Via[Sa#j[N^I`TfiTAog<B!9J"7R+8t3H,D8rjY]M
%=F(DQPb!lL`V7/ZXc;LWYh!9.s4h4g4Z:)6_<,7c\*WYW6[ZSGXL6(RGFb2ngVDWI9D.[]m'"H55@qmq&+MN%\(!<be;!%Mg1(AX
%Q<JcEHs'DB"J!@-$E(EX+D*;Lo$&Enj:k_?@>4o?4)0>V*MTm+W.B*O4Q\3;$gWQk,.ohK=5,2`6qfGe625I0Sj/M]Z;ICr@l$O4
%q.n`YmJZ3[M<&^VganQq8SUKA_.NXecC^RT')0`DgnmWs+Bn^iSY5Pda3W!MWV(YMR3VM^F>HEF>ke6.bRqIo3*Csg,Je<O)n.Y^
%+kq4!flJOMFFX8,)YrPeIhTaWUdVFZPm#HXjmJ8F,coT@7L&9]X1+3B2!b/QP%A?S/)Kj":0m\U]PB1GP'+LT(0YB=Q/Ug9>7/dr
%.#qM*G*SodpQKLBq,2ui^]/;gCS8_C\*V08@BR>cCX':7R>9T:7ACX",&&W;N2V,[^Iq7KZ6jOKQRm`ta45\e6MQ:6L7R7=QD^,.
%)!BCgb7Zq[H9?W!^:h5HQM]?']%E[riJQ,O="5'ErNM((?d.uo*UditkiLiEgM=12R]p^;rWjW$jp$%:iUro-ZaSZ8>^/.:WJ+K=
%\,9eLg&Q#!F!@1t4&EQNeZi*J9oVWG4NG$ehqm46bO*!A\M%e^DZWR_!fZ<[%\^Yj\"1DC`pS3__epEc"9(Dq?i:JqPLkQO3GH?=
%D)@M&_tc8&l$"0ISX'TB&Bi@:MF>BNXBQ:R6`*V[q(g($3*;O!j,T8Y(hgPYfj"+9q4_)0aZ[%[DW_J+Z4&cMp2`uk^X5!$NE-cU
%hCjB6nJ^IAB'G3es*pSF^F`)&!2NpK"h@;TRO4GEJa#]q-s:-5]`7L>CeaqG!lOOqe/KM`IS-Wc.S.[&XVk=e!XF;E-d_ouoFiRU
%9ij&?gPmkS2Jse9kV^X@?O)dDgLdkeirfMXJ.BUs[c6+R5DAEYdN>8Arf*SV"pQ$G@&;ZCcYdGLcoEOZ$=udX:<E/RWDiOHGiB"U
%`ihZRF[V^1M:<YgR:d(?N+2UX-(Te.#65M&aUe\&oc,buT/[6m095:aF]%_7%_)rRP<e!Pa@@i0Zp$lW'p1d)s05V\1-J/7$rSMI
%ciu)cH9:Um'Nmku3gZ$5Uk1EaP%4`_b.D;=m]<ZgZ5m(($mpRl.-jOMWK/k&F1m(T0<XrGr$-_n?ne=_@ASM$BE/Jep$U.gHqaY+
%I7Y[*RRo,7q%Dnc9a$nZ%F1Mfg84+7"\56r(k+Q'')9faHRu2B,hCV`?ZAf1Ue\^fYhgN@]S)Mn=q<>N,2T'%Cj;<.L<-E8WQ(V5
%_"M2\,HbY-OS[!NB'.9XboC+"_pqWkZMrWWTOTNd/-24WM?AiQBQg!c$3O#PNgV'M+t7cYCM$t`^8*r%^'X![9)D;h//l20\[?3b
%#Z=kSN"LJM8D.1qq,D`R36Y*-`fRkX%/,iF4-Ye[d7ML+Z"[=K+qNpK2LdG;5JGE"S:nqV;]'U%!f6eCMFU8tp.P8<V$VlWP1?BJ
%dUGd6/WQQ"4ooF#l8#pP8:!$?E*C_K+nCe0.Y[NT:qEhT=3Ij9Z,qOa)"%_b@@S,RCPIL7!R7"]Ue)V*[?hJKTidqa9Uj<1KEn9n
%7'r[[\@P%%>P[ZjK/A,lBLr[%f29u(-3-k`\;5<>W;ufEfigpp@Pe06iFd46C$@HAMFj`R.Y^iP%[i+[*FJl0K3=qa3Pe>3g$!0-
%K<8o@=!M:?.-b2HU)r[19PR>38@)L`cDit_(BPZqrnEi7U/o3YXFmS5<4`2mh@keKJ?&:qJXR%:D@oVN/B4ib(Pr3,.Z"A)]L4g0
%`5/mrfm+ag4doejFm351r?V3b.F-\4c.Om=A:`ee*R;hZ$2?]d%WT8R-:*kjac;,7l3Z*V`qdrt"o%3_@7#iC$ga%&lU7dB7'2^A
%"$nMEU2N4%b8m!'7CdJJ!PFjib>8aEQus5bT^-:XgH$G=e>cIU1/86QEOu&lTi5Y4C?Naqi\]Ma+20-*TJ;]pZhPi(FIWA[)[9rJ
%IS2^&?E!5A>pQRR5`L[F-tV",!4iQ89/b8H5@tiIXn=[I*2Ik<p;]jS_rJT\2JY*].aYON^i,=rU85P,3!<8^KuP_\5_bV&YVm9O
%3<A>>,j[<j[R6bHA]H63p2q?\,$Q,<4SX%!S0PEH;%d(/QirbQfo]:J@u*^-8q@63D8-H`L?u8M>*,#Bq?jMEe=NeMa4i17Vi1c*
%R^R*EK**pQ[Mm7q\PZa[(o\ZG)N]1rX%[qiV`%W?_<46[Ijlm?c?$2tAV2b91l[;nKBq>mH3/e)W,DFYoP)IrJVC@:r2@GW<22X!
%`Nl7h)Qs<1mPT@7g^(PWJ-8sNC?V+QW%k\bLs(>e8cBq8@l#Xe&4>aq)4%\-0.pmUM(f?@IYAshQV;E<+=+Fi8u!9h[&Mgu`7Q=-
%3'kOmKeV:*'$B6^'k<ia[DlXgm/05t.79u50[>'K))t`QNWLaeYhCtHBoSR96WZN/g6kA"?NQ7^E!'dIW,NWA:@TMf6L:!NR%;-f
%U.\Z=PG$Gc7PM0XFr<GkLL8+1P2U3GgPIDqd5/%KJjJ[)plJSb4\,lKFXce;/RsR^6@J]fQFOOCR=8@-XT0_473oJ\B_Mq.?rf9-
%%42PWF<j7YI-MXj\`t;D$")\IaJRp(l.J+B7j9pD-"8/,<e3iO64dC-CT7lh+3PWf5T5Ue/0nBf!TQBP`FseQ8.]nR4dUY)?UUV\
%kpX?<<\sn8o&Xb([^%K5e.UMF^g2j+dk*&Y*hgj`l]4TebZ%fdW>[I?W]2-P]?h^JiY+i1R"KIWUhgbjCD!6:eNB(&_`gqL]<)0i
%2"4\'9GEIn!-"pJ.9oU5dpc5!W5bbr]7s]r6rN)VROa7[[SD:pH`@^<PpFCd,#NT+YgRm.#FE;`('QRL_4^;:^g!BS#d4%'l'C>p
%Kmm8snQ=guhBLm&0j/>`O:D:01@(;oR4-+5D@"/2Z$X/:qOr$OktY5rkrN_5Pa2*,?sMjaph<W:B]uh7/d)>O3EGKe/*A?"0F$6C
%G,`/p#3L3dD4@Q?Y\Cl.kZ]-)bR]VU%D5p*Z:jJP^L3$/R@G<Bk0[9+-,kMZdfO<#af/mWR;*[EE`?PQ$Xf0TZkALm:rcI`Y+<n2
%hspUD8buM/`Wb6@cQR9p$DpQ-J2j)#D:7AQo+-@l\*$PeMF7a*I0Yn8NI4C'U4XY$f>0F6J0gsa08cakHq\T,]2N`4hF4[Nl'Oj/
%rkeA_&h1*rDnGt#`Dkr><M1k*P3VqYV+mO1AmMKnFCK&r[>+(Y!nTu;Hu.r9%4i`fN,%Ja\/oot8>BIXkZhUVCN0`F4Ym9a1W%Rg
%-L>5>@oMKU8g\2B$8.2CUXZImE(/=<P3U%;;QMmpG@;>IA/kSani\K"6T6MpXf0sf$od+6GMU_DV4&`-.ThFg^5SXU%:Q9'jI<o&
%V!:Lf-pr6MZN[Z:d?*TFMKFS+M"11RVc8MT(87=97W;_?.S>Fg](@j+1)@cO.I%s"-BV('$A9;\'ugPoT;uID8JKTa<A0EmOP7aQ
%:7L!L%TF*mmBCWSmf&KIS<:a)Sc-F$P6b21ese9im*u)&5UedB>&_D^'SqnoLaK75d&%\/+jkV&s"%Nl=^f,^b-+m_-4^iIgdINl
%HFknZ=WjgR"^hI-%j"R=gpBI8oI1?'Bdt3NXkEh]PAWQWMrK$#@f;a<8!-Y)2].XeDD-iJ>cUVRBW:lH><?n&cso2.QgD7eIm]6Y
%Y_;S+CUN*fX_ik8="?R*BY,(B;/'@4hQSHYj=[JpRNdXIcLHn:R[07fHOLL3@ou%<?+"0&f*K?p_/N>S<#4.J*AA8[iFRn4hl70e
%W.eeme&H(8B1]W0dEcn,MkDqI$Zd9_I+kE)NL7d.K)HM:6Se(a:'Gl@8Ki[Q#c"r4:=6tt2Lq[=8iQ'$8*:\?e?ZinWRhBJm<PXA
%s--EZA`*[n84Wb-G\B_b0P$R,Y?J_nZOudeqM=EGCfV9D2R=qJ/%-!M$l7#5d]eHZ!pA^s=/Dp3bs`cf7?klfi7-Hqi=8Jc0_frF
%;hr=jrO8LY%=DCX(YK)[jQeWD7AT(r^K;;MITPHtf2J;]H@5[500gFWIGng\/%-!9e=;pY6Z50(Pk=hoWOUoHPk^"PK;7<u`3,;[
%0%#0J$Q7gtPTVAHfCVf^gR\!KN:TGdOEuZfOe-r7nsR1h4P9\t:)$:.2+18sbp3b3=bq,V2jNpIi&EBS'Q]F.'KQ,MMWeW9l0-.W
%!$+9V8!#3GT?8JgQ/(d?-0n#B2,j8P,W9m6b@Q/S)!KRTAuV\BFgV-f>1ZZMj+S7DJGPL:n7u7iO'd:0Dnko%(b5I'79-FaG-ct*
%>OleMYg5U'`$(J/me!&;(mU%15?WTLatjft9<SY(1A*Sj+[Y-C%dp-"J1:0PSdhF)'.*E,W*c?'VURZR!S%T1kt/E8SEifYichI7
%Rs0O<>,qcKQk&9DFgRa`+D0%Wag'S.(E+mkU6,>L,9oqjWi3_fFN#Bs6Y.(NVI>^,3X85UJnc]]R/,C%`9r.SP6@j?VrW./?CB@\
%P\Ltr2p*\J[g%!KOG/YSB-3"kr%]@h;bAFHT<'$H?':?@q2:eJ)KW:Q#ub]H^8Ji;Z"ZY1`G!([+GD+Tl#ZbJT<girG>ZhI+=!LR
%,4'_4gNEPA?/5'P]:fj&OJl&F>QSM<2Mq:qTim6hjKBLhR*:Et0[_Em7_0-U)m,oa^'91M-ANU?Ykr?!$c+64@4rB5;4hW0=67sA
%V$f(?N^BbZ6Ada%VB.h2L8J-Lp2<c3D2I-4ml,/Dc7ohFB"#*2:Sn.PObc===8);a#\M!49gnJ<=,!<J^h*>(2Y+(=.j[DsLB(]a
%*LX6)9c+XJ2eF<Je?C.?#['Nf"YG;7T!d@p:dDmoqX,tsKg7cB"!Y(HDQeiZ'etZ?XdX*4AjSZ1+L`I0KTr#OSjBcPrl-WMcsA<)
%,>co&+VG%:%n_%Q918eKc!H;]3kRLUR#uR?%O_S-gSn:[;ZPkL*'Z=eHnu1-AmVLO5</2$D2sLH,DpY?$M$W^'rHsE@B`Q;]cA",
%gNn9@Xp"=DR^!Eg*<@dl1ir3X0('MG[WU(K]M1sJ]L<EmOIV)3fTU^`]_^`e@:U/B19U'Ufp<NibWk1CiR!ZN(f2UEZ%Yrn'NC-T
%rMNBbs/HoHB%cK,kbP<4E0ec2Nq?O`mD6gSZCTche+XfiLM[LZ)@Q?@M@tlo:"bP]<DWCkA9g/)-%%3-n=kO*R.H!/Z:^XqVb-'9
%W"9u#Oq38s!Fhb))RM8':Q!qk9H;l$BBYkH$38AOF,ZjF3ere,Wbb`>4Hc9]RGOK1aO2aj4bu+=<n..t=F^.cZu9"o!V;91RjjKI
%<kR(TOq,I3KtJfpI>Os()O',KkDsaZIh[GWAB%H;$!du@1tar'"mC2sBa,lWL]!%98/>AoZR'jaK)\f9U/#riMB<2n^dUnep+%>F
%>tr,<-&#]I0J'Kg^f(j?:IG"oNdM*;K$+B=!oC#N/ku*I<,75#E>aiRplXk21>H'3Eq9T@2*Wn=r*rRP"%UF>M.@9`]Z`Y[BFP9[
%SfD#hgWgp(M5;_S=`$sr!F,8.BGHkh%%KWRNXAgPd,p$$1puDSa-8a\Bk1Sj'*NaT%iBGSdJiCB11T=DF1LiebK;#9/F=(k(754O
%+RoOEO7aYj\E4bpOl@bUa\5YelV+A02H#8[-YL`Xm<q`S5*gDdUkh..j]W8rRX2`!ae[#[O/sn,Qt/[lL\0ru0-qc-hM:gT\WYE3
%!E-2NH(-?)A>QC\W=Ds@#GfWkPrC6.2+;SKP4D.X$`TPGb7hn8s,]?J9<YAn4um^5^l27/^d0%e<M1I(V>kQX>Ie,PXdQ5sY6_#]
%q<bb_q>`"B8^AJNh5dKjdUC"E&?6GqkRgfEAP!/pR$OKo*.Z-WqVd@F_45^S3$92D4,(;oNsPo@aPaX6A4A]="7m5P*2<d=]e9\[
%aC.GL2?^VIJQcFi?FXgpWbMt)Ku"TPqBkWqVo"&.1?/n.]Bh^Zl:W<b6s6Q@>M(\[\f:Th[Gi>Qc@ei$!P)h9fHmq5-<rG'r`cDd
%>7XmQbsJA,BUZj:_o$SZ0#R96ADUR8@g5hh*bNl209H]3ooAR.l=D*[_'l<+lf$Z_7]eM#i+oCtRk0Ph628qt#'0SqK^ut)<4\\r
%=]Y0/_PaLYLRV7V'C3iS76e4X6uCt(+gdo,+'0)>(1N%,#dTbb"P3=LTC<:mHctlN'qaJM'=:?M!%K&g_%hDmJa^_D$ip+(+?]&u
%,V$5LZ/2g78^=MZ9'%EL'3M=YkhaIS:P(6l_\4d+e@)#`js#<iaRl.9V#%g08p+irQRX1sE=Y*<acnqV&42=b;:o)&;PNf'gl>o$
%Wr%&/(@@qoY4<4nQ/C\jDeTh]=B35(c3u_&W!pYq<%m%q+EKA<7K&cTL_tM-#;Jh9paLqY8O$Z*jLFed7#TXZOl`A9:kI5-\MHgO
%,\Ylb0W]o,A9,s7D$!u`e4_VWMI)^tEfnm/%#lAAjI6=Z+dq5aT)u'#((DjcPUNP`<0W4eP1,P!]0pj@:OE,QcuX?2+ls%@M837(
%!kX-2Y'Jo_[2ajO\fQ0SoMZs.,j(*pnHnSN9\//[WMi5,<U-Wk,IS_F*%XW?Qc_LEE[Hkl0"G.L5-NZnDZfVNq4h,XbVmpeRO>C1
%=/EIK!-j*u&ksY`\O7o`=?lI2W0S*i2J2>P%Nr1CM\KHrJ%I-[V&4knel=?.ohMrm*Z';",hTmI3IYjoJiGTV;%K9CN4e:\Y=jbA
%(8g$(SIWo\5d'9fOkutPS!3CprVgFKppl?fb!(pQ%YIq/,?)3&;].>V**gds5A<B-j+@sq8sRQJC&"raNb2I];Af8K;-l@lA.nf3
%NY"gYVUpMjoNf%i6L%Aml;JJNVm#p8ooU@Ub:jB2Z`j;)0\NQm^/UgZ8r0N@Wl$+AmTs8c']!-]OR=cEghqUlj133s3o9E%;Iie/
%VoA2t+Frf@+**53gXne@C%g.:YjoH`4h+:/o>TD^J&3*']?;&Lkta:-@UL/+E?I^^:tV>*1e)I?orP*Eg/ouTg,E/3VV2L%)T*gi
%`r0Wa5K!=<NCQsQTI(Q46ifE?MsQf&e:p+e66SW+<K(uebFg718l2^&$VK,Zjc$?>W5Kq]N-I!ieLB*Ml*6nY4Nc>Xlom4-;&4"N
%36G@L,2FS<ZQP,;<Q3V/!&g'bc.PJ5F?GF/6&Hl-UtUOOi:WII9.`PW_?)O2XR!nA`4"aPKK`'TI[:<qg1JER_$2._S4&AFf2:<h
%S>a.ZjFEH*9(?"@G=a'n1G*p>.*N-uL@DDd+/loJ>*gKLmZJ1gN0:JC\a&L[6'-M4Ace!)!K-=rE]:*%\mH!YoO\dI<E?9C@7?:/
%5U'$_$i-C:bK=e>ClS-[Tthma;TMr7jKaj]j=6tJLt>*e)PL.SWiJ7u'&a0'9SefbbY!qh*2mcf\W_niB^-1Aof<V^q@?G$;bZf5
%DJ>mHXm"e49a(_]&1o7DUf'/<FZLE%]K_?)7^?L5KY_%VrsJu^PXs=AkXJ55>u?ms2jP.%<-A,`<>Tg$ZHWsY)!"PZ)o@4@2pKr8
%$F&EDa-D(H?\59o?u`-6J5r"K[YZQ=m+2Eg5V.\t!iFuj/K9GcZM7bBA4SPaZp5VB5JiZ7XGBZZeo$U:^IWu?m5RQUl'aAAA!%$q
%":p^6&ul_M6mkBT]e8Zke:&ArT?a8T8&4t-U/^F]j%3A]$""T!`0RS!61klnU:Q07]60AW2-3)0>4=@o!*fVc146(\W"Q_'pcHFK
%VHP<V])s'AG%(]]-u>i(<FqY'-5\G+d.kY^I!Xrt^GCc\#bZ2.:g'HYdEbb6-g3qddBbEK>#+gVF[Qlf#&CY95C<\oijJN71!&T$
%a6bM,oiu@/9=hQoiiMnAe9j78-XP-47!c#L?p$*T#,g4@q!j:44r25`QE#;W`\#0ff.f9.LE0DV`lIe>!^jIdp/4QL;3694BXK^7
%hebPFa(3t'AK%t<p?e*m!-rlTpC`lpeGJV@>PgBL@>W2,nVcB*L:+EG9=FCU(-j$'@^Z:Lh/l21i(h+bL1jrj.0<$[c+Q;ofbbB`
%]0TF(den@V(?r='^22`f_C/+.4E#G%NlPJCqt7,(h1PJZg)p?JI2N!p.3*;:)$gBsBG'[oT99Q=T-^n`.kn?/$nWfd6K[e(-Y:A,
%!H0$4MQ@iV'M0Sf*`5@GAZ.N*\4eCYR3&BY`<8^l\S]fZ6@,HM4Sa\CSPdd'4MB]8Xu0eJQKeZ:6F9!4"^r4RH]UNi's)Q+b%9:L
%"]1>;3Z5.S;U/'>"nSEV9+6A-el)UL%m4fM+KGnS$e(,D'bJlcjJ-1+!ga(#/P'ToQm$pk*,Y$N6>L>rK>g<iUD-e:8CbkX#c9mf
%/15_:qbg9tJoFR"@"qJa`>??f*5Vh.W@>ChSrlG>i!K7;J=]r>#Z'<heW**K%#?cgA=6sVeYKL*l+)5jc&pG-#c()%:MgVcR[F/;
%C6GCT>:1$F&45Y]U@E@S\#n/U&>]s"A45NR@+bU/%u4b*J18;C*kr9B?$Dgp&Qg;/!Z'6!FV]=Y7$o[*bA?6$-*<`l*3Y'<,[4)m
%$VYP-f2KOWNM9S=6b#n6c$eO^MBh[?NmVQu`*d1,4s>kn]hekh+d2.FMeE8\##H,H4h*P9ZDOW*#`9JfXieMXRm>jQ;4X-a9bNt$
%6!l%gAm>-@-U,s6K5?&r,?s]e2ZBHF.*YJGEFCA[D4SUuJ%@Jc/l>LM=g^ajr^dPIl\pY$&X]Td,s?!hMX-F;ZH@n-<]e]>#Id3W
%6r:(F7gOKTE,(f.6j%?e6D&?T6]LfgqR41U,?F]WhP4LKY9#0UPk#Qb6hTVFX_GlN2cWtl"GdGKktU1_M<@:LOKf9nG3d$;(NKa7
%kO^Jm:Xb/,+JgsR:f,8ZG%6Vc\#<7nPS^f8*h=tn&"W)Md:!YeKah37)%V[diX(.Q0XVaM8KBC_>>9^s>#dTjS+smC:i'/>Loo1<
%oqDEbbBNld:fk<hL_m+LTB]6So?W6pDs>\s+B\M?,ePCcn[GGElQg4+F%_;B;-rZS[f\H0"R#a=/_UEa3n*A>TfS*jlZT1:5M"%t
%\h`c6li$0f]ZE$gcbk1`Ib2>tJ"L$L*b]i8Oh$0=!lg3N"U^O9mO?RW\a=T4JW+T5pt^c"e#8pC:h)_5MtC6)2s&o:Kd9@]B^Kuk
%[[64Jgfo*<TPiB93K-bOrOmX`ltTP9dUZl![^8)OjaKj6aiOPtE`:&i8AQs(<XN%h82mP6TUAD&_"''l!kP8[CiqHZ;Pjn/a/ZaV
%<oU8^%;`hRi&`mailXQNoHo6qWElP6-psr"LI[1hNG?sNqbfjQ2-Kd"ilFbY2PG)@e.To-p'Y:5i69-FVUnt4!m+<m%OU%RSUm)[
%&-E\NB*<qPOHDl$a(0UieYdbP_JGOsPZHD+F5YN(TZXh;H<e\FU.dUm_.%h&fC#KJS9Mjhj,fFR+]Ps;5P8JZ$'cdQL*nWB_k!@l
%fta_1?(i/^=B;6=pAXuI^B=,HiAuOh-+W'bNFePLK/(!60aSZP/9VUbVbRiY`gt4=8sh-p\,1?q6.*L<GjZ@3[ii=\8]QO`&66O'
%\%>)lF)U=9K%KDX@=0!^(O_<jh\mAc1u%RDX+Qe'P.<7YCh\RS5^3C4BZo&`U=u_f"%0Yro]6Y:gVQ0a3)J<Ie$c8$ERn.#kA>Fj
%I:ugW8$9-a,5l`VnKsl8q:lYe+"-ckRcH:IO1J^s4#a#S'bP:f-n^iT,O!#sHAq$M;LbmU4S9Do\etmQh641SqRB8tUuukgUOt%^
%VL_=6,,#]Lo1'm/MQ@BS%[?6Lk7OG2!UqpGZM8.4[^RGr.D_Z'.LQm`RKJ*41`0.Y;O^61m*h8(V=7Tje"Sf7ZC0<j*OXB>lpZ'"
%^j1=C9F&:Bg^EZ4(XN$hS,NA)qF$h4?RCP[&J@I?$=?CNINh_^W%QV;#<`(K#0)aV<0c1!g2)KM<:fTtr([F\#_<urO"Z"dUBDT)
%R=ZMiaTtMHAQ@7;A(Xe<!&)'`aT#7%X<MR:SCGHU8D(K%Z?:f%8m8:9\k3hoZ1/aK1^b7;2+^M"iR<5]7tPJUQ=W.;+X7L&TMslM
%1XUPa!!rj.$`0`k@^N?5s0)BS[p7fCMH8>aHCX=%BIIqc"@RsS!)t:6$A<\]9F;-'>HC_[_AZ#0J/;3K;NfFRJ,3X3mrO4epde%Q
%1hZ%G3Pj*5XAK_m"57+s;#,eg.b6PeG'+M4:eFosHrLt$TC6HSP9/k5A2SOo@AStsF:BM*d;Z(p.Bj04e$+TG(EM%'=JDWO49,%^
%h!fOa(bFFhjHO6YeFC*]^0m#\g_G'qMQ6]`AlQFa.qc@K=BBqGqu\LHjqON!]WI,cQdKH#@]AFAlo_IR[#'qYZ1AP#&3(KMq\U*m
%W.Eb>0fd3)^d%5DnJG/^GkFgAMm01b,cN_5ZK4T@N@=CkijU1(#(Z>aaUb7o)!T"f)+[$Va0XDZJc;tB.?)DII!11\(I&?i?B*:4
%:c=oakn,J3#bIj@0hd,j@88+ihhA]2`TU2Z1I."5'b/iio)(P(LKjsSp!O)f6F>*=?-ku\k-a.,.UM]h<Y&i0in0]^&0qF9h29ZG
%h9Zrpn<;r%:89[0L]f)k%?BtKerpNlOKnq82i)Q$@s="ubKU#Zhg]dlhmoVR:+(#PE''1:>VE`h!]dP73'TeD4L.EK#g=b].ES5p
%NC:&P\MURh7jgX^(K>_oXAGQUF@*-d7\:F:HrIbH+2W\2N<Q1fK,5c^=It<q\gd)0m5qee:=a#F1j1@,Lq%HcJPmdLQ%fHDobKiI
%=_`<OY=9*2cn"$'pf./l2@>^pSWgM`Fs.L>8Q7iTf76X'24k_!i\DX:_46?ZobtfL]ieLUl"O=uV-TMo\"?\EgjhB4^/A=.IO'm_
%L*RmqX9WgqfQbh;*$iEGWK#_&)&oV^7<'n;7JZc8+JdPdg7lOspKkmoP\TS8[Ss_PV2s5PAE9&l^;1iulUurGKK,*OCa#h-23]ss
%NsY-1h$as[$'NTU++Es%B,H*d3jm&^'MV"L7]03SEJOFf'YK]"<s,XK'jE7;PRaT@8H\TWUf\G[7Z+-`n1ZcGDkuUP'^(oDi(\im
%ngoY(+?*#nMlOA);%*e=5oidt_f=Lf'tF<L8uPF^=/JfkJ1.ceQ/2a[gRQV"X@Md/\Dm3s`JT,hLj:M"O74"uAK.`iNub!"a\3dg
%.o_c7PLuTb*.H+h-_EA7JTHH-!q&*k8-(@6C^#@@+CkJTh6b(p@OFun%V48Ifn'EcYR"(r('%4,.ol<P`#@E&'dlc3DRbhLe3rK.
%C2:H>crDsFjYQEJ6J=$Q@26)0BR)OGnBqHblu'WkJtYkF<4""^(K,h/a\d5Ji2R-U@`1I\JEtkHXAD7R7XeK+S#K/pCIhT9DK4hU
%AZ_[-GZf`3/VR@;k(ME^`,nurdgg@mH!u>h(s0?U<0IE[.KSO+_E`D]@!s]Z#8BN#^hHkA:Gm]-8KTMN>6TpY(;<_04)`o\'pLN>
%0!,B7<OPi`Jh0993l@qJU_]dY5lL;0\A+12?%"0V>\DgTPEWt3W@4EQ4b&k"OjM4m/%0l*_c-oFMV"@o!&qr[`&U2CLuSX&k4%`h
%%juKZ#U@>WJKH6Hcu$E<iX0()<])hDE!dJJU8joe:1@/7F]fS0c>k[(7a5aOjI@d6`:!iPTjF<7?8W*"p.[#<UQO)RR:MV=nTAeI
%1oNR-h(GMP+b*S$oYbDR,cWE*2JFuY.9%*/*/Cbd7OlP0"gI2-#/RCt,4&)>n9i[FYGafoY_A;bU;Z2s&=TkD7Z"iqaD^YUN%c28
%&Lg<naAe;(!$s52O"1-UMqi$U1;55[[LEQ")sn81]10.>1m1.iI7>t^he,"FZTFCXfsS[,"pRfZKkr>YZXSeA@o@HO(,&6<GB[cP
%4D$FEUeM/o[[8reRMn[HQ;jZaA8=2!Thebg$S'h4%W^].aH@jLqSaig-4S(i\f]^+,he"W2PMK@Tu?7@q4$sHP3e<BJ6-`8"W`/Z
%3+0)a0aq:[iX_@DV9[g>i"HHURNa'Wp_JNQZe.S7r_^]I_b5qkoPm\F2)@XeY"5QPCg_G&l,71E$CEN4FIg3/aUCRj/]bln9i57W
%X$gERaL/*)6rH5<N(i[n-<HDs<JEutgL93i3B:M_Y/0h+8l\jdjlO`UgqP]SV:;jAoSFZ@;KQn]@V^A#<>#&(M9hIs+e('1d1m`1
%&B(ePe?UofaqUUo9#ic"MM`46U2MUEVImEWLC]AK1Fun3Q?g\`cDjW:3H$8`X<0F*V#1l',jZ]YO4pt`pEiM,Xp3oE:E#<0-!,Sp
%c?Mt!<D.j^9l:Q15_bVAMO,n35sLMPc#CiS)L@SKG6ue^-3a40AYiXfmdPnV2#lKbP!/#l\Dr?sIgJV(HK.X27FsnXmO`F+f(m33
%Ajd2>0c>(4lsGS`3orteYV$6Z,">^-[g]m4!6?.8E,!0HYp,hQhbZK^a'0NMnc8!n?4tL,*TV,F-PM?ao7pJ-I/!aGcrDS9+^/$T
%rn.N:4?"9Y6ikqP,?W^3MPcmNXoOqIO/g%I78YiY;G=s84@l,>q:KH"hP)pO\0\d3p.IK$/HMU.OAPi9L/GWZX/,El@"T?W&QYuH
%A.>(b4A<NBRun"rCfG?Y8Q7cJ*E^Cfb4KB`lm^Rn]KJ,TS-1$qJBOVU<Q-.KAQhC8o1H\BH@$[8q7Or#aLLXAN%/.$;LU/GR;58;
%h]WVE!7_-9nG<t6A!.BTC7iZQc2V/0,mi?:('fDqo@.B.$@RsaZ]E&1SLBGj`FO*JPQ'?s8RVDB.W*GZLOB^IUh7>.;puUnInaI=
%8](ru+B:BqRV_;)G%Qc#?>n7Ydo^%Qjh)M=\U"=]7eft&Ta'@'.CHj4JME+,IA>AP)PL#t4M"\)Eh/:;.D%!7i[2bmq5peWh229'
%.dDjsN,$:%H4-eT<!4?U>6Ml014*LB&RS%,;n+/7/q_Kh#@ARm<qR;!dbUu<O(#n8[:?SC2AZ@F=sK6jds5,UT/'JlS"ABXp0K'(
%9,#2oS'>uF<Q)2\,!,IMa^R.D656nE!ZqWAN.ad&;iT[/;S/?2eLXm&et!ZTpKp)6@NC2?`qtLl*geWiPoq2BQB,"D*Dm(GLK.3]
%CeZ(f>L]Xq?H&]&"oQNbZJj7A*'2Oi/.8-h:_e,AeH\IbF<0u;?2P^GXmA89BAkZoC9",6c\Fh,p5gbuK(Xt#Q\HcD]i0T.k#lSf
%>1&Z>&IL?/Bf<SYE]<Xs-*Aa?3#b^D->>iD.kV*'jkh2>7Yi<O&m#N`<qK!TW8gp\AJ'>#<2*F?=-IAS]9luNM/)Ym6hE")\Y#[4
%GT!.!a+CNDoSKfP.QRA,+Y&-h._"LmXe-m12N#"in\56%,'VCmhr-Sp[QH.3.K4>("NGU-DC'](./#kE9/1rJJcBVm;=O[\[9@6F
%9JtksUTe<$\ihl=KZ@.;9nf:Yd@dSt-C_!)A`V'm"WZ3m`r!UC.WuH)YSrLSX]_,>W2[J4@['U:=O/"LI1FHP(<gNYj<7$I9&;>(
%Y8YWaD?HqV113DVP1f$pBeg(CHO%7An(4;K_I*p^oalJn[#AK>]e:EEi+ag(mrglBr#P-hFZ^J2lXIAh&(70T#qe3\^foFreV*7g
%#4u_rVHt.Xl6Y_A&PfT_K8(Xq5OYcLU9SSm=6(!_jl32>KZ3G%=FCafG(L'qgfmtH16h_:jlpT6b%7"aJ.F+l2VBrtf<&rt04=4j
%26HAH5_Amh:5+kLgH[19R\)'G4f7m^:jp?-3sI*f8=L7;/_U?p\BO/m4!>+!VG8<M&e>/7Z&'p\nPHa.Rcur2[19\B1!bOKVp:$h
%Y)a5=-35t_ZXNs&aUVU9N^;1r_!*9N>uqS'P`&DJC/`d4BoPVN0BnEWr")7CWHM.R/!pfG?5[0dg>#?CBYIpj)dNHj/FI__oE\E_
%bM7n[RGj0;U%Cbg6P'YO>FpN%3g"+,hM<5cAm:G)^iUCTn[fZ]6R:gD>uhi&d.MpHL>7K:]EFFQ/asQ&@s2cfm8U[PN'b.eVA9If
%OD+h(f1MobL)V9bSsZM*c1k.5A]/l/DSjOc.#:*me!,N7UnFYhXAuWd_KQ^CggX<;UcfZ`jkP&17G/SE`>8#\O9SQ`VHu%1jb/r<
%FUr/R:.O#!l4q54>g7NlF<Z,4[I!pch"[9R+6uU-/)=knf;FAFI+!Cn5=1HbK"40.]^T9KkBteSX1\38F[L,#D\T-0TsGLa>!7;2
%oH2<bMo@]?kgS&]&lrERSt$b=QhHRTc`"GWT^+ogB[[eh4'n/.<-o+,h'm)4W\-fd#W7p$e42IKAXG@I<7tW1lpM4F]a,tICd95A
%10u47E(tGQiQT"M)[5"'`%$&9`^[>%@uf\>pm*Q787H<SepZbIK[dG'.eube(Y#ju=gc,JPrD(B&;YiG`#?D&"S]G9Dkoi/?l,Af
%d1=!L!;lYtVn(rSHCD<25=@6hE(Ib8Tcaa\mJ*rTM%h\cG08>"&olKdkN8#XZu\UaniBO@J37Qgn3Y**0crcq:S@PQBH`"ATZggi
%_\0^:=u<0i$ZS:c!hDG6>R0m,01@#5l\K&paV%ra6,eW2ajRk%)N_tk:B-*1<ZFm^iKqcHML&M3L5sScm`U+mMdBK!#fZ&f/"cME
%\hiW^9Uu3Ai<1DF<Ws;iWB:cZgT5?R,+l?e\$)RM?Rh@>OUL\]ms2+H%''^d<5X!,Ja/(GRBd=%girk#dYqgI*3=8?`Ib2D0GHhX
%FV6"U#"bfE7aa.J.?-fQOA-^r<T8qX'aR\&;1rD*!NPJ<RfM+l8F;alEir;!ELR/\YbCbhUa8&r8QCqA`SFe$W:iZ^!-B0hkQelA
%fqm'T\.D'(l>35)[\j9.*#*u&oTHA*A4oF:)ch4l\'skHQfse,?SN)bAQ01^<B1e4po`SV<<+_R(+mYtZ;OA*SPVh\P[Bqj3ZOO6
%:.;0@iY\u<^aBs9k/BVeP5CgWL[?BAT'T:^!SIid2'Jq72kj52^K:m[oI6jF%Q/]>V:8(^'-DIMEmt"3%]t0qqQ7IRDZ^q/\\AsN
%;2#OGg<b*Q<\>!C(*?S5^125k^amK_%%WJ4Zt_14B@?o;l)[Y2cDp<Q@]O#SKY_-!l_sY]d>HZEdK*Ul8e@C;5pr+LTg[S:lo\\Z
%1NOIVg('74j^99k^gq"nh(c&cQHf9cd0q-kS!T/GLr2huA82?<0n_H]D%ne7hboBZ`[uVT]00+N9LP\Wq;i<\K\reC[9UI`lKBV<
%$$G$VPZK/Hl4K0j=_1Hoi>=ZqqMNk/`3`VKn%;&A/=9A!]VNRo$9D/V^LQo=]"#H,WkkI;1C8O$pF&:PM<YF.LJ%8j+D1)u9'Vi:
%$(G8FopYYF?m5t)TY@)G>09Vmd$XStLfL*;95o^NBFTrV&5E3/hJD@m&YM0_4LT=?PT"Rj>roW1Z#A)[#F*>gC@)Vk'olfuK>02O
%HIT)"YWu/(C[AX;CF4WCWh]hg7B!NQ0uXsJ>"Kks@&A69%ak]O;S:C3\L(Q>p(ZX5]3##A=(FV%PH=VWob?^:*&NS]97,XWP.N!8
%eYap%J0=\.Cu%C`^DH^7/q-6@VS(;,X1GFeM&s=kj9n#h6FV:m$Ts(YSomp'39`IE?D<CZ_&>,TI:?_EB.Se3(=gDtHT68N!+d<\
%R.+),-6XRL1"uIuen6A/EHtTD+?K$V6')m[$eeA4U*$ZNaS_ur`4jT_W"*AU<h^!,S[)O$hd[T@C6_(YK;Q,"ps&X8QtSnh*F@f4
%AKJ\_(ZE>:ZD!gZ[RQ:\C]t1!,6-rl/O0G<`Ph_/2qGVG^^>C$EO1:Z:F9`!e2=OUqWrj77M:5dUnfAobpU]RFd8shT;"=[6j@uj
%-o1!LaU5&E/gkdBBVOLh7=T3;!uh]\OYu#2gPXaZ1M1O&#cF1"7t#t^.]`e*aB<-.W0ERe_@2g+PU_uQ`SEJjOCM'a22^@SKaX]4
%#F\U;c0H*t+`O<[Zko.Pq?SW>_'jpE(CE<Ur=f@tU[]a1Muo@JXn+`cW,Q_\'(Zknr(@D'P7LOLUt1s)`+GROV8`+3aLS/\\;cke
%o-9/jW/6k09R!E?WkA<Bgg3<<]Nd(#p0Q\ZAr7$YWV&)frrbFagkIUeXO@\X6Jtl51(X%O"tr^\"q[C5gu&b.oII@=DJ9c^J$FIG
%,=J;-8Hd=F<(nVN%dWmcmUBW!7>4f'Nmnu9J0-oaPrY)V-af_8LsdWdoeALm,?VUiKPOna!u@9M['cpQ5$7mY/0n*[nM28"#t?7G
%RD0OWd"7o^SI&V(b>G[uh0'1o>YFe-U[&6PV<!#C8e.7O'HBHeb4%jlA3Zp%Ob&YkL87NB6cd7ke(*k'8XFi,Lp'f[`Spku1V[NZ
%5.[5VaRioAl3Dfs1+hFJ.ApC=e1QJ7`mKEoNGq:Sk2-/%'#eN>=H%)=df6[KUsPK`>q\Vo+>;&U?)_ZK$q9,rU>XKu82&A26oc:@
%R)%fbRISFYU7TcT8Ye'nZ,;/3jOdao%5$FCYiKV#'c$],E;]F!=HKAC#JOcS(415mW[O,VbtBOiPuOMVG$Cu#3C2[21DHW@D@r8F
%H<Z(M*Q.0VrH;Rb<3RZ)jEg50RGC+PhJlY\Ib.oe--dT6.GQ-.D]a#uW`kf0+^V[KGr>0sHNRZ4F)%+#+QjoP$=[P1`>4F>&(DE6
%V&nuRJtF#2lQrPi\/6]Mm\UI@&e/;bQ1R>2qkmQ<l[MI%`$Q]BP"6&g0KCCd?f\`4^i'6pLCo+f^Fk+DNVj>Hb2d)>R-@NoP*Knq
%<4@[$YVesg?6\,W:'(c-lIFC8BBn;oEdJ*TM__YacD\BW<bW[eIa(-90D\:s?[9f2giglpiW>F_mir41#@64cB2:>0kE6CV,chB0
%J'6F;"eCGqEQQ]?MN!r=ONPpUTQShV*+d;qNpDuu,Xoh@/6u,VB5N4Qrt#g/>H$Wn';C#$C)sTl=c@gSBPKVHj%HIA8CYQ3$K5?B
%UkD__cjICLPYDbk)\MZ-T/i00+QWZ,Nc<-`'h`KYhPd0t:YoNo%'-a7X(,A\l=sbS8U3cYQ#;3'1F?Ippns\^`Akq32Q$!V.Q3OY
%lk&BTf3A+-[@c.l>gc\Q7'@K!@=^sUR^:IC'7B&u.U-u:?>Q>?luX](@+=&3/r^R'p*$Q,L\UjHS:5KdQpjjl&p0Q4<[d.)p_=Ai
%fHi"+=(&2aT8LYu\?$$ifC`@U6trAI<74d]XTn,lP>;-0q(e$E<V?%mNKD>WFX`1;CsOEdg?S[qgMO];F\BK]Psqm79.4SW';'fY
%%o%+;RW3E5jLqCqW+;ObB)VKAT>0LVLltWh_gKTLU#=qn6V)Ha5Q]b3<L;+P9?(F@?5;LKMgfoH\Z'*/I3Hu[lHB*C:Q[ll>jX*X
%^LS`7a6hgDTYg8EmM>=s^#(9Oa2#qjMgQT2O2JT?Dd09IpM-ToZ0g=5.?9ou]YHi*OP#!U6sNWqpf`LNB!#0!qfq<?fdW\XCO9<R
%X`i^6gFYH.HV(Eme(r#R%%kQ9j#<9h]WgGUDV#V^V,\!W_:;1lU$g`lCZ'ph,&k%8]@4BG:l$P)j#?9j"R-K/+1`cp.HMFh8Nj4$
%oL'nKmZnogo;S'QD^Y#K]%]B&pS"0OlM=!fc_`RCH-%NNb%aQa-0X].o`cWiH&@V`\qRs5NlTstVWN-9d['h#=EpY[nSoRoQmC1$
%0_F6OZDX/1&1dfsDn!Ue$@/4QGT5se=AdKU0fmmt&CJjrPh1IbZDC44acWZJU1JV9\&^p4g)d^[=o[pMG*-Cl;Bj_6\*/UfjI4A]
%j20rt8,)CgdJ;R%HG/6Z]6bBe`r"e3p$f]E<P\nPJ8psii#4(3R^d<.8=TneQpNoWMJ.?)MU9Y891ll9X6-u4]T;SHenVrgFs9Ck
%[<5_F\KZm1j)2?iI-`/mhs\/40oG_QIWbXGU^%H+T\b%d*3Q:nlb'&d8MmhO!G)N*m1^/flG`_Z/ZmJ_H60OorBjHuaWJ,@qPbD4
%Nqg+ZI&?GHgEh/.p6K%RGMV[.`VX>`3.:hqC>=;_0#)7p0'*@o;3FHg!.u][9An_3*+J0q.?TJl%hYd[6:cKd>=tAGdaYITbJB$s
%`8cT.p=Y`Xg`h4%WV^I'Hs@Iccl,7CgYo^"U@YpN'_"lID`Q*/dQe_:jJtaGfXXDb"=ICWRCOqK[!\D<\jbdL0Bk@H/oEc/:%oJI
%,HcXtT7[m6JMMuW6M29sURQ&'Qg!tp>C+!@:r.'57Ub\4`cJ?d<5Ui$RL8ULk3WqTcb-(*=@WW4'"iuR7$6o][F\O2VQHiIiOU^U
%96T*#]g_+*&*\PZJW$D&hKoqnN"aOR3EFkNZuQYBY(L`fa1ZB<q9Vc,_'NL6fAP2uY6OYU]rYSJ02_l!i,'NPPr("46a4O;N%_c]
%Ls)2I0u%4R(3j".;,i.NTdh<sL0LI_iF#WQnpR4>pe(s/W]f^,k"L3%RZi=\_mI*(JYoI0WAKg_jqCO5!EB(uJ<.n`4cHCugk5Ha
%XW9T8Zp^BkaiPdE1TCh6Q(%q'c6NJ17KNR6b'ls]4'Q]YKm.2n26<5Q"M/$8?Skdq`)EmS&@f<UO;')(;5&rQW<$7bW&`>KCPYe1
%=dlV3Xs[(Hhqt/o#SKiV#S=j0=ln@QMNn;)0DSnj3(jBo#!na>'che'$e8ma$#e_"s*ma3:NLLfq2L4u(5MEGQ"]i%96ZSqV/mt9
%SG;0,.?iq);8QF'jrhDlOdRNb/fJ0lETOEr(s:IR?BZel%'!b%ok7q+M,+\*pUA72UI3.hA^sVBh>ODHjS?HfreP*7J4D"tV*QV$
%b+;ij)'T(Ho+:li$/:l4I2uI?JsRYlbApg$!Lg-eD"]dM9+%Z^[/QTsXPo)_7=c/F7,TTInflAZ?P84D1IV:%/HIBcWeo`B8d<hi
%fakF')kAcJEAg*kW_`j5QoG#qqWMIrPTh=AVf+\%0]&-?Iq+XFKj7Wmh8gi$<Q4i3f/tUZmq/7C">H+\#ZE`&al6ntLH!,"hMBIX
%KJ7_Z?\IcGQ%C!,(:^(\"&3:h.Q4kl&u$::G9&su<Y%Ae9Gnnl<GW`#k+:n<fa]o()m;(-Q[CZ:4([SHH&D?a\h"D:19Zm#d]4Z"
%_Kqa!ios6Q4>%=)2Q"OnDV='tVg+<LEL?g7'[t2$hD,2o3Mbsek3bWGMONDLXOguk$mV?AB`4#!!UVFeV\jUO+T,+['.'e/Fn,ib
%+VO$V(Tl5lT+7_VWK4?Cm:1Z1l#@\eTRVi466_[s5n!Q&OWpl@a,2LK!*=KAl[IdjC=.LF*kc.Y7XEJ;DR$Ct62!<%mJu@eW6X<^
%6[m*mR`<(BMa@4?]_+,e^:1'^#cL5KP]/ALY9L[2eBuk\$k#Urik6aH'<9W\/g`E".I??mJWi(GJt2]&#LaN.5L!.3SNip0SXsg!
%:bBNeb<187L1haUh[W)'7lc&L1Sh`JFca9(I\H_K_mMQ`>(.DCEt*BIq:cAm%)p`:Dl#sOmejQ"CNFh!/J/IVNi#d%[8$B@Fh?Xf
%IEH:Q!DSRTg2Es=9Og^UV#'G??],NLf7ods8nLE',kf2Jp?$`/Fh3a#/ns+UjhoZ[QS5Oh93C?-<9b6640T[,45$3n+3,&(a@=-/
%53"6FW:1s#BueP(#D<9jT_:;,dOj1r>MdYkEaD.;&kga<.&^X0r7!C4XDa.*XVg@T)-mP:.9+Rg'h`3K<o,'"M8uRb/MN;q<?*?>
%97eCp45Ts*b?"jVE7p[b[P=[kCH-2Vm&PntUGZ6!oT56XK9>/9Fjium-,D%#L9.U3(#D(0KG91DS-d+\^MbP^4H![$";^jK75=?i
%%l1CS];cDfEkp?24ZVl?(6[RZ9r%ElUp&HCRrs'IOtC>k`O6J4ZMPf8[J5(f9@@!!5^B=(AphtNY621!mH@79=U2qm3iD;0WjdqX
%LI(i:55Tr>lU*V7n7fcrJ=jTkPo?_IP5?f]._:7,f>7M,0tVRDDUXV1l>3Bk(uUs4,,b)M:etpirh;::0I[oY'"8Ml5_N=Pp4k&0
%K:,k3+_qdHE&\0W\f[d@npc22i=\l]^HbDo18&)(nJ4]ALM_EC3P0#$TV'Z^\SnZ(DsL::b8+g#l(=0oj$K4#W6jbBh(A3<g2FHb
%pObq)#2E%gQJfg+$8jeV3&rF[gp;d?X'?rTiVjGr'r$kWVZ2/G@^a\_jMZn/+p,+BVb:$4L,AON**4Qg`&p:(dSg9,cO.;qBi6*j
%\`,/;aST$!h(-df(>Y]tSE7I=!=qPngL8@^U@Yq)[",/jA]IrP('%Sg=Hb0ZOY"$+LpT:I;ZJ,8GIp8(a'R20\/&d-O5U^c0jOK6
%gagfn?`3r3U3jD:kjdG$HG?*s/ZdEJ(`$k3)m)FY'JnRs.>AHVPBVj)O1h@@E%T]TcB%,(QKMrM=Nc+up>#@)g08Y_p6K%RB<dbM
%Nn/h7cd@'CjnuV(6tuV4gEh/.p6+:-V-=f5oGE9k!r6]?(]dXUIb/^0NR[hcg.V'_lm9@&Di-R?>fppp^5Z09Zf-2#p[UK9[RH7t
%?IEVrF<GDagno+<ZV'3%iD+>E5Z3UMpHa+bp6(qA]nG"lh<4/_LASVH#CE)PpP%3RHJe-'4W\rAn%l$Wpj<LY6Q,L0P38d`7WVgZ
%.GB-UQg!tp97">qS0p?NY$nhqTeb),^e5)b2N?mrNS>O6]LD"IDs9,g3Srl&-):-:N,M'!-i&8tp:O?GG!?4[aI^_l`PdSPn4O,l
%OD#N"Epf0#OCk19e*3nVVNTBN9Xh?_=0n2_.0@i==keng=kV861)mgTRauA#/QjC'BjBFNg3-Y>Y=t=!jZS'^G6-7m>Bt$d@B^`V
%]gL,<]#/^hdepL)Z<s'8[XVHjGE&B\qPh)Ba"Qo>qY<tZf&G_fo%);$8&($r(?4l=jM[3QODY'um]G0TGO/J=,M9?0HumI,6RqD2
%q__0=j4D`S:IosGb`e>KWY-I=V+C)O&+`NGGp<LjqDXR8X%C;(QC?hFN,Ygp&a0j9B5S3t;sLIXI^`^)[488?4k9eeNu>X(MPMA@
%=^+e-d^/Ib>uL85kk7:f2dkIP8>/,1CR!SiOAnr@2%8;YprG"Pph=4:WO1_N#?P;WZm]lAeh4mp3SdT&"`(mkM5f*fJ)$5pk:Q<d
%XVNHWa_ls/Ya$*=kFP9M4LMo$*f.T*Ga\H&c;dkbo$=2BMo?!<gH#)fUpnk:<$?-^AColM=/@C6m[mEUMe6$Z=RC:Bq@o`@nrKdH
%inPL8/9W7`KK$($Po`AXWTp00/>lt(n,X;9OsiU90ND*r<*WtR%G;lcbHD:87Z_"A62LMD!%G'gADC(i;6:q\h&6TkrcmcFg#n$`
%:^t?KC*(#+9k6hBZ^hAl4kYN`E)ZTV-fmdi0[$$jiS+TPBOD)]@>DMqJr58gB$BM6.LIE!ajYDqKt!P'<mPBors:0\#\k;p01A1*
%DM_Bq<N]e`]!$bG+UF>bJeFT$EIEsgJ-O;OTi7UpJW.]QalEbma\jc]JTF^%LpEl>M!Qki?icU<p!>tC/"NMcf3kW_`)^k<W78'k
%QZUR)NM1fn&e4ok9+jsq^ss;G[$7LGW%C;1mNNVb?Dm6>TZjA24VDND*bG[$$PfnheF$en]HlVp.&o,LlR6b)<K4`P8]<@riT:16
%mEo+`/h(Gl`Z\jCaXnYf`?<YHECoAO5i_F6\:j&5!j#d]$.Fe4(Pgq#E6kcFTIQoBUTeo7bW198)hO^J1<B.HCP.s1crY4DJ51=+
%d+<(r8!6o.Tf;7#jNY[-!:1W4-^^(,7pTZ:h.mT+@`I?j9iY4g&H<6BnIhf:6!UA148VY&WFQ`"ZGImBbUE.l`J-TWm3XKKAP>OO
%f5BiuQpu'2>sBE--#gNNL2Z<"d`LDhqj-LM)'?odFO$!5]:Z](hqT.to7%(]CNqZWLrYS<L9m-f/[KK\%S*cP*BVY9j"XKNU?fZJ
%2.M=;2=nSZGFXpn#bn=_6kDB\A:+MjWIN"M;dXM&A/H"KC`=dFJt4R"kL`aJLW<fmX($6E@V+]0.DWa<Y*AHSm.9MlPnN'iW&ZpL
%SregXn'sd3-QH`i1*<61L?Wg)!]?.$`0Ns[R?&b$pjJk40Ef:aY?+b`@F,";k9a-kh`O`^;36=+X"$1lV]?"G'dg,!)g12G&IELM
%^nWfSH7Y1h<q(EgBE_kV:bgWh!?XTc#[W9jS0Ot!WZ#b\>FZ>=ILe$uZ_jR'A==rD[ZSlDeI=AQJj'P1:@O^+;akA,>SdrL/ZOEL
%3RnSH5clD(_1]a7W<2bJ.B43s[boSj(.f5?EjsLZUTHg@M!BjbK7Khn4^oHcISM%<>tm99okqZVU`^u:6er`LGMRb'pc2jtm%eTb
%V,Ak_cYd3*#chd;hUUgCX3>(hs"%$c+lnP<VoDq=N7.("`JfPh8;/=ZiL'\:YI7A?OYf1eSBhS:[A*Dl.$%llU9#*)S4RlG78)LI
%ehXbi[IC*Amo>L%AF5In9g_?/4h[efK6tOkWT)gd!D3t3Sg>,41^,t?%iVScEd,/PdY-Y[)Cb'8L17U;ghd3Qp#/:j\AZ7[!oq5Z
%1(jCS/X/6d-*Ul)gsK-DT^3W/W-_U-Tt9IciJ1Kq[n+E<fnp1kWQn$lL1^fY_$42NZi]/.]i`iuTJ7F@0o!UESO:lmB'Z[s<?hiL
%cE<lk7C67>h3dNXo#>blCk9fJ8re@.*=`Pc7*ATV+2:pHhgUpT2rKj7Wfk]Z2FmHpY]g@@./9o!H1ls<5rCc(=%t4^`6$^I?"GhC
%ESW@-)gdJoTU*jY3\R;E&*4p'9sVlop+ho][$hlEk&Wf)$VLdSQe;7X%42dp*\\TJHUS_T63PYJBC^&"+,VWaG3<"uP_&"rBXoMq
%&<`H2JM*]IBWaDe50_?]004Rb@Ll4<Rg#;JJIf[Z\qNciNL.RrL2g0M3mTuGI`)e^*>jJg1HmN^e=+s]Ak!0l-Ep$!/]gb9EF<H\
%Fr<$\B\;&t/(#QR&S&m/"c^V8H<(\*B[3-JBb66_XOVX=%]9C4>_OP_?E?;iJ(J23Dc?4,#9+(Z&Uc8'gr$(7LeC5qek9BgjB&>Y
%S$sUah[JiVaTFf-.*pT6I;&%;InTYEVeZrt&FqVsFq,g9Q)t,0'U4]F-l^,W`T54bDLOtN=]&p/kD6q3>>*3n'Fn3JXR:3\:[_ki
%o:g68#\Q#h-^RhX*K>>b.%9#^S^h\T>6D.V'D(>9XM3oTGN;rPir=u9pqfniPPJJ.`i#$W<c_sBpmnH'KR]E_?Ho0IQK_`#pi,>3
%/]1Z?[I<in#0'G?iaXQMON:"AXCZY)C49C1nF0q:*GZP6)\k+%5i:_ab=bu!?W=;n=uI#nHEQA*2Q>qGbHTBm/+mC(di]@_b]>?L
%[o6_N]pNML2L@G#F/E>I`/NkgcHlfR^&D3Z:d_8apq<&OMNc#//nXX]lF"sW$nj5Nf<pnX0go3ughZ`7b^=]=M^je$_c=cAf0k@G
%BSp)18[Mg*hpW]q]gU8:XAa?lcY(Ss!90KMq33P.9U.:8Fs9Oo%[BfKPTmFKL1@'V&ttiZ:2d2rF>`1nO[/I7?,F,d0n2t[gbFu'
%Fb"8\\WbAhTQ;6WaN6/CW1GW9)b:fS&sj5uf'rJVnb^g`FgAUd1nP"Cmiq!Xp(Ir2m&;!1#AN1c6lg:f*1bQL_V=\?kXIn+YCiUN
%]aGP!qr#7?cEYXWdF$Jf/'n+V0Vbi&j62TPLLKp:3]a\DiW_Wn%ZJ&nPN"Vb\s`q\F:S")-"!6QU/Y,"i&Egp:b>d6cAkZs:<KL'
%ZNGuj$@mJp*Qq`B+h'V\%_8\eZ0nrN$]".pSK48ubul;ga4\:MME7#0B1L!s=80`#m,4G@)G?W67je9[6C7<1?s\I?4SdsPFTDL!
%I<^.2RP/GCfQ)K^57\9T*IU&Y&mPg;^lH;7(:'Uj*et!LWe!8B&&JMc2#huK0\NtjpXqjRJ/N_U*<Gq4/a(N4,$"?t4ura%Y$b`\
%7gBA`bkJG2SXarMI<J"Ub0@tWhe2*;8eIdVh?K!K.!:$Nd^G`&>Ir[GW$m_h5f@GA,11HKJA6D?=G(:C[0>9QC#%CI+JrQ%;!eet
%fD*@U`g*;?ca##7@%pu=p$=#Y#]E0!Ne<a*LV_uP-M:Z!N(OYej^2cU3DncuF:j3o+F>N!8;9Z[ampf.A$u,3Rd:s]Vht6?<+?a&
%p/6"eU/u<._3u:;D5grAZB_]'C2aq,q2j2qa3S$qP*@NB.RbAoWENiZd%60D;mCi]0h>#S84`"'\mI/`($W<@RF$290m4.)-bF-9
%P_5ABSg`SCL,#]@/;lI7O<1UV<IbsjnT(54R^],0H<OKrJt+sDq`Z`A5->c:*V66C1F5-]e.ObZc.J^&@:XW3LMG[ra)^H4_H##N
%>9C_f%h%X(&!N_&j%UV)iR+t#eq^g&b3qtF1@:ST:OQ>5%,]t7+oR[65!SZ_XHhAdm2G6DKRA'"aZ1%2IO[b.7X@V'6F=c)V_R!V
%H3+-I</=ORio<`V<]0\4ocXH[$;91N&Fqb;=a]F#Cc%m'LH[9,UE$a,/F)^Dht1>CNMqo]W=Ps[!?$(H6d_d>e!U+s1LH_hMH=3`
%Ics-M1,1uKlCl+oNqIAW_[]MOpGZTN3DB2^:ONM("<k'<+2Vh]54h[-<UJ/R;^6I3Np5o?1nlP>),FbR6gmT'l_+nF&_6dP</=Y5
%!JnOn&=&;#I<1GDI;6K6l1)&%"\sc--'Zq[qGIkF&:G5i@Ojhjf37hXKa:)DM0SGfLttV=:PHlD,2p9O,-rtrFF,FSY5X!H'lepU
%].BjY+a,^jN,K%8Mbou?:5t(W>%KNr)A+cfW7Nc\:D<?]WLiAcd[gdXX%]m9[t<h^\V%4JQq$FWo"j(N)NftUUn7RZ&K(tjqkXjl
%KITa2XUmS;>A`h(KucWYI*PA.b!:V0lW/g,V*`U1VaBH(JKO`f&7OQU6ISRN"u!qXa88%T?_(qP#:UbR'nNW`7&o)s8SY!!*utUN
%V%=RTm(,T?:8G&28e2H'884%:(2TPoJ2?Ji>:2>O!2L`4S_3#6[)5Dpe]&G=W0AHiU/'[F:)!a?(\XO9!AiZCga\H/Tmk"J5#'.c
%QSX_JfkjZ4*F$d>OFAaIE(N(u_gJbXUbXXi_'ur*9%VE:%Zfou5;uP*##rQ`ON%JXP+!J:Vd0E/D]3d9SXnT@=Vk8nc:V=Fb7pFh
%er^kn)K0i-QRgf@PalINi:@@Y,H\2.2<&$qUkPSn_]J=E]R5"!fho#eq1fep&N%S&*U$K*rSaF\<VVMAqTt#_1&%OS"\?Jl^9qBK
%#KqmL8.Ml<7@&0hRc02VaZOD2F:T6YV@rO#%)G"aB7dk*+g=e*D;Nu#K8GHV1#DY]q7;tAG.dXJ%I"/$<]RX4aODB_G\TU+dTPV"
%2T3]K+m;94&mme%+d@bT&.V^-<M<=J<2$md@K9Z5E1(6<T6=:iPVij;peZYa2Bb4@+aDr%e#<Y3.eqIQfMAjEj`uSo)he,f'iHb\
%,2uE.C,K3k9aI_=k%,U&&9b!4h\76k-BE.[_?.`Ak?aTR"!?o)'<65iSVe!%OIegp,,DS+[&4t`0Us9%+*pb^+U3&S5q^CBhp9-Q
%ccR'eq-TH-k52nr:\iWB^AaIKqmZUuq]Gh-O+2JhQJg*hiue9sO8nH?J,&J^o>a)oft[CL^]24Or8Yg>rq::1mN;Gt%tFL!l^pB?
%qG2V=qg\CQ5Q1-4n,M/"r@]Gokk`,fs7sG.&-)(Drmh#QY@F^a~>
%AI9_PrivateDataEnd
